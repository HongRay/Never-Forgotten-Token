{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/evm/dist/thirdweb-dev-sdk-evm.esm.js"],"sourcesContent":["export { G as ALL_ROLES, bn as AbiObjectSchema, bo as AbiSchema, bm as AbiTypeSchema, be as AddressOrEnsSchema, bd as AddressSchema, v as AdminRoleMissingError, A as AssetNotFoundError, t as AuctionAlreadyStartedError, w as AuctionHasNotEndedError, bh as BYOCContractMetadataSchema, ba as BigNumberSchema, bc as BigNumberTransformSchema, bb as BigNumberishSchema, av as COMMON_FACTORY, C as CONTRACTS_MAP, aT as CONTRACT_ADDRESSES, at as CREATE2_FACTORY_BYTECODE, bf as CallOverrideSchema, aX as ChainId, br as ChainIdToAddressSchema, bJ as CommonContractOutputSchema, bI as CommonContractSchema, bM as CommonPlatformFeeSchema, bL as CommonPrimarySaleSchema, bK as CommonRoyaltySchema, bO as CommonSymbolSchema, bN as CommonTrustedForwarderSchema, bG as CompilerMetadataFetchedSchema, bp as CompilerTypeInput, bF as ContractInfoSchema, bk as CustomContractDeploy, bi as CustomContractInput, bj as CustomContractOutput, bl as CustomContractSchema, bs as CustomFactoryInput, ay as DEPLOYER_ABI, ax as DEPLOYER_BYTECODE, bv as DeployTypeInput, bx as DeploymentNetworkInput, b$ as DropErc1155ContractDeploy, bZ as DropErc1155ContractInput, b_ as DropErc1155ContractOutput, c0 as DropErc1155ContractSchema, bX as DropErc721ContractDeploy, bV as DropErc721ContractInput, bW as DropErc721ContractOutput, bY as DropErc721ContractSchema, D as DuplicateFileNameError, s as DuplicateLeafsError, E as EditionDropInitializer, a as EditionInitializer, b2 as EventType, x as ExtensionNotImplementedError, by as ExtraPublishMetadataSchemaInput, bz as ExtraPublishMetadataSchemaOutput, bu as FactoryDeploymentSchema, r as FetchError, F as FileNameMissingError, bA as FullPublishMetadataSchemaInput, bB as FullPublishMetadataSchemaOutput, u as FunctionDeprecatedError, aw as GAS_LIMIT_FOR_DEPLOYER, I as InvalidAddressError, b1 as LINK_TOKEN_ADDRESS, L as ListingNotFoundError, c3 as MarketplaceContractDeploy, c1 as MarketplaceContractInput, c2 as MarketplaceContractOutput, c4 as MarketplaceContractSchema, M as MarketplaceInitializer, b as MarketplaceV3Initializer, bP as MerkleSchema, q as MissingOwnerRoleError, o as MissingRoleError, bt as ModularFactoryInput, c as MultiwrapInitializer, a$ as NATIVE_TOKENS, a_ as NATIVE_TOKEN_ADDRESS, N as NFTCollectionInitializer, d as NFTDropInitializer, p as NotEnoughTokensError, n as NotFoundError, aS as OZ_DEFENDER_FORWARDER_ADDRESS, i as PREBUILT_CONTRACTS_APPURI_MAP, h as PREBUILT_CONTRACTS_MAP, c7 as PackContractDeploy, c5 as PackContractInput, c6 as PackContractOutput, c8 as PackContractSchema, P as PackInitializer, bq as PreDeployMetadata, bH as PreDeployMetadataFetchedSchema, bC as ProfileSchemaInput, bD as ProfileSchemaOutput, cv as ProposalOutputSchema, bE as PublishedContractSchema, Q as QuantityAboveLimitError, R as RestrictedTransferError, bw as RouterTypeInput, bg as SDKOptionsSchema, au as SIGNATURE, b9 as SUPPORTED_FEATURES, e as SignatureDropInitializer, bQ as SnapshotEntryInput, bS as SnapshotEntryWithProofSchema, bU as SnapshotInfoSchema, bR as SnapshotInputSchema, bT as SnapshotSchema, f as SplitInitializer, cb as SplitsContractDeploy, c9 as SplitsContractInput, ca as SplitsContractOutput, cc as SplitsContractSchema, S as StaticJsonRpcBatchProvider, aM as THIRDWEB_DEPLOYER, T as TokenDropInitializer, cn as TokenErc1155ContractDeploy, cl as TokenErc1155ContractInput, cm as TokenErc1155ContractOutput, co as TokenErc1155ContractSchema, cf as TokenErc20ContractDeploy, cd as TokenErc20ContractInput, ce as TokenErc20ContractOutput, cg as TokenErc20ContractSchema, cj as TokenErc721ContractDeploy, ch as TokenErc721ContractInput, ci as TokenErc721ContractOutput, ck as TokenErc721ContractSchema, g as TokenInitializer, y as TransactionError, U as UploadError, ct as VoteContractDeploy, cr as VoteContractInput, cs as VoteContractOutput, cu as VoteContractSchema, V as VoteInitializer, cp as VoteSettingsInputSchema, cq as VoteSettingsOuputSchema, W as WrongListingTypeError, aC as computeCreate2FactoryTransaction, aF as computeDeploymentAddress, aJ as computeDeploymentInfo, aG as computeEOAForwarderAddress, aH as computeForwarderAddress, ak as constructAbiFromBytecode, ag as detectFeatures, ah as detectFeaturesFromBytecode, aK as encodeConstructorParamsForImplementation, $ as estimateTransactionCost, a5 as extractCommentFromMetadata, a6 as extractConstructorParamsFromAbi, a7 as extractFunctionsFromAbi, ac as extractIPFSHashFromBytecode, a8 as extractMinimalProxyImplementationAddress, X as fetchAbiFromAddress, aO as fetchAndCacheDeployMetadata, a1 as fetchContractMetadata, K as fetchContractMetadataFromAddress, O as fetchContractMetadataFromBytecode, af as fetchExtendedReleaseMetadata, ae as fetchPreDeployMetadata, aN as fetchPublishedContractFromPolygon, ad as fetchRawPredeployMetadata, a2 as formatCompilerMetadata, al as getAllDetectedExtensions, aj as getAllDetectedExtensionsFromBytecode, ai as getAllDetectedFeatures, b4 as getChainIdFromNetwork, b5 as getChainIdOrName, b3 as getChainProvider, ap as getCompositeABI, aU as getContractAddressByChainId, J as getContractMetadataFromCache, k as getContractName, aV as getContractPublisherAddress, j as getContractTypeForRemoteName, aB as getCreate2FactoryAddress, aL as getCreate2FactoryDeploymentInfo, Y as getDefaultGasOverrides, Z as getDynamicFeeData, _ as getGasPrice, aE as getInitBytecodeWithSalt, aI as getKeylessTxn, aW as getMultichainRegistryAddress, b0 as getNativeTokenByChainId, a0 as getPolygonGasPriorityFee, b7 as getProviderFromRpcUrl, H as getRoleHash, aD as getSaltHash, b8 as getSignerAndProvider, aZ as getSupportedChains, a3 as hasMatchingAbi, B as includesErrorMessage, b6 as isChainConfig, az as isContractDeployed, as as isDowngradeVersion, aA as isEIP155Enforced, an as isExtensionEnabled, am as isFeatureEnabled, ar as isIncrementalVersion, l as isProvider, m as isSigner, ao as joinABIs, a4 as matchesAbiFromBytecode, z as parseRevertReason, aQ as resolveAddress, aa as resolveContractUriAndBytecode, a9 as resolveContractUriFromAddress, aP as resolveEns, ab as resolveImplementation, aY as setSupportedChains, aR as signTypedDataInternal, aq as toSemver } from '../../dist/index-6d283666.esm.js';\nexport { C as ContractEncoder, f as fetchCurrencyMetadata, a as fetchCurrencyValue, i as isNativeToken } from '../../dist/fetchCurrencyValue-473fae98.esm.js';\nexport { b as ContractAppURI, a as ContractEvents, C as ContractMetadata, G as GasCostEstimator, d as detectContractFeature, h as hasFunction, t as toEther } from '../../dist/contract-appuri-c7bd9720.esm.js';\nexport { C as ContractRoles } from '../../dist/contract-roles-fc490e1c.esm.js';\nexport { a as ContractOwner, C as ContractRoyalty, D as DelayedReveal } from '../../dist/contract-owner-7593487e.esm.js';\nexport { C as ContractPrimarySale } from '../../dist/contract-sales-e44e98fc.esm.js';\nexport { D as DropClaimConditions } from '../../dist/drop-claim-conditions-2d806ba6.esm.js';\nexport { D as DropErc1155ClaimConditions, E as Erc1155, a as Erc1155SignatureMintable } from '../../dist/erc-1155-3e1b6982.esm.js';\nexport { E as Erc20, a as Erc20SignatureMintable, n as normalizeAmount } from '../../dist/erc-20-6523d116.esm.js';\nexport { E as Erc721, a as Erc721WithQuantitySignatureMintable, t as toWei } from '../../dist/erc-721-e0dd2098.esm.js';\nexport { A as Account, a as AccountFactory, f as AdminFlag, d as Airdrop1155, b as Airdrop20, c as Airdrop721, C as ContractPublishedMetadata, D as DEFAULT_PERMISSIONS, E as ExtensionManager, P as PermissionSnapshotSchema, h as SignerPermissionRequest, g as SignerPermissionRequestV1, S as SignerPermissionsSchema, e as extractEventsFromAbi } from '../../dist/airdrop-erc1155-f460db19.esm.js';\nexport { C as ContractInterceptor } from '../../dist/contract-interceptor-69c9c882.esm.js';\nexport { C as ContractPlatformFee } from '../../dist/contract-platform-fee-e14ecc39.esm.js';\nexport { D as DeployTransaction, T as Transaction, e as engineSendFunction, p as prepareGaslessRequest } from '../../dist/transactions-89262635.esm.js';\nexport { M as MarketplaceV3DirectListings, a as MarketplaceV3EnglishAuctions, b as MarketplaceV3Offers, S as Status } from '../../dist/marketplacev3-offers-edf23139.esm.js';\nexport { A as APPROVED_IMPLEMENTATIONS, a as ContractDeployer, C as ContractVerifier, L as LOCAL_NODE_PKEY, S as SUPPORTED_CHAIN_IDS, T as ThirdwebSDK, U as UserWallet, f as checkVerificationStatus, h as computeCloneFactoryAddress, t as convertParamValues, l as deployCreate2Factory, m as directDeployDeterministic, o as directDeployDeterministicPublished, n as directDeployDeterministicWithUri, e as extractFunctionParamsFromAbi, b as getAllDetectedExtensionNames, g as getAllDetectedFeatureNames, x as getApprovedImplementation, y as getDefaultTrustedForwarders, u as getDeployArguments, k as getEncodedConstructorParamsForThirdwebContract, j as getThirdwebContractAddress, w as getTrustedForwarders, i as isVerifiedOnEtherscan, q as predictAddressDeterministic, s as predictAddressDeterministicPublished, r as predictAddressDeterministicWithUri, p as predictThirdwebContractAddress, d as verify, v as verifyThirdwebPrebuiltImplementation } from '../../dist/sdk-c725ec97.esm.js';\nexport { B as BaseSignaturePayloadInput, j as ClaimConditionInputArray, i as ClaimConditionInputSchema, e as ClaimConditionMetadataSchema, k as ClaimConditionOutputSchema, C as ClaimEligibility, l as CurrencySchema, m as CurrencyValueSchema, G as GenericRequest, w as MintRequest1155, M as MintRequest20, v as MintRequest721, x as MintRequest721withQuantity, P as PartialClaimConditionInputSchema, q as Signature1155PayloadInput, r as Signature1155PayloadInputWithTokenId, s as Signature1155PayloadOutput, S as Signature20PayloadInput, n as Signature20PayloadOutput, o as Signature721PayloadInput, p as Signature721PayloadOutput, t as Signature721WithQuantityInput, u as Signature721WithQuantityOutput, a as approveErc20Allowance, c as convertToReadableQuantity, d as createMerkleTreeFromAllowList, b as createSnapshot, f as fetchSnapshotEntryForAddress, g as getProofsForAllowListEntry, h as hashAllowListEntry } from '../../dist/signature-eb4981a3.esm.js';\nexport { k as EditionMetadataInputOrUriSchema, j as EditionMetadataInputSchema, E as EditionMetadataOutputSchema, i as EditionMetadataWithOwnerOutputSchema, O as OptionalPropertiesInput, P as ProposalState, T as TokenMintInputSchema, e as compatibleExtensions, f as computeNativeTokenAddress, h as deployContractDeterministicRaw, b as getBuyWithCryptoHistory, c as getBuyWithCryptoQuote, d as getBuyWithCryptoStatus, g as getCachedAbiForContract, m as matchesPrebuiltAbi, a as toDisplayValue, t as toUnits } from '../../dist/getStatus-dd9c1043.esm.js';\nexport { e as extractConstructorParams, a as extractFunctions } from '../../dist/contract-publisher-69217d59.esm.js';\nexport { E as EndDateSchema, R as RawDateSchema, S as StartDateSchema, a as assertEnabled } from '../../dist/assertEnabled-56c46fa5.esm.js';\nexport { f as fetchSourceFilesFromMetadata } from '../../dist/fetchSourceFilesFromMetadata-f1d39e93.esm.js';\nexport { c as cleanCurrencyAddress } from '../../dist/cleanCurrencyAddress-049d84d8.esm.js';\nexport { n as normalizePriceValue } from '../../dist/normalizePriceValue-c41e4879.esm.js';\nexport { s as setErc20Allowance } from '../../dist/setErc20Allowance-41394a37.esm.js';\nexport { h as hasERC20Allowance } from '../../dist/hasERC20Allowance-d57ffe99.esm.js';\nexport { c as createTransactionBatches, d as deployContractDeterministic, a as deployWithThrowawayDeployer, e as estimateGasForDeploy, g as getDeploymentInfo } from '../../dist/deployContractDeterministic-86dc79b9.esm.js';\nexport { a as InterfaceId_IERC1155, I as InterfaceId_IERC721 } from '../../dist/QueryParams-0434a670.esm.js';\nexport { L as ListingType } from '../../dist/ListingType-e0156743.esm.js';\nexport { V as VoteType } from '../../dist/Vote-f939a040.esm.js';\nexport { b as ERC1155WrappableSchema, E as ERC20WrappableSchema, a as ERC721WrappableSchema, d as PackMetadataInputSchema, c as PackRewardsOutputSchema, P as PackRewardsSchema } from '../../dist/pack-1c3971fe.esm.js';\nexport { c as getBlock, d as getBlockNumber, e as getBlockWithTransactions, b as getChainId, g as getContract, a as getContractFromAbi, w as watchBlock, f as watchBlockNumber, h as watchBlockWithTransactions, i as watchTransactions } from '../../dist/watchTransactions-82802e76.esm.js';\nimport 'ethers';\nimport 'zod';\nimport '@thirdweb-dev/chains';\nimport '@thirdweb-dev/crypto';\nimport 'tiny-invariant';\nimport 'bn.js';\nimport 'bs58';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\nimport '@thirdweb-dev/storage';\nimport 'fast-deep-equal';\nimport '../../dist/marketplace-9183b935.esm.js';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json';\nimport '@thirdweb-dev/generated-abis';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWFactory.json';\nimport '@thirdweb-dev/merkletree';\nimport 'uuid';\nimport 'thirdweb';\nimport 'thirdweb/pay';\nimport 'thirdweb/utils';\nimport '@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json';\n\n// handle browser vs node global\n// eslint-disable-next-line better-tree-shaking/no-top-level-side-effects\nglobalThis.global = globalThis;\n//#endregion @r/legacy_packages/sdk/src/evm/pay\n"],"names":[],"mappings":";AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,gCAAgC;AAChC,yEAAyE;AACzE,WAAW,MAAM,GAAG,YACpB,+CAA+C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/index-6d283666.esm.js"],"sourcesContent":["import { providers, utils, BigNumber, constants, Contract } from 'ethers';\nimport { z } from 'zod';\nimport { defaultChains, getValidChainRPCs, Polygon, Flag, FlagTestnet, Mumbai, Optimism, OpSepoliaTestnet, Base, BaseSepoliaTestnet, Zora, ZoraSepoliaTestnet, Celo, CeloAlfajoresTestnet } from '@thirdweb-dev/chains';\nimport { sha256HexSync } from '@thirdweb-dev/crypto';\nimport invariant from 'tiny-invariant';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport IBurnableERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport IDrop from '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport DropERC20_V2Abi from '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport IDropSinglePhase from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport IDropSinglePhaseV1 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport ERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport IERC20PermitAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport IMintableERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport MulticallAbi from '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport ISignatureMintERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport IERC20MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport IBurnableERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport IClaimableERC721 from '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport DelayedRevealAbi from '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport DropERC721_V3Abi from '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport Erc721Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport Erc721EnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport Erc721AQueryableAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport Erc721SupplyAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport ILazyMintAbi from '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport IMintableERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport SignatureMintERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport SignatureMintERC721_V1Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport TieredDropAbi from '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport SharedMetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport zora_IDropERC721 from '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport ILoyaltyCardAbi from '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport INFTMetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport IERC721MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport IBurnableERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport IClaimableERC1155 from '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport IDropMultiPhase1155 from '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport DropERC1155_V2Abi from '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport IDropSinglePhase1155 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport IDropSinglePhase1155_V1 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport Erc1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport Erc1155MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport Erc1155SupplyAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport Erc1155EnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport IMintableERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport ISignatureMintERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport IERC2771ContextAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport IAppURI from '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport IContractMetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport IDirectListingsAbi from '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport IEnglishAuctionsAbi from '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport IOffersAbi from '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport IPackVRFAbi from '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport IPermissionsAbi from '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport IPermissionsEnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport IThirdwebPlatformFeeAbi from '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport IThirdwebPrimarySaleAbi from '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport IThirdwebRoyaltyAbi from '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport IOwnableAbi from '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport IAirdropERC20 from '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport IAirdropERC721 from '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport IAirdropERC1155 from '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport IAccountFactoryCore from '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport IAccountPermissions from '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport IAccountPermissionsV1 from '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport IAccount from '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport { Interface } from 'ethers/lib/utils';\nimport EventEmitter from 'eventemitter3';\n\nfunction getProcessEnv(key) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  if (typeof process !== \"undefined\") {\n    if (process.env[key]) {\n      return process.env[key];\n    }\n  }\n  return defaultValue;\n}\n\nconst ContractPublisher_address = \"0xf5b896Ddb5146D5dA77efF4efBb3Eae36E300808\"; // Polygon only\n\n/**\n * @internal\n */\nfunction getContractPublisherAddress() {\n  return getProcessEnv(\"contractPublisherAddress\", ContractPublisher_address);\n}\n\n/**\n * util function to check for signer, ripped out of ethers Signer.isProvider\n *\n * @param value - possible signer\n * @returns boolean if value is a signer\n * @internal\n */\nfunction isSigner(value) {\n  return !!(value && value._isSigner);\n}\n\n/**\n * util function to check for provider, ripped out of ethers providers.Provider.isProvider\n *\n * @param value - possible provider\n * @returns boolean if value is a provider\n * @internal\n */\nfunction isProvider(value) {\n  return !!(value && value._isProvider);\n}\n\nconst DEFAULT_BATCH_TIME_LIMIT_MS = 10;\nconst DEFAULT_BATCH_SIZE_LIMIT = 200;\nconst DEFAULT_BATCH_OPTIONS = {\n  timeLimitMs: DEFAULT_BATCH_TIME_LIMIT_MS,\n  sizeLimit: DEFAULT_BATCH_SIZE_LIMIT\n};\n/**\n * mostly copied from ethers.js directly but make it a StaticJsonRpcProvider\n * @internal\n */\nclass StaticJsonRpcBatchProvider extends providers.StaticJsonRpcProvider {\n  constructor(url, network) {\n    let batchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_BATCH_OPTIONS;\n    super(url, network);\n    this._timeLimitMs = batchOptions.timeLimitMs || DEFAULT_BATCH_TIME_LIMIT_MS;\n    this._sizeLimit = batchOptions.sizeLimit || DEFAULT_BATCH_SIZE_LIMIT;\n    this._pendingBatchAggregator = null;\n    this._pendingBatch = null;\n  }\n  sendCurrentBatch(request) {\n    // if we still have a timeout clear that first\n    if (this._pendingBatchAggregator) {\n      clearTimeout(this._pendingBatchAggregator);\n    }\n    // Get the current batch and clear it, so new requests\n    // go into the next batch\n    const batch = this._pendingBatch || [];\n    this._pendingBatch = null;\n    this._pendingBatchAggregator = null;\n\n    // Get the request as an array of requests\n    const request_ = batch.map(inflight => inflight.request);\n    this.emit(\"debug\", {\n      action: \"requestBatch\",\n      request: utils.deepCopy(request),\n      provider: this\n    });\n    return utils.fetchJson(this.connection, JSON.stringify(request_)).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request_,\n        response: result,\n        provider: this\n      });\n\n      // For each result, feed it to the correct Promise, depending\n      // on whether it was a success or error\n      batch.forEach((inflightRequest_, index) => {\n        const payload = result[index];\n\n        // there may *not* be a payload for a given request (typically RPC error level)\n        if (payload) {\n          // if there is a payload, check for an error\n          if (payload.error) {\n            const error = new Error(payload.error.message);\n            error.code = payload.error.code;\n            error.data = payload.error.data;\n            inflightRequest_.reject(error);\n          } else {\n            // if there's no error resolve the request\n            inflightRequest_.resolve(payload.result);\n          }\n        } else {\n          // if there is no payload, reject the request\n          inflightRequest_.reject(new Error(\"No response for request\"));\n        }\n      });\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request_,\n        provider: this\n      });\n\n      // If there was an error, reject all the requests\n      batch.forEach(inflightRequest_ => {\n        inflightRequest_.reject(error);\n      });\n    });\n  }\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    if (this._pendingBatch === null) {\n      this._pendingBatch = [];\n    }\n    const inflightRequest = {\n      request,\n      resolve: null,\n      reject: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n    this._pendingBatch.push(inflightRequest);\n\n    // if we would go *over* the size limit of the batch with this request, send the batch now\n    if (this._pendingBatch.length === this._sizeLimit) {\n      this.sendCurrentBatch(request);\n    }\n    if (!this._pendingBatchAggregator) {\n      // Schedule batch for next event loop + short duration\n      this._pendingBatchAggregator = setTimeout(() => {\n        this.sendCurrentBatch(request);\n      }, this._timeLimitMs);\n    }\n    return promise;\n  }\n}\n\nconst ChainInfoInputSchema = /* @__PURE__ */(() => z.object({\n  rpc: z.array(z.string().url()),\n  chainId: z.number(),\n  nativeCurrency: z.object({\n    name: z.string(),\n    symbol: z.string(),\n    decimals: z.number()\n  }),\n  slug: z.string()\n}))();\n\n/**\n * @public\n */\nconst SDKOptionsSchema = /* @__PURE__ */(() => z.object({\n  // @ts-expect-error - zod doesn't know anything about readonly\n  supportedChains: z.array(ChainInfoInputSchema).default(defaultChains),\n  clientId: z.string().optional(),\n  secretKey: z.string().optional(),\n  readonlySettings: z.object({\n    rpcUrl: z.string().url(),\n    chainId: z.number().optional()\n  }).optional(),\n  gasSettings: z.object({\n    maxPriceInGwei: z.number().min(1, \"gas price cannot be less than 1\").default(300),\n    speed: z.enum([\"standard\", \"fast\", \"fastest\"]).default(\"fastest\")\n  }).default({\n    maxPriceInGwei: 300,\n    speed: \"fastest\"\n  }),\n  gasless: z.union([z.object({\n    openzeppelin: z.object({\n      relayerUrl: z.string().url(),\n      relayerForwarderAddress: z.string().optional(),\n      useEOAForwarder: z.boolean().default(false),\n      domainName: z.string().default(\"GSNv2 Forwarder\"),\n      domainVersion: z.string().default(\"0.0.1\"),\n      domainSeparatorVersion: z.string().default(\"1\")\n    }),\n    experimentalChainlessSupport: z.boolean().default(false)\n  }), z.object({\n    biconomy: z.object({\n      apiId: z.string(),\n      apiKey: z.string(),\n      deadlineSeconds: z.number().min(1, \"deadlineSeconds cannot be les than 1\").default(3600)\n    })\n  }), z.object({\n    engine: z.object({\n      relayerUrl: z.string().url().transform(url => url.replace(/\\/$/, \"\")),\n      relayerForwarderAddress: z.string().optional(),\n      domainName: z.string().default(\"GSNv2 Forwarder\"),\n      domainVersion: z.string().default(\"0.0.1\"),\n      domainSeparatorVersion: z.string().default(\"1\")\n    }),\n    experimentalChainlessSupport: z.boolean().default(false)\n  })]).optional(),\n  gatewayUrls: z.array(z.string()).optional(),\n  rpcBatchSettings: z.object({\n    sizeLimit: z.number().default(200),\n    timeLimit: z.number().default(10)\n  }).optional()\n}).default({\n  gasSettings: {\n    maxPriceInGwei: 300,\n    speed: \"fastest\"\n  }\n}))();\n\n/**\n * @public\n * All these configuration options are optional with sane defaults:\n * @example\n * ```javascript\n * {\n *   readonlySettings: {\n *     rpcUrl, // force read calls to go through your own RPC url\n *     chainId, // reduce RPC calls by sepcifying your chain ID\n *   },\n *   gasSettings: {\n *     maxPriceInGwei, // Maximum gas price for transactions (default 300 gwei)\n *     speed, // the tx speed setting: 'standard'|'fast|'fastest' (default: 'fastest')\n *   },\n *   gasless: {\n *     // By specifying a gasless configuration - all transactions will get forwarded to enable gasless transactions\n *     openzeppelin: {\n *       relayerUrl, // your OZ Defender relayer URL\n *       relayerForwarderAddress, // the OZ defender relayer address (defaults to the standard one)\n *     },\n *     biconomy: {\n *       apiId, // your Biconomy API Id\n *       apiKey, // your Biconomy API Key\n *       deadlineSeconds, // your Biconomy timeout preference\n *     },\n *   },\n * }\n * ```\n */\n\n/**\n * @internal\n */\n\n/**\n * @public\n */\n\nvar pkg = {\n\tname: \"@thirdweb-dev/sdk\",\n\tversion: \"4.0.99\",\n\tdescription: \"The main thirdweb SDK.\",\n\trepository: \"https://github.com/thirdweb-dev/js/tree/main/legacy_packages/sdk\",\n\tlicense: \"Apache-2.0\",\n\tmain: \"dist/thirdweb-dev-sdk.cjs.js\",\n\tmodule: \"dist/thirdweb-dev-sdk.esm.js\",\n\tbrowser: {\n\t\t\"./dist/thirdweb-dev-sdk.esm.js\": \"./dist/thirdweb-dev-sdk.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./dist/thirdweb-dev-sdk.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/thirdweb-dev-sdk.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/thirdweb-dev-sdk.cjs.js\"\n\t\t},\n\t\t\"./evm\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/dist/thirdweb-dev-sdk-evm.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/dist/thirdweb-dev-sdk-evm.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/dist/thirdweb-dev-sdk-evm.cjs.js\"\n\t\t},\n\t\t\"./evm/zksync\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/zksync/dist/thirdweb-dev-sdk-evm-zksync.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/zksync/dist/thirdweb-dev-sdk-evm-zksync.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/zksync/dist/thirdweb-dev-sdk-evm-zksync.cjs.js\"\n\t\t},\n\t\t\"./evm/functions\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/functions/dist/thirdweb-dev-sdk-evm-functions.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/functions/dist/thirdweb-dev-sdk-evm-functions.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/functions/dist/thirdweb-dev-sdk-evm-functions.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\tfiles: [\n\t\t\"dist/\",\n\t\t\"evm/\",\n\t\t\"server/\"\n\t],\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"index.ts\",\n\t\t\t\"evm/index.ts\",\n\t\t\t\"evm/functions/index.ts\",\n\t\t\t\"evm/zksync/index.ts\"\n\t\t],\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\"\n\t\t\t]\n\t\t}\n\t},\n\tsideEffects: false,\n\tscripts: {\n\t\tformat: \"prettier --write 'src/**/*'\",\n\t\tlint: \"eslint src/\",\n\t\tfix: \"eslint src/ --fix\",\n\t\tclean: \"rm -rf dist/\",\n\t\t\"generate-docs\": \"mkdir -p etc && pnpm generate-docs:evm && pnpm generate-snippets\",\n\t\t\"generate-docs:evm\": \"api-extractor run --local --config ./config/api-extractor-evm.json && api-documenter markdown -i ./temp -o ./docs/evm && rm -rf ./temp-evm && mv ./temp ./temp-evm\",\n\t\t\"generate-snippets\": \"node ./scripts/generate-snippets.mjs && node ./scripts/generate-feature-snippets-evm.mjs\",\n\t\tbuild: \"tsc && preconstruct build\",\n\t\t\"test:all\": \"SWC_NODE_PROJECT=./tsconfig.test.json nyc --reporter lcovonly --report-dir ./coverage/evm mocha --config './test/evm/.mocharc.json' --timeout 180000 --parallel './test/evm/**/*.test.ts'\",\n\t\ttest: \"make test-evm\",\n\t\t\"test:single\": \"SWC_NODE_PROJECT=./tsconfig.test.json mocha --config './test/evm/.mocharc.json' --timeout 90000\",\n\t\tpush: \"yalc push\",\n\t\ttypedoc: \"node scripts/typedoc.mjs\"\n\t},\n\tdevDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.549.0\",\n\t\t\"@ethersproject/abstract-provider\": \"^5.7.0\",\n\t\t\"@microsoft/api-documenter\": \"^7.24.5\",\n\t\t\"@microsoft/api-extractor\": \"^7.43.0\",\n\t\t\"@microsoft/tsdoc\": \"^0.14.2\",\n\t\t\"@nomiclabs/hardhat-ethers\": \"^2.2.3\",\n\t\t\"@preconstruct/cli\": \"2.7.0\",\n\t\t\"@swc-node/register\": \"^1.9.0\",\n\t\t\"@swc/core\": \"^1.5.24\",\n\t\t\"@thirdweb-dev/tsconfig\": \"^0.1.7\",\n\t\t\"@types/bn.js\": \"^5.1.5\",\n\t\t\"@types/chai\": \"^4.3.14\",\n\t\t\"@types/deep-equal-in-any-order\": \"^1.0.3\",\n\t\t\"@types/mocha\": \"^10.0.6\",\n\t\t\"@types/node\": \"20.12.7\",\n\t\t\"@types/uuid\": \"^9.0.8\",\n\t\tchai: \"^4.4.1\",\n\t\t\"deep-equal-in-any-order\": \"^1.1.20\",\n\t\t\"dotenv-mono\": \"^1.3.14\",\n\t\teslint: \"8.57.0\",\n\t\t\"eslint-config-thirdweb\": \"^0.1.9\",\n\t\t\"eslint-plugin-better-tree-shaking\": \"0.0.4\",\n\t\t\"eslint-plugin-import\": \"^2.29.1\",\n\t\t\"eslint-plugin-inclusive-language\": \"^2.2.1\",\n\t\t\"eslint-plugin-prettier\": \"^5.1.3\",\n\t\t\"eslint-plugin-tsdoc\": \"^0.3.0\",\n\t\tethers: \"^5.7.2\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\thardhat: \"^2.22.2\",\n\t\tmocha: \"10.4.0\",\n\t\tnyc: \"^15.1.0\",\n\t\trimraf: \"5.0.5\",\n\t\t\"typedoc-gen\": \"^1.0.2\",\n\t\ttypescript: \"5.4.4\",\n\t\t\"zksync-ethers\": \"^5.7.0\"\n\t},\n\tpeerDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.215.0\",\n\t\tethers: \"^5\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\t\"zksync-ethers\": \"^5.6.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@aws-sdk/client-secrets-manager\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"ethers-aws-kms-signer\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"zksync-ethers\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdependencies: {\n\t\t\"@eth-optimism/sdk\": \"3.3.2\",\n\t\t\"@thirdweb-dev/chains\": \"0.1.120\",\n\t\t\"@thirdweb-dev/contracts-js\": \"1.3.23\",\n\t\t\"@thirdweb-dev/crypto\": \"0.2.6\",\n\t\t\"@thirdweb-dev/generated-abis\": \"0.0.2\",\n\t\t\"@thirdweb-dev/merkletree\": \"0.2.6\",\n\t\t\"@thirdweb-dev/storage\": \"2.0.15\",\n\t\tabitype: \"1.0.0\",\n\t\t\"bn.js\": \"5.2.1\",\n\t\tbs58: \"^5.0.0\",\n\t\tbuffer: \"^6.0.3\",\n\t\teventemitter3: \"^5.0.1\",\n\t\t\"fast-deep-equal\": \"^3.1.3\",\n\t\tthirdweb: \"5.29.6\",\n\t\t\"tiny-invariant\": \"^1.3.3\",\n\t\ttweetnacl: \"^1.0.3\",\n\t\tuuid: \"^9.0.1\",\n\t\tyaml: \"^2.4.1\",\n\t\tzod: \"^3.22.4\"\n\t},\n\tbugs: {\n\t\turl: \"https://github.com/thirdweb-dev/js/issues\"\n\t},\n\tauthor: \"thirdweb eng <eng@thirdweb.com>\",\n\tengines: {\n\t\tnode: \">=18\"\n\t}\n};\n\n/**\n * @internal\n *\n * The code below comes from the package https://github.com/DamonOehlman/detect-browser\n */\nconst operatingSystemRules = [[\"iOS\", /iP(hone|od|ad)/], [\"Android OS\", /Android/], [\"BlackBerry OS\", /BlackBerry|BB10/], [\"Windows Mobile\", /IEMobile/], [\"Amazon OS\", /Kindle/], [\"Windows 3.11\", /Win16/], [\"Windows 95\", /(Windows 95)|(Win95)|(Windows_95)/], [\"Windows 98\", /(Windows 98)|(Win98)/], [\"Windows 2000\", /(Windows NT 5.0)|(Windows 2000)/], [\"Windows XP\", /(Windows NT 5.1)|(Windows XP)/], [\"Windows Server 2003\", /(Windows NT 5.2)/], [\"Windows Vista\", /(Windows NT 6.0)/], [\"Windows 7\", /(Windows NT 6.1)/], [\"Windows 8\", /(Windows NT 6.2)/], [\"Windows 8.1\", /(Windows NT 6.3)/], [\"Windows 10\", /(Windows NT 10.0)/], [\"Windows ME\", /Windows ME/], [\"Windows CE\", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/], [\"Open BSD\", /OpenBSD/], [\"Sun OS\", /SunOS/], [\"Chrome OS\", /CrOS/], [\"Linux\", /(Linux)|(X11)/], [\"Mac OS\", /(Mac_PowerPC)|(Macintosh)/], [\"QNX\", /QNX/], [\"BeOS\", /BeOS/], [\"OS/2\", /OS\\/2/]];\nfunction detectOS(ua) {\n  for (let ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    const result = operatingSystemRules[ii];\n    if (!result) {\n      continue;\n    }\n    const [os, regex] = result;\n    const match = regex.exec(ua);\n    if (match) {\n      return os;\n    }\n  }\n  return null;\n}\n\nfunction getOperatingSystem() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return \"\";\n  } else if (typeof window !== \"undefined\") {\n    const userAgent = navigator.userAgent;\n    return detectOS(userAgent) || \"\";\n  } else {\n    return process.platform;\n  }\n}\n\nfunction setAnalyticsHeaders(headers) {\n  const globals = getAnalyticsGlobals();\n  headers[\"x-sdk-version\"] = globals.x_sdk_version;\n  headers[\"x-sdk-name\"] = globals.x_sdk_name;\n  headers[\"x-sdk-platform\"] = globals.x_sdk_platform;\n  headers[\"x-sdk-os\"] = globals.x_sdk_os;\n}\nfunction getAnalyticsHeaders() {\n  const globals = getAnalyticsGlobals();\n  return {\n    \"x-sdk-version\": globals.x_sdk_version,\n    \"x-sdk-os\": globals.x_sdk_os,\n    \"x-sdk-name\": globals.x_sdk_name,\n    \"x-sdk-platform\": globals.x_sdk_platform,\n    ...(globals.app_bundle_id ? {\n      \"x-bundle-id\": globals.app_bundle_id\n    } : {})\n  };\n}\nfunction getAnalyticsGlobals() {\n  if (typeof globalThis === \"undefined\") {\n    return {\n      x_sdk_name: pkg.name,\n      x_sdk_platform: getPlatform(),\n      x_sdk_version: pkg.version,\n      x_sdk_os: getOperatingSystem(),\n      app_bundle_id: undefined\n    };\n  }\n  if (globalThis.X_SDK_NAME === undefined) {\n    globalThis.X_SDK_NAME = pkg.name;\n    globalThis.X_SDK_PLATFORM = getPlatform();\n    globalThis.X_SDK_VERSION = pkg.version;\n    globalThis.X_SDK_OS = getOperatingSystem();\n    globalThis.APP_BUNDLE_ID = undefined;\n  }\n  return {\n    x_sdk_name: globalThis.X_SDK_NAME,\n    x_sdk_platform: globalThis.X_SDK_PLATFORM,\n    x_sdk_version: globalThis.X_SDK_VERSION,\n    x_sdk_os: globalThis.X_SDK_OS,\n    app_bundle_id: globalThis.APP_BUNDLE_ID || \"\" // if react, this will be empty\n  };\n}\nfunction getPlatform() {\n  return typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\" ? \"mobile\" : typeof window !== \"undefined\" ? \"browser\" : \"node\";\n}\n\n/**\n * @internal\n */\nfunction buildDefaultMap(options) {\n  return options.supportedChains.reduce((previousValue, currentValue) => {\n    // don't overwrite existing chains!\n    if (!previousValue[currentValue.chainId]) {\n      previousValue[currentValue.chainId] = currentValue;\n    }\n    return previousValue;\n  }, {});\n}\n\n/**\n * Get an ethers provider for the specified network\n *\n * @internal\n */\nfunction getChainProvider(network, sdkOptions) {\n  // If we have an RPC URL, use that for the provider\n  if (typeof network === \"string\" && isRpcUrl(network)) {\n    return getProviderFromRpcUrl(network, sdkOptions);\n  }\n\n  // Add the chain to the supportedChains\n  const options = SDKOptionsSchema.parse(sdkOptions);\n  if (isChainConfig(network)) {\n    options.supportedChains = [\n    // @ts-expect-error - we know this is a chain and it will work to build the map\n    network, ...options.supportedChains.filter(c => c.chainId === network.chainId)];\n  }\n\n  // Build a map of chainId -> ChainInfo based on the supportedChains\n  const rpcMap = buildDefaultMap(options);\n  let rpcUrl = \"\";\n  let chainId;\n  try {\n    // Resolve the chain id from the network, which could be a chain, chain name, or chain id\n    chainId = getChainIdFromNetwork(network, options);\n    // Attempt to get the RPC url from the map based on the chainId\n    rpcUrl = getValidChainRPCs(rpcMap[chainId], options.clientId)[0];\n  } catch (e) {\n    // no-op\n  }\n\n  // if we still don't have an url fall back to just using the chainId or slug in the rpc and try that\n  if (!rpcUrl) {\n    rpcUrl = `https://${chainId || network}.rpc.thirdweb.com/${options.clientId || \"\"}`;\n  }\n  if (!rpcUrl) {\n    throw new Error(`No rpc url found for chain ${network}. Please provide a valid rpc url via the 'supportedChains' property of the sdk options.`);\n  }\n  return getProviderFromRpcUrl(rpcUrl, sdkOptions, chainId);\n}\n\n/**\n * @internal\n */\nfunction getChainIdFromNetwork(network, options) {\n  if (isChainConfig(network)) {\n    // If it's a chain just return the chain id\n    return network.chainId;\n  } else if (typeof network === \"number\") {\n    // If it's a number (chainId) return it directly\n    return network;\n  } else {\n    // If it's a string (chain name) return the chain id from the map\n    const chainNameToId = options.supportedChains.reduce((acc, curr) => {\n      acc[curr.slug] = curr.chainId;\n      return acc;\n    }, {});\n    if (network in chainNameToId) {\n      return chainNameToId[network];\n    }\n  }\n  throw new Error(`Cannot resolve chainId from: ${network} - please pass the chainId instead and specify it in the 'supportedChains' property of the SDK options.`);\n}\n\n/**\n * @internal\n */\nasync function getChainIdOrName(network) {\n  if (isChainConfig(network)) {\n    // If it's a chain just return the chain id\n    return network.chainId;\n  } else if (typeof network === \"number\") {\n    // If it's a number (chainId) return it directly\n    return network;\n  } else if (typeof network === \"number\") {\n    // If it's a string (chain name) return the chain id from the map\n    return network;\n  } else if (isProvider(network)) {\n    return network.getNetwork().then(n => n.chainId);\n  } else if (isSigner(network)) {\n    if (!network.provider) {\n      throw new Error(\"Signer does not have a provider\");\n    }\n    return network.provider.getNetwork().then(n => n.chainId);\n  }\n  throw new Error(`Cannot resolve chainId from: ${network}.`);\n}\n\n/**\n * Check whether a NetworkInput value is a Chain config (naively, without parsing)\n * @internal\n */\nfunction isChainConfig(network) {\n  return typeof network !== \"string\" && typeof network !== \"number\" && !isSigner(network) && !isProvider(network);\n}\n\n/**\n * Returns whether the specified url is a valid RPC url, as implemented by ethers.getDefaultProvier():\n * - https://github.com/ethers-io/ethers.js/blob/ec1b9583039a14a0e0fa15d0a2a6082a2f41cf5b/packages/providers/src.ts/index.ts#L55\n *\n * @param url - The url to check\n *\n * @internal\n */\nfunction isRpcUrl(url) {\n  const match = url.match(/^(ws|http)s?:/i);\n  if (match) {\n    switch (match[1].toLowerCase()) {\n      case \"http\":\n      case \"https\":\n      case \"ws\":\n      case \"wss\":\n        return true;\n    }\n  }\n  return false;\n}\nconst RPC_PROVIDER_MAP = new Map();\n\n/**\n * Get an ethers provider based on the specified RPC URL\n *\n * @param rpcUrl - The RPC URL\n * @param chainId - The optional chain ID\n * @returns The provider for the specified RPC URL\n *\n * @internal\n */\nfunction getProviderFromRpcUrl(rpcUrl, sdkOptions, chainId) {\n  try {\n    const headers = {};\n    // will be used to make sure we don't cache providers with different auth strategies\n    let authStrategy = \"none\";\n    if (isTwUrl(rpcUrl)) {\n      // if we have a secret key passed in the SDK options we want to always use that\n      if (sdkOptions?.secretKey) {\n        // compute the clientId from the secret key\n        // should only be used on Node.js in a backend/script context\n        if (typeof window !== \"undefined\") {\n          throw new Error(\"Cannot use secretKey in browser context\");\n        }\n        const hashedSecretKey = sha256HexSync(sdkOptions.secretKey);\n        const derivedClientId = hashedSecretKey.slice(0, 32);\n        const utilizedRpcUrl = new URL(rpcUrl);\n        // always set the clientId on the path to the derived client id\n        utilizedRpcUrl.pathname = derivedClientId;\n        // set the headers\n        headers[\"x-client-id\"] = derivedClientId;\n        headers[\"x-secret-key\"] = sdkOptions.secretKey;\n        // set the final rpc url\n        rpcUrl = utilizedRpcUrl.toString();\n        authStrategy = \"secretKey\";\n      }\n      // if we do NOT have a secret key but we have a client id we want to use that\n      else if (sdkOptions?.clientId) {\n        const utilizedRpcUrl = new URL(rpcUrl);\n        // always set the clientId on the path to the client id\n        utilizedRpcUrl.pathname = sdkOptions.clientId;\n        // set the headers\n        headers[\"x-client-id\"] = sdkOptions.clientId;\n        // set the final rpc url\n        rpcUrl = utilizedRpcUrl.toString();\n        authStrategy = \"clientId\";\n      }\n\n      // if we *also* have a tw auth token on global context add it to the headers (in addition to anything else)\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n        authStrategy = \"twAuthToken\";\n      }\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n      setAnalyticsHeaders(headers);\n      const bundleId = typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? globalThis.APP_BUNDLE_ID : undefined;\n      if (!rpcUrl.includes(\"bundleId\") && bundleId) {\n        rpcUrl = rpcUrl + (bundleId ? `?bundleId=${bundleId}` : \"\");\n      }\n    }\n    const match = rpcUrl.match(/^(ws|http)s?:/i);\n    // Try the JSON batch provider if available\n    if (match) {\n      switch (match[1].toLowerCase()) {\n        case \"http\":\n        case \"https\":\n          // Create a unique cache key for these params\n          const seralizedOpts = `${rpcUrl}-${chainId || -1}-${authStrategy}`;\n\n          // Check if we have a provider in our cache already\n          const existingProvider = RPC_PROVIDER_MAP.get(seralizedOpts);\n          if (existingProvider) {\n            return existingProvider;\n          }\n\n          // TODO: remove below `skipFetchSetup` logic when ethers.js v6 support arrives\n          let _skipFetchSetup = false;\n          if (typeof globalThis !== \"undefined\" && \"TW_SKIP_FETCH_SETUP\" in globalThis && typeof globalThis.TW_SKIP_FETCH_SETUP === \"boolean\") {\n            _skipFetchSetup = globalThis.TW_SKIP_FETCH_SETUP;\n          }\n\n          // Otherwise, create a new provider on the specific network\n          const newProvider = chainId ?\n          // If we know the chainId we should use the StaticJsonRpcBatchProvider\n          new StaticJsonRpcBatchProvider({\n            url: rpcUrl,\n            headers,\n            skipFetchSetup: _skipFetchSetup\n          }, chainId, sdkOptions?.rpcBatchSettings) :\n          // Otherwise fall back to the built in json rpc batch provider\n          new providers.JsonRpcBatchProvider({\n            url: rpcUrl,\n            headers,\n            skipFetchSetup: _skipFetchSetup\n          });\n\n          // Save the provider in our cache\n          RPC_PROVIDER_MAP.set(seralizedOpts, newProvider);\n          return newProvider;\n        case \"ws\":\n        case \"wss\":\n          // Use the WebSocketProvider for ws:// URLs\n          // TODO: handle auth for WS at some point\n          return new providers.WebSocketProvider(rpcUrl, chainId);\n      }\n    }\n  } catch (e) {\n    // no-op\n  }\n\n  // Always fallback to the default provider if no other option worked\n  return providers.getDefaultProvider(rpcUrl);\n}\n\n// TODO move to utils package\nfunction isTwUrl(url) {\n  return new URL(url).hostname.endsWith(\".thirdweb.com\");\n}\n\n/**\n * @internal\n */\nfunction getSignerAndProvider(network, options) {\n  let signer;\n  let provider;\n  if (isSigner(network)) {\n    // Here, we have an ethers.Signer\n    signer = network;\n    if (network.provider) {\n      provider = network.provider;\n    }\n  } else if (isProvider(network)) {\n    // Here, we have an ethers.providers.Provider\n    provider = network;\n  } else {\n    // Here, we must have a ChainOrRpcUrl, which is a chain name, chain id, rpc url, or chain config\n    // All of which, getChainProvider can handle for us\n    provider = getChainProvider(network, options);\n  }\n  if (options?.readonlySettings) {\n    // If readonly settings are specified, then overwrite the provider\n    provider = getProviderFromRpcUrl(options.readonlySettings.rpcUrl, options, options.readonlySettings.chainId);\n  }\n\n  // At this point, if we don't have a provider, don't default to a random chain\n  // Instead, just throw an error\n  if (!provider) {\n    if (signer) {\n      throw new Error(\"No provider passed to the SDK! Please make sure that your signer is connected to a provider!\");\n    }\n    throw new Error(\"No provider found! Make sure to specify which network to connect to, or pass a signer or provider to the SDK!\");\n  }\n  return [signer, provider];\n}\n\n// TODO: Respect SDK RPC configuration and don't pull straight from ethers\nlet provider;\nconst ENS_CACHE = new Map();\n\n/**\n * @internal\n */\nasync function resolveEns(ens) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!provider) {\n    // if we don't already have a provider then get one\n    provider = getSignerAndProvider(\"ethereum\")[1];\n  }\n  let ensPromise;\n  if (ENS_CACHE.has(ens)) {\n    ensPromise = ENS_CACHE.get(ens);\n  } else {\n    ensPromise = provider.resolveName(ens).then(address => {\n      // If they don't have an ENS, only cache for 30s\n      if (!address) {\n        return {\n          address: null,\n          expirationTime: new Date(Date.now() + 1000 * 30)\n        };\n      }\n\n      // Cache ENS for 1 hour\n      return {\n        address,\n        expirationTime: new Date(Date.now() + 1000 * 60 * 5)\n      };\n    });\n  }\n  const resolvedPromise = await ensPromise;\n  if (resolvedPromise.expirationTime < new Date()) {\n    // delete the cache if it's expired\n    ENS_CACHE.delete(ens);\n    // then call ourselves again to refresh the cache, but don't block on the result\n    if (depth === 0) {\n      resolveEns(ens, depth + 1);\n    }\n  }\n  return resolvedPromise.address;\n}\n\n// Only pass through to provider call if value ends with .eth or .cb.id\nconst EnsSchema = /* @__PURE__ */(() => z.custom(ens => typeof ens === \"string\" && (ens.endsWith(\".eth\") || ens.endsWith(\".cb.id\"))).transform(async ens => resolveEns(ens)).refine(address => !!address && utils.isAddress(address), {\n  message: \"Provided value was not a valid ENS name\"\n}))();\n\nconst AddressSchema = /* @__PURE__ */(() => z.custom(address => typeof address === \"string\" && utils.isAddress(address), out => {\n  return {\n    message: `${out} is not a valid address`\n  };\n}))();\n\n// Important for address check to come before ENS so network request is only made when necessary\nconst AddressOrEnsSchema = /* @__PURE__ */(() => z.union([AddressSchema, EnsSchema], {\n  invalid_type_error: \"Provided value was not a valid address or ENS name\"\n}))();\n\n// Use this everywhere even though it's just string so we can optionally switch it out\n// more easily if we want to later\n\nasync function resolveAddress(addressOrEns) {\n  return AddressOrEnsSchema.parseAsync(addressOrEns);\n}\n\n/**\n * @internal\n */\nconst isBrowser$1 = () => typeof window !== \"undefined\";\n/**\n * @internal\n */\nconst FileOrBufferUnionSchema = /* @__PURE__ */(() => isBrowser$1() ? z.instanceof(File) :\n// @fixme, this is a hack to make browser happy for now\nz.instanceof(Buffer))();\n\n/**\n * @internal\n */\nconst FileOrBufferSchema = /* @__PURE__ */(() => z.union([FileOrBufferUnionSchema, z.object({\n  data: z.union([FileOrBufferUnionSchema, z.string()]),\n  name: z.string()\n})]))();\n\n/**\n * @internal\n */\nconst FileOrBufferOrStringSchema = /* @__PURE__ */(() => z.union([FileOrBufferSchema, z.string()]))();\nconst MAX_BPS = 10000;\nconst BytesLikeSchema = /* @__PURE__ */(() => z.union([z.array(z.number()), z.string()]))();\nconst BigNumberTransformSchema$1 = /* @__PURE__ */(() => z.union([z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n}), z.custom(data => {\n  return BN.isBN(data);\n})]).transform(arg => {\n  if (BN.isBN(arg)) {\n    return new BN(arg).toString();\n  }\n  return BigNumber.from(arg).toString();\n}))();\nconst BasisPointsSchema = /* @__PURE__ */(() => z.number().max(MAX_BPS, \"Cannot exceed 100%\").min(0, \"Cannot be below 0%\"))();\nconst PercentSchema = /* @__PURE__ */(() => z.number().max(100, \"Cannot exceed 100%\").min(0, \"Cannot be below 0%\"))();\nconst HexColor = /* @__PURE__ */(() => z.union([z.string().regex(/^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, \"Invalid hex color\"), z.string().regex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, \"Invalid hex color\").transform(val => val.replace(\"#\", \"\")), z.string().length(0)]))();\nconst AmountSchema = /* @__PURE__ */(() => z.union([z.string().regex(/^([0-9]+\\.?[0-9]*|\\.[0-9]+)$/, \"Invalid amount\"), z.number().min(0, \"Amount cannot be negative\")]).transform(arg => typeof arg === \"number\" ? arg.toString() : arg))();\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst QuantitySchema = /* @__PURE__ */(() => z.union([AmountSchema, z.literal(\"unlimited\")]).default(\"unlimited\"))();\n\nconst MAX_LENGTH = 256;\nconst NUMERIC_IDENTIFIER = \"0|[1-9]\\\\d*\";\nconst MAIN_VERSION_IDENTIFIER = `(${NUMERIC_IDENTIFIER})\\\\.(${NUMERIC_IDENTIFIER})\\\\.(${NUMERIC_IDENTIFIER})`;\nconst REGEX_MAIN_VERSION = new RegExp(MAIN_VERSION_IDENTIFIER);\n\n/**\n * @internal\n */\n\n/**\n * @internal\n * @param version - The version to convert to a Semver\n */\nfunction toSemver(version) {\n  if (version.length > MAX_LENGTH) {\n    throw new Error(`version is longer than ${MAX_LENGTH} characters`);\n  }\n  const matches = version.trim().match(REGEX_MAIN_VERSION);\n  if (!matches || matches?.length !== 4) {\n    throw new Error(`${version} is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`);\n  }\n  const major = Number(matches[1]);\n  const minor = Number(matches[2]);\n  const patch = Number(matches[3]);\n  const versionString = [major, minor, patch].join(\".\");\n  return {\n    major,\n    minor,\n    patch,\n    versionString\n  };\n}\n\n/**\n * @internal\n * @param current - The current version\n * @param next - The next version\n */\nfunction isIncrementalVersion(current, next) {\n  const currentSemver = toSemver(current);\n  const nextSemver = toSemver(next);\n  if (nextSemver.major > currentSemver.major) {\n    return true;\n  }\n  const eqMajor = nextSemver.major === currentSemver.major;\n  if (eqMajor && nextSemver.minor > currentSemver.minor) {\n    return true;\n  }\n  const eqMinor = nextSemver.minor === currentSemver.minor;\n  return eqMajor && eqMinor && nextSemver.patch > currentSemver.patch;\n}\n\n/**\n * @internal\n */\nfunction isDowngradeVersion(current, next) {\n  const currentSemver = toSemver(current);\n  const nextSemver = toSemver(next);\n  if (nextSemver.major < currentSemver.major) {\n    return true;\n  }\n  const eqMajor = nextSemver.major === currentSemver.major;\n  if (eqMajor && nextSemver.minor < currentSemver.minor) {\n    return true;\n  }\n  const eqMinor = nextSemver.minor === currentSemver.minor;\n  return eqMajor && eqMinor && nextSemver.patch < currentSemver.patch;\n}\n\nconst BigNumberSchema = /* @__PURE__ */(() => z.union([z.string(), z.number(), z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n})]).transform(arg => BigNumber.from(arg)))();\nconst BigNumberishSchema = /* @__PURE__ */(() => BigNumberSchema.transform(arg => arg.toString()))();\nconst BigNumberTransformSchema = /* @__PURE__ */(() => z.union([z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n})]).transform(arg => {\n  return BigNumber.from(arg).toString();\n}))();\n\n/**\n * @internal\n */\nconst CommonContractSchema = /* @__PURE__ */(() => z.object({\n  name: z.string(),\n  description: z.string().optional(),\n  image: FileOrBufferOrStringSchema.optional(),\n  external_link: z.string().optional(),\n  app_uri: z.string().optional(),\n  social_urls: z.record(z.string()).optional(),\n  defaultAdmin: AddressOrEnsSchema.optional()\n}).catchall(z.unknown()))();\n/**\n * @internal\n */\nconst CommonContractOutputSchema = /* @__PURE__ */(() => CommonContractSchema.extend({\n  image: z.string().optional()\n}).catchall(z.unknown()))();\n\n/**\n * @internal\n */\nconst CommonRoyaltySchema = /* @__PURE__ */(() => z.object({\n  /**\n   * The amount of royalty collected on all royalties represented as basis points.\n   * The default is 0 (no royalties).\n   *\n   * 1 basis point = 0.01%\n   *\n   * For example: if this value is 100, then the royalty is 1% of the total sales.\n   *\n   * @internal\n   * @remarks used by OpenSea \"seller_fee_basis_points\"\n   */\n  seller_fee_basis_points: BasisPointsSchema.default(0),\n  /**\n   * The address of the royalty recipient. All royalties will be sent\n   * to this address.\n   * @internal\n   * @remarks used by OpenSea \"fee_recipient\"\n   */\n  fee_recipient: AddressOrEnsSchema.default(constants.AddressZero)\n}))();\n\n/**\n * @internal\n */\nconst CommonPrimarySaleSchema = /* @__PURE__ */(() => z.object({\n  /**\n   * primary sale recipient address\n   */\n  primary_sale_recipient: AddressOrEnsSchema.default(constants.AddressZero)\n}))();\n\n/**\n * @internal\n */\nconst CommonPlatformFeeSchema = /* @__PURE__ */(() => z.object({\n  /**\n   * platform fee basis points\n   */\n  platform_fee_basis_points: BasisPointsSchema.default(0),\n  /**\n   * platform fee recipient address\n   */\n  platform_fee_recipient: AddressOrEnsSchema.default(constants.AddressZero)\n}))();\n\n/**\n * @internal\n */\nconst CommonTrustedForwarderSchema = /* @__PURE__ */(() => z.object({\n  trusted_forwarders: z.array(AddressOrEnsSchema).default([])\n}))();\n\n/**\n * @internal\n */\nconst CommonSymbolSchema = /* @__PURE__ */(() => z.object({\n  symbol: z.string().default(\"\")\n}))();\n\n/**\n * @internal\n */\nconst MerkleSchema = /* @__PURE__ */(() => z.object({\n  merkle: z.record(z.string()).default({})\n}))();\nconst SnapshotEntryInput = /* @__PURE__ */(() => z.object({\n  address: AddressOrEnsSchema,\n  maxClaimable: QuantitySchema.default(0),\n  // defaults to 0\n  price: QuantitySchema.optional(),\n  // defaults to unlimited, but can be undefined in old snapshots\n  currencyAddress: AddressOrEnsSchema.default(constants.AddressZero).optional() // defaults to AddressZero, but can be undefined for old snapshots\n}))();\n/**\n * @internal\n */\nconst SnapshotInputSchema = /* @__PURE__ */(() => z.union([z.array(z.string()).transform(async strings => await Promise.all(strings.map(address => SnapshotEntryInput.parseAsync({\n  address\n})))), z.array(SnapshotEntryInput)]))();\nconst SnapshotEntryWithProofSchema = /* @__PURE__ */(() => SnapshotEntryInput.extend({\n  proof: z.array(z.string())\n}))();\n\n/**\n * @internal\n */\nconst SnapshotSchema = /* @__PURE__ */(() => z.object({\n  /**\n   * The merkle root\n   */\n  merkleRoot: z.string(),\n  claims: z.array(SnapshotEntryWithProofSchema)\n}))();\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst SnapshotInfoSchema = /* @__PURE__ */(() => z.object({\n  merkleRoot: z.string(),\n  snapshotUri: z.string()\n}))();\n\n/**\n * @internal\n */\nconst BYOCContractMetadataSchema = /* @__PURE__ */(() => CommonContractSchema.catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst CustomContractInput = /* @__PURE__ */(() => BYOCContractMetadataSchema.merge(CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial()).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst CustomContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial()).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst CustomContractDeploy = /* @__PURE__ */(() => CustomContractInput.merge(CommonPlatformFeeSchema.merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema).partial()))();\n\n/**\n * @internal\n */\nconst CustomContractSchema = {\n  deploy: CustomContractDeploy,\n  output: CustomContractOutput,\n  input: CustomContractInput\n};\n\n/**\n * @internal\n */\nconst AbiTypeBaseSchema = /* @__PURE__ */(() => z.object({\n  type: z.string(),\n  name: z.string().default(\"\")\n}).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst AbiTypeSchema = /* @__PURE__ */(() => AbiTypeBaseSchema.extend({\n  stateMutability: z.string().optional(),\n  components: z.array(AbiTypeBaseSchema).optional()\n}).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst AbiObjectSchema = /* @__PURE__ */(() => z.object({\n  type: z.string(),\n  name: z.string().default(\"\"),\n  inputs: z.array(AbiTypeSchema).default([]),\n  outputs: z.array(AbiTypeSchema).default([])\n}).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst AbiSchema = /* @__PURE__ */(() => z.array(AbiObjectSchema))();\n// if we want to statically type this for external usage it has to *awlways* be the output type\n\n// input type is only used internally\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst CompilerTypeInput = /* @__PURE__ */(() => z.union([z.literal(\"solc\"), z.literal(\"zksolc\")]))();\n/**\n * @internal\n */\nconst PreDeployMetadata = /* @__PURE__ */(() => z.object({\n  name: z.string(),\n  metadataUri: z.string(),\n  bytecodeUri: z.string(),\n  analytics: z.any().optional(),\n  compilers: z.record(CompilerTypeInput,\n  // z.record(\n  z.array(z.object({\n    compilerVersion: z.string().optional(),\n    evmVersion: z.string().optional(),\n    metadataUri: z.string(),\n    bytecodeUri: z.string()\n  }))\n  // ),\n  ).optional()\n}).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst ChainIdToAddressSchema = /* @__PURE__ */(() => z.record(z.string(), z.string()))();\n\n/**\n * @internal\n */\nconst CustomFactoryInput = /* @__PURE__ */(() => z.object({\n  factoryFunction: z.string(),\n  params: z.array(z.object({\n    name: z.string(),\n    type: z.string()\n  })).default([]),\n  customFactoryAddresses: ChainIdToAddressSchema\n}))();\n\n/**\n * @internal\n */\nconst ModularFactoryInput = /* @__PURE__ */(() => z.object({\n  hooksParamName: z.string()\n}))();\n\n/**\n * @internal\n */\nconst FactoryDeploymentSchema = /* @__PURE__ */(() => z.object({\n  implementationAddresses: ChainIdToAddressSchema,\n  implementationInitializerFunction: z.string().default(\"initialize\"),\n  customFactoryInput: CustomFactoryInput.optional(),\n  modularFactoryInput: ModularFactoryInput.optional(),\n  factoryAddresses: ChainIdToAddressSchema.optional()\n}))();\n\n/**\n * @internal\n */\nconst DeployTypeInput = /* @__PURE__ */(() => z.union([z.literal(\"standard\"), z.literal(\"autoFactory\"), z.literal(\"customFactory\")]))();\n\n/**\n * @internal\n */\nconst RouterTypeInput = /* @__PURE__ */(() => z.union([z.literal(\"none\"), z.literal(\"plugin\"), z.literal(\"dynamic\"), z.literal(\"modular\")]))();\n\n/**\n * @internal\n */\nconst DeploymentNetworkInput = /* @__PURE__ */(() => z.object({\n  allNetworks: z.boolean().optional(),\n  networksEnabled: z.array(z.number()).default([])\n}))();\n\n/**\n * @internal\n */\nconst ExtraPublishMetadataSchemaInput = /* @__PURE__ */(() => z.object({\n  version: z.string().refine(v => {\n    try {\n      toSemver(v);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }, out => {\n    return {\n      message: `'${out}' is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`\n    };\n  }),\n  displayName: z.string().optional(),\n  description: z.string().optional(),\n  externalLinks: z.array(z.object({\n    name: z.string(),\n    url: z.string()\n  })).optional(),\n  readme: z.string().optional(),\n  license: z.string().optional(),\n  changelog: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  audit: FileOrBufferOrStringSchema.nullable().optional(),\n  logo: FileOrBufferOrStringSchema.nullable().optional(),\n  isDeployableViaFactory: z.boolean().optional(),\n  isDeployableViaProxy: z.boolean().optional(),\n  factoryDeploymentData: FactoryDeploymentSchema.optional(),\n  deployType: DeployTypeInput.optional(),\n  routerType: RouterTypeInput.optional(),\n  defaultExtensions: z.array(z.object({\n    extensionName: z.string(),\n    extensionVersion: z.string().default(\"latest\"),\n    publisherAddress: AddressOrEnsSchema\n  })).optional(),\n  networksForDeployment: DeploymentNetworkInput.optional(),\n  constructorParams: z.record(z.string(), z.object({\n    displayName: z.string().optional(),\n    description: z.string().optional(),\n    defaultValue: z.string().optional(),\n    hidden: z.boolean().optional()\n  }).catchall(z.any())).optional(),\n  compositeAbi: AbiSchema.optional()\n}).catchall(z.any()))();\n\n/**\n * @internal\n */\nconst ExtraPublishMetadataSchemaOutput = /* @__PURE__ */(() => ExtraPublishMetadataSchemaInput.extend({\n  audit: z.string().nullable().optional(),\n  logo: z.string().nullable().optional()\n}))();\n/**\n * @internal\n */\nconst FullPublishMetadataSchemaInput = /* @__PURE__ */(() => PreDeployMetadata.merge(ExtraPublishMetadataSchemaInput).extend({\n  publisher: AddressOrEnsSchema.optional()\n}))();\n\n/**\n * @internal\n */\nconst FullPublishMetadataSchemaOutput = /* @__PURE__ */(() => PreDeployMetadata.merge(ExtraPublishMetadataSchemaOutput).extend({\n  publisher: AddressOrEnsSchema.optional()\n}))();\n/**\n * @internal\n */\nconst ProfileSchemaInput = /* @__PURE__ */(() => z.object({\n  name: z.string().optional(),\n  bio: z.string().optional(),\n  avatar: FileOrBufferOrStringSchema.nullable().optional(),\n  website: z.string().optional(),\n  twitter: z.string().optional(),\n  telegram: z.string().optional(),\n  facebook: z.string().optional(),\n  github: z.string().optional(),\n  medium: z.string().optional(),\n  linkedin: z.string().optional(),\n  reddit: z.string().optional(),\n  discord: z.string().optional()\n}))();\nconst ProfileSchemaOutput = /* @__PURE__ */(() => ProfileSchemaInput.extend({\n  avatar: z.string().nullable().optional()\n}))();\n/**\n * @internal\n */\nconst PublishedContractSchema = /* @__PURE__ */(() => z.object({\n  id: z.string(),\n  timestamp: BigNumberishSchema,\n  metadataUri: z.string()\n}))();\n\n/**\n * @internal\n * Follows https://docs.soliditylang.org/en/v0.8.15/natspec-format.html\n */\nconst ContractInfoSchema = /* @__PURE__ */(() => z.object({\n  title: z.string().optional(),\n  author: z.string().optional(),\n  details: z.string().optional(),\n  notice: z.string().optional()\n}))();\n\n/**\n * @internal\n */\nconst CompilerMetadataFetchedSchema = /* @__PURE__ */(() => z.object({\n  name: z.string(),\n  abi: AbiSchema,\n  metadata: z.record(z.string(), z.any()),\n  info: ContractInfoSchema,\n  licenses: z.array(z.string().optional()).default([]).transform(v => {\n    return v.filter(license => license !== undefined);\n  }),\n  isPartialAbi: z.boolean().optional()\n}))();\n\n/**\n * @internal\n */\nconst PreDeployMetadataFetchedSchema = /* @__PURE__ */(() => PreDeployMetadata.merge(CompilerMetadataFetchedSchema).extend({\n  bytecode: z.string(),\n  fetchedMetadataUri: z.string(),\n  fetchedBytecodeUri: z.string()\n}))();\n\n/**\n * Fetch and parse the full metadata AFTER publishing a contract, with all the extra information (version, readme, etc)\n * @internal\n * @param publishMetadataUri - The publish metadata URI to fetch\n * @param storage - The storage to use\n */\nasync function fetchExtendedReleaseMetadata(publishMetadataUri, storage) {\n  const meta = await (await storage.download(publishMetadataUri)).text();\n  return FullPublishMetadataSchemaOutput.parse(JSON.parse(meta));\n}\n\nconst CONTRACT_METADATA_TIMEOUT_SEC = 2;\n\n/**\n * @internal\n * @param compilerMetadataUri - The compiler metadata URI to fetch\n * @param storage - The storage to use\n */\nasync function fetchContractMetadata(compilerMetadataUri, storage) {\n  // short timeout to avoid hanging on unpinned contract metadata CIDs\n  const metadata = await storage.downloadJSON(compilerMetadataUri, {\n    timeoutInSeconds: CONTRACT_METADATA_TIMEOUT_SEC\n  });\n  if (!metadata || !metadata.output) {\n    throw new Error(`Could not resolve metadata for contract at ${compilerMetadataUri}`);\n  }\n  return formatCompilerMetadata(metadata);\n}\n\n/**\n * @internal\n */\nfunction formatCompilerMetadata(metadata) {\n  const abi = AbiSchema.parse(metadata.output.abi);\n  const compilationTarget = metadata.settings.compilationTarget;\n  const targets = Object.keys(compilationTarget);\n  const name = compilationTarget[targets[0]];\n  const info = ContractInfoSchema.parse({\n    title: metadata.output.devdoc.title,\n    author: metadata.output.devdoc.author,\n    details: metadata.output.devdoc.detail,\n    notice: metadata.output.userdoc.notice\n  });\n  const licenses = [...new Set(Object.entries(metadata.sources).map(_ref => {\n    let [, src] = _ref;\n    return src.license;\n  }))];\n  return {\n    name,\n    abi,\n    metadata,\n    info,\n    licenses,\n    isPartialAbi: metadata.isPartialAbi\n  };\n}\n\n/**\n * @internal\n * @param publishMetadataUri - The publish metadata URI to fetch\n * @param storage - The storage to use\n */\nasync function fetchRawPredeployMetadata(publishMetadataUri, storage) {\n  return PreDeployMetadata.parse(JSON.parse(await (await storage.download(publishMetadataUri)).text()));\n}\n\n/**\n * Fetch the metadata coming from CLI, this is before deploying or releasing the contract.\n * @internal\n * @param publishMetadataUri - The publish metadata URI to fetch\n * @param storage - The storage to use\n */\nasync function fetchPreDeployMetadata(publishMetadataUri, storage, compilerOptions) {\n  const rawMeta = await fetchRawPredeployMetadata(publishMetadataUri, storage);\n  let bytecodeUri;\n  let metadataUri;\n\n  // TODO: Add an invariant, throw if no compilers in rawMeta in case compilerOptions are provided.\n  // Keeping it this way until all contracts are republished with new metadata.\n  if (compilerOptions && rawMeta.compilers) {\n    let metadata;\n    switch (compilerOptions.compilerType) {\n      case \"solc\":\n        {\n          if (compilerOptions.compilerVersion) {\n            metadata = rawMeta.compilers.solc?.find(m => m.compilerVersion === compilerOptions.compilerVersion && m.evmVersion === compilerOptions.evmVersion);\n          } else if (rawMeta.compilers.solc) {\n            const len = rawMeta.compilers.solc.length;\n            metadata = rawMeta.compilers.solc[len - 1];\n          }\n          break;\n        }\n      case \"zksolc\":\n        {\n          if (compilerOptions.compilerVersion) {\n            metadata = rawMeta.compilers.zksolc?.find(m => m.compilerVersion === compilerOptions.compilerVersion && m.evmVersion === compilerOptions.evmVersion);\n          } else if (rawMeta.compilers.zksolc) {\n            const len = rawMeta.compilers.zksolc.length;\n            metadata = rawMeta.compilers.zksolc[len - 1];\n          }\n          break;\n        }\n    }\n    invariant(metadata, \"Compiler or EVM version not found\");\n    bytecodeUri = metadata.bytecodeUri;\n    metadataUri = metadata.metadataUri;\n  } else {\n    bytecodeUri = rawMeta.bytecodeUri;\n    metadataUri = rawMeta.metadataUri;\n  }\n  const [deployBytecode, parsedMeta] = await Promise.all([storage.download(bytecodeUri), fetchContractMetadata(metadataUri, storage)]);\n  return PreDeployMetadataFetchedSchema.parse({\n    ...rawMeta,\n    ...parsedMeta,\n    bytecode: await deployBytecode.text(),\n    fetchedMetadataUri: metadataUri,\n    fetchedBytecodeUri: bytecodeUri\n  });\n}\n\n/**\n * @internal\n */\nconst isBrowser = () => typeof window !== \"undefined\";\n\n/**\n * @internal\n */\nconst isNode = () => !isBrowser();\n\n/**\n * @internal\n */\nfunction unique(a, fn) {\n  if (a.length === 0 || a.length === 1) {\n    return a;\n  }\n  if (!fn) {\n    return a;\n  }\n  for (let i = 0; i < a.length; i++) {\n    for (let j = i + 1; j < a.length; j++) {\n      if (fn(a[i], a[j])) {\n        a.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * @internal\n */\nfunction hasDuplicates(arr, fn) {\n  if (arr.length === 0 || arr.length === 1) {\n    return false;\n  }\n  if (!fn) {\n    throw new Error(\"Comparison function required\");\n  }\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (fn(arr[i], arr[j])) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * @internal\n */\nfunction createLruCache(maxEntries) {\n  let store = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  function put(key, value) {\n    if (store.size >= maxEntries) {\n      const keyToDelete = store.keys().next().value;\n      store.delete(keyToDelete);\n    }\n    store.set(key, value);\n  }\n  function get(key) {\n    const hasKey = store.has(key);\n    if (!hasKey) {\n      return undefined;\n    }\n    const entry = store.get(key);\n    store.delete(key);\n    store.set(key, entry);\n    return entry;\n  }\n  function has(key) {\n    return store.has(key);\n  }\n  return {\n    put,\n    get,\n    has,\n    maxEntries,\n    store\n  };\n}\n\nconst deployMetadataCache = /* @__PURE__ */createLruCache(20);\n\n/**\n * @internal\n */\nasync function fetchAndCacheDeployMetadata(publishMetadataUri, storage, compilerOptions) {\n  const compiler = compilerOptions ? `${compilerOptions.compilerType}_${compilerOptions.compilerVersion || \"\"}_${compilerOptions.evmVersion || \"\"}\n  ` : \"default\";\n  const cacheKey = `${compiler}_${publishMetadataUri}`;\n  const cached = deployMetadataCache.get(cacheKey);\n  if (cached) {\n    return cached;\n  }\n  const compilerMetadata = await fetchPreDeployMetadata(publishMetadataUri, storage, compilerOptions);\n  let extendedMetadata;\n  try {\n    extendedMetadata = await fetchExtendedReleaseMetadata(publishMetadataUri, storage);\n  } catch (e) {\n    // not a factory deployment, ignore\n  }\n  const data = {\n    compilerMetadata,\n    extendedMetadata\n  };\n  deployMetadataCache.put(cacheKey, data);\n  return data;\n}\n\n// @ts-expect-error - readonly vs not\nlet supportedChains = defaultChains;\n\n/**\n * @internal\n */\nfunction setSupportedChains(chains) {\n  if (chains && chains.length > 0) {\n    supportedChains = chains;\n  } else {\n    // @ts-expect-error - readonly vs not\n    supportedChains = defaultChains;\n  }\n}\n\n/**\n * @internal\n */\nfunction getSupportedChains() {\n  return supportedChains;\n}\n\nconst THIRDWEB_DEPLOYER = \"0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024\";\n\n/**\n * @internal\n */\nasync function fetchPublishedContractFromPolygon(publisherAddress, contractName) {\n  let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n  let storage = arguments.length > 3 ? arguments[3] : undefined;\n  let clientId = arguments.length > 4 ? arguments[4] : undefined;\n  let secretKey = arguments.length > 5 ? arguments[5] : undefined;\n  const polygonChain = getSupportedChains().find(c => c.chainId === 137);\n  const chain = polygonChain || Polygon;\n  const publisher = await resolveAddress(publisherAddress);\n  const ContractPublisherAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json')).default;\n  const contract = new Contract(getContractPublisherAddress(), ContractPublisherAbi, getChainProvider(chain, {\n    clientId,\n    secretKey\n  }));\n  let publishedContract;\n  if (!version || version === \"latest\") {\n    const model = await contract.getPublishedContract(publisher, contractName);\n    publishedContract = PublishedContractSchema.parse({\n      id: model.contractId,\n      timestamp: model.publishTimestamp,\n      metadataUri: model.publishMetadataUri\n    });\n  } else {\n    const allVersions = (await contract.getPublishedContractVersions(publisher, contractName)).map(c => {\n      return PublishedContractSchema.parse({\n        id: c.contractId,\n        timestamp: c.publishTimestamp,\n        metadataUri: c.publishMetadataUri\n      });\n    });\n\n    // get the metadata for each version\n    const versionMetadata = (await Promise.all(allVersions.map(c => fetchAndCacheDeployMetadata(c.metadataUri, storage)))).map((item, index) => ({\n      name: allVersions[index].id,\n      publishedTimestamp: allVersions[index].timestamp,\n      publishedMetadata: item\n    }));\n\n    // find the version that matches the version string\n    const versionMatch = versionMetadata.find(metadata => metadata.publishedMetadata.extendedMetadata?.version === version);\n    invariant(versionMatch, \"Contract version not found\");\n    // match the version back to the contract based on the published timestamp\n    publishedContract = allVersions.find(c => c.timestamp === versionMatch.publishedTimestamp);\n  }\n  if (!publishedContract) {\n    throw new Error(`No published contract found for ${contractName} at version by '${THIRDWEB_DEPLOYER}'`);\n  }\n  return publishedContract;\n}\n\nasync function getPrebuiltInfo(address, provider) {\n  try {\n    const IThirdwebContractABI = (await import('@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json')).default;\n    const contract = new Contract(address, IThirdwebContractABI, provider);\n    const [_type, version] = await Promise.all([contract.contractType(), contract.contractVersion()]);\n    const type = utils.toUtf8String(_type) // eslint-disable-next-line no-control-regex\n    .replace(/\\x00/g, \"\");\n    return {\n      type,\n      version\n    };\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/* eslint-disable eqeqeq */\n/* eslint-disable better-tree-shaking/no-top-level-side-effects  */\nlet decoder;\ntry {\n  decoder = new TextDecoder();\n} catch (error) {}\nlet src;\nlet srcEnd;\nlet position = 0;\nconst LEGACY_RECORD_INLINE_ID = 105;\nconst RECORD_DEFINITIONS_ID = 0xdffe;\nconst RECORD_INLINE_ID = 0xdfff; // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9;\nconst PACKED_REFERENCE_TAG_ID = 6;\nconst STOP_CODE = {};\nlet currentDecoder = {};\nlet currentStructures;\nlet srcString;\nlet srcStringStart = 0;\nlet srcStringEnd = 0;\nlet bundledStrings;\nlet referenceMap;\nlet currentExtensions = [];\nlet currentExtensionRanges = [];\nlet packedValues;\nlet dataView;\nlet restoreMapsAsObject;\nlet defaultOptions = {\n  useRecords: false,\n  mapsAsObjects: true\n};\nlet sequentialMode = false;\nclass Decoder {\n  constructor(options) {\n    if (options) {\n      if ((options.keyMap || options._keyMap) && !options.useRecords) {\n        options.useRecords = false;\n        options.mapsAsObjects = true;\n      }\n      if (options.useRecords === false && options.mapsAsObjects === undefined) {\n        options.mapsAsObjects = true;\n      }\n      if (options.getStructures) {\n        options.getShared = options.getStructures;\n      }\n      if (options.getShared && !options.structures) {\n        (options.structures = []).uninitialized = true;\n      } // this is what we use to denote an uninitialized structures\n      if (options.keyMap) {\n        this.mapKey = new Map();\n        for (let [k, v] of Object.entries(options.keyMap)) {\n          this.mapKey.set(v, k);\n        }\n      }\n    }\n    Object.assign(this, options);\n  }\n  decodeKey(key) {\n    return this.keyMap ? this.mapKey.get(key) || key : key;\n  }\n  decode(source, end) {\n    if (src) {\n      // re-entrant execution, save the state and restore it after we do this decode\n      return saveState(() => {\n        clearSource();\n        return this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end);\n      });\n    }\n    srcEnd = end > -1 ? end : source.length;\n    position = 0;\n    srcStringEnd = 0;\n    srcString = null;\n    bundledStrings = null;\n    src = source;\n    // this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n    // technique for getting data from a database where it can be copied into an existing buffer instead of creating\n    // new ones\n    try {\n      dataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength));\n    } catch (error) {\n      // if it doesn't have a buffer, maybe it is the wrong type of object\n      src = null;\n      if (source instanceof Uint8Array) {\n        throw error;\n      }\n      throw new Error(\"Source must be a Uint8Array or Buffer but was a \" + (source && typeof source === \"object\" ? source.constructor.name : typeof source));\n    }\n    if (this instanceof Decoder) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      currentDecoder = this;\n      packedValues = this.sharedValues && (this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) : this.sharedValues);\n      if (this.structures) {\n        currentStructures = this.structures;\n        return checkedRead();\n      } else if (!currentStructures || currentStructures.length > 0) {\n        currentStructures = [];\n      }\n    } else {\n      currentDecoder = defaultOptions;\n      if (!currentStructures || currentStructures.length > 0) {\n        currentStructures = [];\n      }\n      packedValues = null;\n    }\n    return checkedRead();\n  }\n}\nfunction checkedRead() {\n  try {\n    let result = read();\n    if (bundledStrings) {\n      if (position >= bundledStrings.postBundlePosition) {\n        let error = new Error(\"Unexpected bundle position\");\n        error.incomplete = true;\n        throw error;\n      }\n      // bundled strings to skip past\n      position = bundledStrings.postBundlePosition;\n      bundledStrings = null;\n    }\n    if (position == srcEnd) {\n      // finished reading this source, cleanup references\n      currentStructures = null;\n      src = null;\n      if (referenceMap) {\n        referenceMap = null;\n      }\n    } else if (position > srcEnd) {\n      // over read\n      let error = new Error(\"Unexpected end of CBOR data\");\n      error.incomplete = true;\n      throw error;\n    } else if (!sequentialMode) {\n      throw new Error(\"Data read, but end of buffer not reached\");\n    }\n    // else more to read, but we are reading sequentially, so don't clear source yet\n    return result;\n  } catch (error) {\n    clearSource();\n    if (error instanceof RangeError || error.message.startsWith(\"Unexpected end of buffer\")) {\n      error.incomplete = true;\n    }\n    throw error;\n  }\n}\nfunction read() {\n  let token = src[position++];\n  let majorType = token >> 5;\n  token = token & 0x1f;\n  if (token > 0x17) {\n    switch (token) {\n      case 0x18:\n        token = src[position++];\n        break;\n      case 0x19:\n        if (majorType == 7) {\n          return getFloat16();\n        }\n        token = dataView.getUint16(position);\n        position += 2;\n        break;\n      case 0x1a:\n        if (majorType == 7) {\n          let value = dataView.getFloat32(position);\n          if (currentDecoder.useFloat32 > 2) {\n            // this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n            let multiplier = mult10[(src[position] & 0x7f) << 1 | src[position + 1] >> 7];\n            position += 4;\n            return (multiplier * value + (value > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n          }\n          position += 4;\n          return value;\n        }\n        token = dataView.getUint32(position);\n        position += 4;\n        break;\n      case 0x1b:\n        if (majorType == 7) {\n          let value = dataView.getFloat64(position);\n          position += 8;\n          return value;\n        }\n        if (majorType > 1) {\n          if (dataView.getUint32(position) > 0) {\n            throw new Error(\"JavaScript does not support arrays, maps, or strings with length over 4294967295\");\n          }\n          token = dataView.getUint32(position + 4);\n        } else if (currentDecoder.int64AsNumber) {\n          token = dataView.getUint32(position) * 0x100000000;\n          token += dataView.getUint32(position + 4);\n        } else {\n          token = dataView.getBigUint64(position);\n        }\n        position += 8;\n        break;\n      case 0x1f:\n        // indefinite length\n        switch (majorType) {\n          case 2: // byte string\n          case 3:\n            // text string\n            throw new Error(\"Indefinite length not supported for byte or text strings\");\n          case 4:\n            // array\n            let array = [];\n            let value,\n              i = 0;\n            while ((value = read()) != STOP_CODE) {\n              array[i++] = value;\n            }\n            return majorType == 4 ? array : majorType == 3 ? array.join(\"\") : Buffer.concat(array);\n          case 5:\n            // map\n            let key;\n            if (currentDecoder.mapsAsObjects) {\n              let object = {};\n              if (currentDecoder.keyMap) {\n                while ((key = read()) != STOP_CODE) {\n                  object[safeKey(currentDecoder.decodeKey(key))] = read();\n                }\n              } else {\n                while ((key = read()) != STOP_CODE) {\n                  object[safeKey(key)] = read();\n                }\n              }\n              return object;\n            } else {\n              if (restoreMapsAsObject) {\n                currentDecoder.mapsAsObjects = true;\n                restoreMapsAsObject = false;\n              }\n              let map = new Map();\n              if (currentDecoder.keyMap) {\n                while ((key = read()) != STOP_CODE) {\n                  map.set(currentDecoder.decodeKey(key), read());\n                }\n              } else {\n                while ((key = read()) != STOP_CODE) {\n                  map.set(key, read());\n                }\n              }\n              return map;\n            }\n          case 7:\n            return STOP_CODE;\n          default:\n            throw new Error(\"Invalid major type for indefinite length \" + majorType);\n        }\n      default:\n        throw new Error(\"Unknown token \" + token);\n    }\n  }\n  switch (majorType) {\n    case 0:\n      // positive int\n      return token;\n    case 1:\n      // negative int\n      return ~token;\n    case 2:\n      // buffer\n      return readBin(token);\n    case 3:\n      // string\n      if (srcStringEnd >= position) {\n        return srcString.slice(position - srcStringStart, (position += token) - srcStringStart);\n      }\n      if (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n        // for small blocks, avoiding the overhead of the extract call is helpful\n        let string = token < 16 ? shortStringInJS(token) : longStringInJS(token);\n        if (string != null) {\n          return string;\n        }\n      }\n      return readFixedString(token);\n    case 4:\n      // array\n      let array = new Array(token);\n      //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\n      //else\n      for (let i = 0; i < token; i++) {\n        array[i] = read();\n      }\n      return array;\n    case 5:\n      // map\n      if (currentDecoder.mapsAsObjects) {\n        let object = {};\n        if (currentDecoder.keyMap) {\n          for (let i = 0; i < token; i++) {\n            object[safeKey(currentDecoder.decodeKey(read()))] = read();\n          }\n        } else {\n          for (let i = 0; i < token; i++) {\n            object[safeKey(read())] = read();\n          }\n        }\n        return object;\n      } else {\n        if (restoreMapsAsObject) {\n          currentDecoder.mapsAsObjects = true;\n          restoreMapsAsObject = false;\n        }\n        let map = new Map();\n        if (currentDecoder.keyMap) {\n          for (let i = 0; i < token; i++) {\n            map.set(currentDecoder.decodeKey(read()), read());\n          }\n        } else {\n          for (let i = 0; i < token; i++) {\n            map.set(read(), read());\n          }\n        }\n        return map;\n      }\n    case 6:\n      // extension\n      if (token >= BUNDLED_STRINGS_ID) {\n        let structure = currentStructures[token & 0x1fff]; // check record structures first\n        // At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n        if (structure) {\n          if (!structure.read) {\n            structure.read = createStructureReader(structure);\n          }\n          return structure.read();\n        }\n        if (token < 0x10000) {\n          if (token == RECORD_INLINE_ID) {\n            // we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n            return recordDefinition(read());\n          } else if (token == RECORD_DEFINITIONS_ID) {\n            let length = readJustLength();\n            let id = read();\n            for (let i = 2; i < length; i++) {\n              recordDefinition([id++, read()]);\n            }\n            return read();\n          } else if (token == BUNDLED_STRINGS_ID) {\n            return readBundleExt();\n          }\n          if (currentDecoder.getShared) {\n            loadShared();\n            structure = currentStructures[token & 0x1fff];\n            if (structure) {\n              if (!structure.read) {\n                structure.read = createStructureReader(structure);\n              }\n              return structure.read();\n            }\n          }\n        }\n      }\n      let extension = currentExtensions[token];\n      if (extension) {\n        if (extension.handlesRead) {\n          return extension(read);\n        } else {\n          return extension(read());\n        }\n      } else {\n        let input = read();\n        for (let i = 0; i < currentExtensionRanges.length; i++) {\n          let value = currentExtensionRanges[i](token, input);\n          if (value !== undefined) {\n            return value;\n          }\n        }\n        return new Tag(input, token);\n      }\n    case 7:\n      // fixed value\n      switch (token) {\n        case 0x14:\n          return false;\n        case 0x15:\n          return true;\n        case 0x16:\n          return null;\n        case 0x17:\n          return;\n        // undefined\n        case 0x1f:\n        default:\n          let packedValue = (packedValues || getPackedValues())[token];\n          if (packedValue !== undefined) {\n            return packedValue;\n          }\n          throw new Error(\"Unknown token \" + token);\n      }\n    default:\n      // negative int\n      if (isNaN(token)) {\n        let error = new Error(\"Unexpected end of CBOR data\");\n        error.incomplete = true;\n        throw error;\n      }\n      throw new Error(\"Unknown CBOR token \" + token);\n  }\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/;\nfunction createStructureReader(structure) {\n  function readObject() {\n    // get the array size from the header\n    let length = src[position++];\n    //let majorType = token >> 5\n    length = length & 0x1f;\n    if (length > 0x17) {\n      switch (length) {\n        case 0x18:\n          length = src[position++];\n          break;\n        case 0x19:\n          length = dataView.getUint16(position);\n          position += 2;\n          break;\n        case 0x1a:\n          length = dataView.getUint32(position);\n          position += 4;\n          break;\n        default:\n          throw new Error(\"Expected array header, but got \" + src[position - 1]);\n      }\n    }\n    // This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n    let compiledReader = this.compiledReader; // first look to see if we have the fast compiled function\n    while (compiledReader) {\n      // we have a fast compiled object literal reader\n      if (compiledReader.propertyCount === length) {\n        return compiledReader(read);\n      } // with the right length, so we use it\n      compiledReader = compiledReader.next; // see if there is another reader with the right length\n    }\n    if (this.slowReads++ >= 3) {\n      // create a fast compiled reader\n      let array = this.length == length ? this : this.slice(0, length);\n      compiledReader = currentDecoder.keyMap ? new Function(\"r\", \"return {\" + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + \":r()\" : \"[\" + JSON.stringify(k) + \"]:r()\").join(\",\") + \"}\") : new Function(\"r\", \"return {\" + array.map(key => validName.test(key) ? safeKey(key) + \":r()\" : \"[\" + JSON.stringify(key) + \"]:r()\").join(\",\") + \"}\");\n      if (this.compiledReader) {\n        compiledReader.next = this.compiledReader;\n      } // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n      compiledReader.propertyCount = length;\n      this.compiledReader = compiledReader;\n      return compiledReader(read);\n    }\n    let object = {};\n    if (currentDecoder.keyMap) {\n      for (let i = 0; i < length; i++) {\n        object[safeKey(currentDecoder.decodeKey(this[i]))] = read();\n      }\n    } else {\n      for (let i = 0; i < length; i++) {\n        object[safeKey(this[i])] = read();\n      }\n    }\n    return object;\n  }\n  structure.slowReads = 0;\n  return readObject;\n}\nfunction safeKey(key) {\n  return key === \"__proto__\" ? \"__proto_\" : key;\n}\nlet readFixedString = readStringJS;\nfunction readStringJS(length) {\n  let result;\n  if (length < 16) {\n    if (result = shortStringInJS(length)) {\n      return result;\n    }\n  }\n  if (length > 64 && decoder) {\n    return decoder.decode(src.subarray(position, position += length));\n  }\n  const end = position + length;\n  const units = [];\n  result = \"\";\n  while (position < end) {\n    const byte1 = src[position++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = src[position++] & 0x3f;\n      units.push((byte1 & 0x1f) << 6 | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = src[position++] & 0x3f;\n      const byte3 = src[position++] & 0x3f;\n      units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = src[position++] & 0x3f;\n      const byte3 = src[position++] & 0x3f;\n      const byte4 = src[position++] & 0x3f;\n      let unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(unit >>> 10 & 0x3ff | 0xd800);\n        unit = 0xdc00 | unit & 0x3ff;\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n    if (units.length >= 0x1000) {\n      result += fromCharCode.apply(String, units);\n      units.length = 0;\n    }\n  }\n  if (units.length > 0) {\n    result += fromCharCode.apply(String, units);\n  }\n  return result;\n}\nlet fromCharCode = String.fromCharCode;\nfunction longStringInJS(length) {\n  let start = position;\n  let bytes = new Array(length);\n  for (let i = 0; i < length; i++) {\n    const byte = src[position++];\n    if ((byte & 0x80) > 0) {\n      position = start;\n      return;\n    }\n    bytes[i] = byte;\n  }\n  return fromCharCode.apply(String, bytes);\n}\nfunction shortStringInJS(length) {\n  if (length < 4) {\n    if (length < 2) {\n      if (length === 0) {\n        return \"\";\n      } else {\n        let a = src[position++];\n        if ((a & 0x80) > 1) {\n          position -= 1;\n          return;\n        }\n        return fromCharCode(a);\n      }\n    } else {\n      let a = src[position++];\n      let b = src[position++];\n      if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n        position -= 2;\n        return;\n      }\n      if (length < 3) {\n        return fromCharCode(a, b);\n      }\n      let c = src[position++];\n      if ((c & 0x80) > 0) {\n        position -= 3;\n        return;\n      }\n      return fromCharCode(a, b, c);\n    }\n  } else {\n    let a = src[position++];\n    let b = src[position++];\n    let c = src[position++];\n    let d = src[position++];\n    if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n      position -= 4;\n      return;\n    }\n    if (length < 6) {\n      if (length === 4) {\n        return fromCharCode(a, b, c, d);\n      } else {\n        let e = src[position++];\n        if ((e & 0x80) > 0) {\n          position -= 5;\n          return;\n        }\n        return fromCharCode(a, b, c, d, e);\n      }\n    } else if (length < 8) {\n      let e = src[position++];\n      let f = src[position++];\n      if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n        position -= 6;\n        return;\n      }\n      if (length < 7) {\n        return fromCharCode(a, b, c, d, e, f);\n      }\n      let g = src[position++];\n      if ((g & 0x80) > 0) {\n        position -= 7;\n        return;\n      }\n      return fromCharCode(a, b, c, d, e, f, g);\n    } else {\n      let e = src[position++];\n      let f = src[position++];\n      let g = src[position++];\n      let h = src[position++];\n      if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n        position -= 8;\n        return;\n      }\n      if (length < 10) {\n        if (length === 8) {\n          return fromCharCode(a, b, c, d, e, f, g, h);\n        } else {\n          let i = src[position++];\n          if ((i & 0x80) > 0) {\n            position -= 9;\n            return;\n          }\n          return fromCharCode(a, b, c, d, e, f, g, h, i);\n        }\n      } else if (length < 12) {\n        let i = src[position++];\n        let j = src[position++];\n        if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n          position -= 10;\n          return;\n        }\n        if (length < 11) {\n          return fromCharCode(a, b, c, d, e, f, g, h, i, j);\n        }\n        let k = src[position++];\n        if ((k & 0x80) > 0) {\n          position -= 11;\n          return;\n        }\n        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n      } else {\n        let i = src[position++];\n        let j = src[position++];\n        let k = src[position++];\n        let l = src[position++];\n        if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n          position -= 12;\n          return;\n        }\n        if (length < 14) {\n          if (length === 12) {\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n          } else {\n            let m = src[position++];\n            if ((m & 0x80) > 0) {\n              position -= 13;\n              return;\n            }\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n          }\n        } else {\n          let m = src[position++];\n          let n = src[position++];\n          if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n            position -= 14;\n            return;\n          }\n          if (length < 15) {\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n          }\n          let o = src[position++];\n          if ((o & 0x80) > 0) {\n            position -= 15;\n            return;\n          }\n          return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n        }\n      }\n    }\n  }\n}\nfunction readBin(length) {\n  return currentDecoder.copyBuffers ?\n  // specifically use the copying slice (not the node one)\n  Uint8Array.prototype.slice.call(src, position, position += length) : src.subarray(position, position += length);\n}\nlet f32Array = new Float32Array(1);\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4);\nfunction getFloat16() {\n  let byte0 = src[position++];\n  let byte1 = src[position++];\n  let exponent = (byte0 & 0x7f) >> 2;\n  if (exponent === 0x1f) {\n    // specials\n    if (byte1 || byte0 & 3) {\n      return NaN;\n    }\n    return byte0 & 0x80 ? -Infinity : Infinity;\n  }\n  if (exponent === 0) {\n    // sub-normals\n    // significand with 10 fractional bits and divided by 2^14\n    let abs = ((byte0 & 3) << 8 | byte1) / (1 << 24);\n    return byte0 & 0x80 ? -abs : abs;\n  }\n  u8Array[3] = byte0 & 0x80 |\n  // sign bit\n  (exponent >> 1) + 56; // 4 of 5 of the exponent bits, re-offset-ed\n  u8Array[2] = (byte0 & 7) << 5 |\n  // last exponent bit and first two mantissa bits\n  byte1 >> 3; // next 5 bits of mantissa\n  u8Array[1] = byte1 << 5; // last three bits of mantissa\n  u8Array[0] = 0;\n  return f32Array[0];\n}\nclass Tag {\n  constructor(value, tag) {\n    this.value = value;\n    this.tag = tag;\n  }\n}\ncurrentExtensions[0] = dateString => {\n  // string date extension\n  return new Date(dateString);\n};\ncurrentExtensions[1] = epochSec => {\n  // numeric date extension\n  return new Date(Math.round(epochSec * 1000));\n};\ncurrentExtensions[2] = buffer => {\n  // bigint extension\n  let value = BigInt(0);\n  for (let i = 0, l = buffer.byteLength; i < l; i++) {\n    value = BigInt(buffer[i]) + value << BigInt(8);\n  }\n  return value;\n};\ncurrentExtensions[3] = buffer => {\n  // negative bigint extension\n  return BigInt(-1) - currentExtensions[2](buffer);\n};\ncurrentExtensions[4] = fraction => {\n  // best to reparse to maintain accuracy\n  return Number(fraction[1] + \"e\" + fraction[0]);\n};\ncurrentExtensions[5] = fraction => {\n  // probably not sufficiently accurate\n  return fraction[1] * Math.exp(fraction[0] * Math.log(2));\n};\n\n// the registration of the record definition extension\nconst recordDefinition = definition => {\n  let id = definition[0] - 0xe000;\n  let structure = definition[1];\n  let existingStructure = currentStructures[id];\n  if (existingStructure && existingStructure.isShared) {\n    (currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure;\n  }\n  currentStructures[id] = structure;\n  structure.read = createStructureReader(structure);\n  let object = {};\n  if (currentDecoder.keyMap) {\n    for (let i = 2, l = definition.length; i < l; i++) {\n      let key = currentDecoder.decodeKey(structure[i - 2]);\n      object[safeKey(key)] = definition[i];\n    }\n  } else {\n    for (let i = 2, l = definition.length; i < l; i++) {\n      let key = structure[i - 2];\n      object[safeKey(key)] = definition[i];\n    }\n  }\n  return object;\n};\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = recordDefinition;\ncurrentExtensions[14] = value => {\n  if (bundledStrings) {\n    return bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value);\n  }\n  return new Tag(value, 14);\n};\ncurrentExtensions[15] = value => {\n  if (bundledStrings) {\n    return bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value);\n  }\n  return new Tag(value, 15);\n};\nlet glbl = {\n  Error,\n  RegExp\n};\ncurrentExtensions[27] = data => {\n  // http://cbor.schmorp.de/generic-object\n  return (glbl[data[0]] || Error)(data[1], data[2]);\n};\nconst packedTable = _read => {\n  if (src[position++] != 0x84) {\n    throw new Error(\"Packed values structure must be followed by a 4 element array\");\n  }\n  let newPackedValues = _read(); // packed values\n  packedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues;\n  packedValues.prefixes = _read();\n  packedValues.suffixes = _read();\n  return _read(); // read the rump\n};\npackedTable.handlesRead = true;\ncurrentExtensions[51] = packedTable;\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = data => {\n  // packed reference\n  if (!packedValues) {\n    if (currentDecoder.getShared) {\n      loadShared();\n    } else {\n      return new Tag(data, PACKED_REFERENCE_TAG_ID);\n    }\n  }\n  if (typeof data === \"number\") {\n    return packedValues[16 + (data >= 0 ? 2 * data : -2 * data - 1)];\n  }\n  throw new Error(\"No support for non-integer packed references yet\");\n};\ncurrentExtensions[25] = id => {\n  return stringRefs[id];\n};\ncurrentExtensions[256] = _read => {\n  stringRefs = [];\n  try {\n    return _read();\n  } finally {\n    stringRefs = null;\n  }\n};\ncurrentExtensions[256].handlesRead = true;\ncurrentExtensions[28] = _read => {\n  // shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n  if (!referenceMap) {\n    referenceMap = new Map();\n    referenceMap.id = 0;\n  }\n  let id = referenceMap.id++;\n  let token = src[position];\n  let target;\n  // TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n  // ahead past references to record structure definitions\n  if (token >> 5 == 4) {\n    target = [];\n  } else {\n    target = {};\n  }\n  let refEntry = {\n    target\n  }; // a placeholder object\n  referenceMap.set(id, refEntry);\n  let targetProperties = _read(); // read the next value as the target object to id\n  if (refEntry.used) {\n    // there is a cycle, so we have to assign properties to original target\n    return Object.assign(target, targetProperties);\n  }\n  refEntry.target = targetProperties; // the placeholder wasn't used, replace with the deserialized one\n  return targetProperties; // no cycle, can just use the returned read object\n};\ncurrentExtensions[28].handlesRead = true;\ncurrentExtensions[29] = id => {\n  // sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n  let refEntry = referenceMap.get(id);\n  refEntry.used = true;\n  return refEntry.target;\n};\ncurrentExtensions[258] = array => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = _read => {\n  // https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n  // for decoding as a standard Map\n  if (currentDecoder.mapsAsObjects) {\n    currentDecoder.mapsAsObjects = false;\n    restoreMapsAsObject = true;\n  }\n  return _read();\n}).handlesRead = true;\nfunction combine(a, b) {\n  if (typeof a === \"string\") {\n    return a + b;\n  }\n  if (a instanceof Array) {\n    return a.concat(b);\n  }\n  return Object.assign({}, a, b);\n}\nfunction getPackedValues() {\n  if (!packedValues) {\n    if (currentDecoder.getShared) {\n      loadShared();\n    } else {\n      throw new Error(\"No packed values available\");\n    }\n  }\n  return packedValues;\n}\nconst SHARED_DATA_TAG_ID = 0x53687264; // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n  if (tag >= 225 && tag <= 255) {\n    return combine(getPackedValues().prefixes[tag - 224], input);\n  }\n  if (tag >= 28704 && tag <= 32767) {\n    return combine(getPackedValues().prefixes[tag - 28672], input);\n  }\n  if (tag >= 1879052288 && tag <= 2147483647) {\n    return combine(getPackedValues().prefixes[tag - 1879048192], input);\n  }\n  if (tag >= 216 && tag <= 223) {\n    return combine(input, getPackedValues().suffixes[tag - 216]);\n  }\n  if (tag >= 27647 && tag <= 28671) {\n    return combine(input, getPackedValues().suffixes[tag - 27639]);\n  }\n  if (tag >= 1811940352 && tag <= 1879048191) {\n    return combine(input, getPackedValues().suffixes[tag - 1811939328]);\n  }\n  if (tag == SHARED_DATA_TAG_ID) {\n    // we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n    return {\n      packedValues: packedValues,\n      structures: currentStructures.slice(0),\n      version: input\n    };\n  }\n  if (tag == 55799) {\n    // self-descriptive CBOR tag, just return input value\n    return input;\n  }\n});\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1;\nconst typedArrays = [Uint8Array];\nconst typedArrayTags = [64];\nfor (let i = 0; i < typedArrays.length; i++) {\n  registerTypedArray(typedArrays[i], typedArrayTags[i]);\n}\nfunction registerTypedArray(TypedArray, tag) {\n  let dvMethod = \"get\" + TypedArray.name.slice(0, -5);\n  if (typeof TypedArray !== \"function\") {\n    TypedArray = null;\n  }\n  let bytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n  for (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n    if (!littleEndian && bytesPerElement == 1) {\n      continue;\n    }\n    let sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : 3;\n    currentExtensions[littleEndian ? tag : tag - 4] = bytesPerElement == 1 || littleEndian == isLittleEndianMachine ? buffer => {\n      if (!TypedArray) {\n        throw new Error(\"Could not find typed array for code \" + tag);\n      }\n      // we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n      return new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer);\n    } : buffer => {\n      if (!TypedArray) {\n        throw new Error(\"Could not find typed array for code \" + tag);\n      }\n      let dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n      let elements = buffer.length >> sizeShift;\n      let ta = new TypedArray(elements);\n      let method = dv[dvMethod];\n      for (let i = 0; i < elements; i++) {\n        ta[i] = method.call(dv, i << sizeShift, littleEndian);\n      }\n      return ta;\n    };\n  }\n}\nfunction readBundleExt() {\n  let length = readJustLength();\n  let bundlePosition = position + read();\n  for (let i = 2; i < length; i++) {\n    // skip past bundles that were already read\n    let bundleLength = readJustLength(); // this will increment position, so must add to position afterwards\n    position += bundleLength;\n  }\n  let dataPosition = position;\n  position = bundlePosition;\n  bundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())];\n  bundledStrings.position0 = 0;\n  bundledStrings.position1 = 0;\n  bundledStrings.postBundlePosition = position;\n  position = dataPosition;\n  return read();\n}\nfunction readJustLength() {\n  let token = src[position++] & 0x1f;\n  if (token > 0x17) {\n    switch (token) {\n      case 0x18:\n        token = src[position++];\n        break;\n      case 0x19:\n        token = dataView.getUint16(position);\n        position += 2;\n        break;\n      case 0x1a:\n        token = dataView.getUint32(position);\n        position += 4;\n        break;\n    }\n  }\n  return token;\n}\nfunction loadShared() {\n  if (currentDecoder.getShared) {\n    let sharedData = saveState(() => {\n      // save the state in case getShared modifies our buffer\n      src = null;\n      return currentDecoder.getShared();\n    }) || {};\n    let updatedStructures = sharedData.structures || [];\n    currentDecoder.sharedVersion = sharedData.version;\n    packedValues = currentDecoder.sharedValues = sharedData.packedValues;\n    if (currentStructures === true) {\n      currentDecoder.structures = currentStructures = updatedStructures;\n    } else {\n      currentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures));\n    }\n  }\n}\nfunction saveState(callback) {\n  let savedSrcEnd = srcEnd;\n  let savedPosition = position;\n  let savedSrcStringStart = srcStringStart;\n  let savedSrcStringEnd = srcStringEnd;\n  let savedSrcString = srcString;\n  let savedReferenceMap = referenceMap;\n  let savedBundledStrings = bundledStrings;\n\n  // TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n  let savedSrc = new Uint8Array(src.slice(0, srcEnd)); // we copy the data in case it changes while external data is processed\n  let savedStructures = currentStructures;\n  let savedDecoder = currentDecoder;\n  let savedSequentialMode = sequentialMode;\n  let value = callback();\n  srcEnd = savedSrcEnd;\n  position = savedPosition;\n  srcStringStart = savedSrcStringStart;\n  srcStringEnd = savedSrcStringEnd;\n  srcString = savedSrcString;\n  referenceMap = savedReferenceMap;\n  bundledStrings = savedBundledStrings;\n  src = savedSrc;\n  sequentialMode = savedSequentialMode;\n  currentStructures = savedStructures;\n  currentDecoder = savedDecoder;\n  dataView = new DataView(src.buffer, src.byteOffset, src.byteLength);\n  return value;\n}\nfunction clearSource() {\n  src = null;\n  referenceMap = null;\n  currentStructures = null;\n}\nconst mult10 = new Array(147); // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n  mult10[i] = Number(\"1e\" + Math.floor(45.15 - i * 0.30103));\n}\nconst defaultDecoder = new Decoder({\n  useRecords: false\n});\nconst decode = defaultDecoder.decode;\n\n/**\n * @internal\n * @param hex - The hex string to convert to bytes\n */\nfunction hexToBytes(hex) {\n  hex = hex.toString(16);\n  if (!hex.startsWith(\"0x\")) {\n    hex = `0x${hex}`;\n  }\n  if (!isHexStrict(hex)) {\n    throw new Error(`Given value \"${hex}\" is not a valid hex string.`);\n  }\n  hex = hex.replace(/^0x/i, \"\");\n  const bytes = [];\n  for (let c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.slice(c, c + 2), 16));\n  }\n  return bytes;\n}\n\n/**\n * @internal\n * @param hex - The hex string to check\n */\nfunction isHexStrict(hex) {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex.toString());\n}\n\n/**\n * @internal\n * @param bytecode - The bytecode to extract the IPFS hash from\n */\nfunction extractIPFSHashFromBytecode(bytecode) {\n  const numericBytecode = hexToBytes(bytecode);\n  const cborLength = numericBytecode[numericBytecode.length - 2] * 0x100 + numericBytecode[numericBytecode.length - 1];\n  const bytecodeBuffer = Uint8Array.from(numericBytecode.slice(numericBytecode.length - 2 - cborLength, -2));\n  const cborData = decode(bytecodeBuffer);\n  if (\"ipfs\" in cborData && cborData[\"ipfs\"]) {\n    try {\n      return `ipfs://${bs58.encode(cborData[\"ipfs\"])}`;\n    } catch (e) {\n      console.warn(\"feature-detection ipfs cbor failed\", e);\n    }\n  }\n  return undefined;\n}\n\n/**\n * @internal\n * @param bytecode - The bytecode to check\n */\nfunction extractMinimalProxyImplementationAddress(bytecode) {\n  // EIP-1167 clone minimal proxy - https://eips.ethereum.org/EIPS/eip-1167\n  if (bytecode.startsWith(\"0x363d3d373d3d3d363d73\")) {\n    const implementationAddress = bytecode.slice(22, 62);\n    return `0x${implementationAddress}`;\n  }\n\n  // Minimal Proxy with receive() from 0xSplits - https://github.com/0xSplits/splits-contracts/blob/c7b741926ec9746182d0d1e2c4c2046102e5d337/contracts/libraries/Clones.sol\n  if (bytecode.startsWith(\"0x36603057343d5230\")) {\n    // +40 = size of addr\n    const implementationAddress = bytecode.slice(122, 122 + 40);\n    return `0x${implementationAddress}`;\n  }\n\n  // 0age's minimal proxy - https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n  if (bytecode.startsWith(\"0x3d3d3d3d363d3d37363d73\")) {\n    // +40 = size of addr\n    const implementationAddress = bytecode.slice(24, 24 + 40);\n    return `0x${implementationAddress}`;\n  }\n\n  // vyper's minimal proxy (uniswap v1) - https://etherscan.io/address/0x09cabec1ead1c0ba254b09efb3ee13841712be14#code\n  if (bytecode.startsWith(\"0x366000600037611000600036600073\")) {\n    const implementationAddress = bytecode.slice(32, 32 + 40);\n    return `0x${implementationAddress}`;\n  }\n  if (bytecode.startsWith(\"0x36600080376020600036600073\")) {\n    const implementationAddress = bytecode.slice(28, 28 + 40);\n    return `0x${implementationAddress}`;\n  }\n\n  // EIP-7511 minimal proxy with PUSH0 opcode - https://eips.ethereum.org/EIPS/eip-7511\n  if (bytecode.startsWith(\"0x365f5f375f5f365f73\")) {\n    const implementationAddress = bytecode.slice(20, 60);\n    return `0x${implementationAddress}`;\n  }\n  return undefined;\n}\n\n/**\n * @internal\n * @param address - the contract address\n * @param provider - RPC provider\n */\nasync function resolveContractUriFromAddress(address, provider) {\n  const {\n    bytecode\n  } = await resolveImplementation(address, provider);\n  return extractIPFSHashFromBytecode(bytecode);\n}\n\n/**\n * @internal\n */\nasync function resolveContractUriAndBytecode(address, provider) {\n  const {\n    bytecode\n  } = await resolveImplementation(address, provider);\n  return {\n    uri: extractIPFSHashFromBytecode(bytecode),\n    bytecode\n  };\n}\n\n/**\n * Resolve the implementation address of a proxy contract and its bytecode\n * @param address - the contract address\n * @param provider - RPC provider\n * @returns The implementation address and its bytecode\n */\nasync function resolveImplementation(address, provider) {\n  const [bytecode, beacon] = await Promise.all([fetchBytecode(address, provider), getBeaconFromStorageSlot(address, provider)]);\n\n  // check minimal proxy first synchronously\n  const minimalProxyImplementationAddress = extractMinimalProxyImplementationAddress(bytecode);\n  if (minimalProxyImplementationAddress) {\n    return {\n      address: minimalProxyImplementationAddress,\n      bytecode: await fetchBytecode(minimalProxyImplementationAddress, provider)\n    };\n  }\n\n  // check other proxy types\n  if (beacon && beacon !== constants.AddressZero) {\n    // In case of a BeaconProxy, it is setup as BeaconProxy --> Beacon --> Implementation\n    // Hence we replace the proxy address with Beacon address, and continue further resolving below\n    address = beacon;\n  }\n  const impl = await Promise.all([getImplementationFromStorageSlot(address, provider), getImplementationFromContractCall(address, provider)]);\n  for (const implementationAddress of impl) {\n    if (implementationAddress && utils.isAddress(implementationAddress) && implementationAddress !== constants.AddressZero) {\n      try {\n        const implBytecode = await fetchBytecode(implementationAddress, provider);\n        return {\n          address: implementationAddress,\n          bytecode: implBytecode\n        };\n      } catch (e) {\n        if (e instanceof Error) {\n          // Ignore if fetchBytecode throws the error below, implying that bytecode is 0x.\n          // In that case we don't want to throw, and just return the original contract address and bytecode.\n          if (!e.message.includes(`Contract at ${implementationAddress} does not exist on chain`)) {\n            throw e;\n          }\n        }\n      }\n    }\n  }\n  return {\n    address,\n    bytecode\n  };\n}\nasync function fetchBytecode(address, provider) {\n  try {\n    const bytecode = await provider.getCode(address);\n    if (bytecode === \"0x\") {\n      const chain = await provider.getNetwork();\n      throw new Error(`Contract at ${address} does not exist on chain '${chain.name}' (chainId: ${chain.chainId})`);\n    }\n    return bytecode;\n  } catch (e) {\n    throw new Error(`Failed to get bytecode for address ${address}: ${e}`);\n  }\n}\nasync function getImplementationFromStorageSlot(address, provider) {\n  try {\n    const proxyStorage = await provider.getStorageAt(address, BigNumber.from(\"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"));\n    return `0x${proxyStorage.slice(-40)}`;\n  } catch (e) {\n    return undefined;\n  }\n}\nasync function getBeaconFromStorageSlot(address, provider) {\n  /**\n   * The storage slot of the Beacon as defined in EIP-1967\n   * See https://eips.ethereum.org/EIPS/eip-1967#beacon-contract-address\n   *\n   * bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1))\n   */\n\n  try {\n    const proxyStorage = await provider.getStorageAt(address, BigNumber.from(\"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"));\n    return `0x${proxyStorage.slice(-40)}`;\n  } catch (e) {\n    return undefined;\n  }\n}\nasync function getImplementationFromContractCall(address, provider) {\n  try {\n    const proxy = new Contract(address, UPGRADEABLE_PROXY_ABI, provider);\n    return await proxy.implementation();\n  } catch (e) {\n    return undefined;\n  }\n}\nconst UPGRADEABLE_PROXY_ABI = [{\n  type: \"function\",\n  name: \"implementation\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}];\n\nconst MultichainRegistry_address = \"0xcdAD8FA86e18538aC207872E8ff3536501431B73\"; // Polygon only\n\n/**\n * @internal\n */\nfunction getMultichainRegistryAddress() {\n  return getProcessEnv(\"multiChainRegistryAddress\", MultichainRegistry_address);\n}\n\n/**\n * @internal\n */\nfunction joinABIs(abis, abiWithConstructor) {\n  const parsedABIs = abis.map(abi => AbiSchema.parse(abi)).flat();\n  const filteredABIs = parsedABIs.filter(item => item.type !== \"constructor\");\n  if (abiWithConstructor) {\n    filteredABIs.push(...AbiSchema.parse(abiWithConstructor));\n  }\n  const finalABIs = unique(filteredABIs, (a, b) => {\n    return a.name === b.name && a.type === b.type && a.inputs.length === b.inputs.length;\n  });\n  return AbiSchema.parse(finalABIs);\n}\n\nconst FEATURE_TOKEN_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC20ClaimConditionsV1\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"erc20claimconditions\"\n  },\n  abis: [ERC20Abi, IDropSinglePhaseV1],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC20ClaimConditionsV2\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"erc20claimconditions\"\n  },\n  abis: [ERC20Abi, IDropSinglePhase],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_PHASES_V2 = {\n  name: \"ERC20ClaimPhasesV2\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"erc20claimphases\"\n  },\n  abis: [ERC20Abi, IDrop],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_PHASES_V1 = {\n  name: \"ERC20ClaimPhasesV1\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"erc20claimphases\"\n  },\n  abis: [DropERC20_V2Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_BURNABLE = {\n  name: \"ERC20Burnable\",\n  namespace: \"token.burn\",\n  docLinks: {\n    sdk: \"sdk.erc20burnable\",\n    contracts: \"erc20burnable\"\n  },\n  abis: [ERC20Abi, IBurnableERC20Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_SIGNATURE_MINTABLE = {\n  name: \"ERC20SignatureMintable\",\n  namespace: \"token.signature\",\n  docLinks: {\n    sdk: \"sdk.erc20signaturemintable\",\n    contracts: \"erc20signaturemint\"\n  },\n  abis: [ERC20Abi, ISignatureMintERC20Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_BATCH_MINTABLE = {\n  name: \"ERC20BatchMintable\",\n  namespace: \"token.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc20batchmintable\",\n    contracts: \"erc20batchmintable\"\n  },\n  abis: [ERC20Abi, IMintableERC20Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_TOKEN_MINTABLE = {\n  name: \"ERC20Mintable\",\n  namespace: \"token.mint\",\n  docLinks: {\n    sdk: \"sdk.erc20mintable\",\n    contracts: \"erc20mintable\"\n  },\n  abis: [ERC20Abi, IMintableERC20Abi],\n  features: {\n    [FEATURE_TOKEN_BATCH_MINTABLE.name]: FEATURE_TOKEN_BATCH_MINTABLE\n  }\n};\nconst FEATURE_TOKEN_PERMIT = {\n  name: \"ERC20Permit\",\n  namespace: \"token.permit\",\n  docLinks: {\n    sdk: \"sdk.erc20permit\",\n    contracts: \"erc20permit\"\n  },\n  abis: [ERC20Abi, IERC20PermitAbi],\n  features: {}\n};\nconst FEATURE_TOKEN = {\n  name: \"ERC20\",\n  namespace: \"token\",\n  docLinks: {\n    sdk: \"sdk.erc20\",\n    contracts: \"erc20\"\n  },\n  abis: [ERC20Abi, IERC20MetadataAbi],\n  features: {\n    [FEATURE_TOKEN_BURNABLE.name]: FEATURE_TOKEN_BURNABLE,\n    [FEATURE_TOKEN_MINTABLE.name]: FEATURE_TOKEN_MINTABLE,\n    [FEATURE_TOKEN_CLAIM_CONDITIONS_V1.name]: FEATURE_TOKEN_CLAIM_CONDITIONS_V1,\n    [FEATURE_TOKEN_CLAIM_CONDITIONS_V2.name]: FEATURE_TOKEN_CLAIM_CONDITIONS_V2,\n    [FEATURE_TOKEN_CLAIM_PHASES_V1.name]: FEATURE_TOKEN_CLAIM_PHASES_V1,\n    [FEATURE_TOKEN_CLAIM_PHASES_V2.name]: FEATURE_TOKEN_CLAIM_PHASES_V2,\n    [FEATURE_TOKEN_SIGNATURE_MINTABLE.name]: FEATURE_TOKEN_SIGNATURE_MINTABLE,\n    [FEATURE_TOKEN_PERMIT.name]: FEATURE_TOKEN_PERMIT\n  }\n};\n\nconst FEATURE_NFT_BURNABLE = {\n  name: \"ERC721Burnable\",\n  namespace: \"nft.burn\",\n  docLinks: {\n    sdk: \"sdk.erc721burnable\",\n    contracts: \"erc721burnable\"\n  },\n  abis: [Erc721Abi, IBurnableERC721Abi],\n  features: {}\n};\nconst FEATURE_NFT_REVEALABLE = {\n  name: \"ERC721Revealable\",\n  namespace: \"nft.drop.revealer\",\n  docLinks: {\n    sdk: \"sdk.delayedreveal\",\n    contracts: \"erc721revealable\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, DelayedRevealAbi],\n  features: {}\n};\nconst FEATURE_NFT_TIERED_DROP = {\n  name: \"ERC721TieredDrop\",\n  namespace: \"nft.tieredDrop\",\n  docLinks: {\n    sdk: \"sdk.erc721tiereddrop\",\n    //TODO\n    contracts: \"\"\n  },\n  abis: [Erc721Abi, TieredDropAbi],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC721ClaimConditionsV1\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimconditions\"\n  },\n  abis: [Erc721Abi, IDropSinglePhaseV1],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC721ClaimConditionsV2\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimconditions\"\n  },\n  abis: [Erc721Abi, IDropSinglePhase],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_PHASES_V1 = {\n  name: \"ERC721ClaimPhasesV1\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimphases\"\n  },\n  abis: [DropERC721_V3Abi],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_PHASES_V2 = {\n  name: \"ERC721ClaimPhasesV2\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimphases\"\n  },\n  abis: [Erc721Abi, IDrop],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CUSTOM = {\n  name: \"ERC721ClaimCustom\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimcustom\"\n  },\n  abis: [Erc721Abi, IClaimableERC721],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_ZORA = {\n  name: \"ERC721ClaimZora\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"erc721claimzora\"\n  },\n  abis: [Erc721Abi, zora_IDropERC721],\n  features: {}\n};\nconst FEATURE_NFT_LAZY_MINTABLE = {\n  name: \"ERC721LazyMintable\",\n  namespace: \"nft.drop\",\n  docLinks: {\n    sdk: \"sdk.erc721lazymintable\",\n    contracts: \"lazymint\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi],\n  features: {\n    [FEATURE_NFT_REVEALABLE.name]: FEATURE_NFT_REVEALABLE\n  }\n};\nconst FEATURE_NFT_BATCH_MINTABLE = {\n  name: \"ERC721BatchMintable\",\n  namespace: \"nft.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc721batchmintable\",\n    contracts: \"erc721batchmintable\"\n  },\n  abis: [Erc721Abi, IMintableERC721Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_NFT_MINTABLE = {\n  name: \"ERC721Mintable\",\n  namespace: \"nft.mint\",\n  docLinks: {\n    sdk: \"sdk.erc721mintable\",\n    contracts: \"erc721mintable\"\n  },\n  abis: [Erc721Abi, IMintableERC721Abi],\n  features: {\n    [FEATURE_NFT_BATCH_MINTABLE.name]: FEATURE_NFT_BATCH_MINTABLE\n  }\n};\nconst FEATURE_NFT_SIGNATURE_MINTABLE_V2 = {\n  name: \"ERC721SignatureMintV2\",\n  namespace: \"nft.signature\",\n  docLinks: {\n    sdk: \"sdk.erc721signaturemint\",\n    contracts: \"erc721signaturemint\"\n  },\n  abis: [Erc721Abi, SignatureMintERC721Abi],\n  features: {}\n};\nconst FEATURE_NFT_SIGNATURE_MINTABLE_V1 = {\n  name: \"ERC721SignatureMintV1\",\n  namespace: \"nft.signature\",\n  docLinks: {\n    sdk: \"sdk.erc721signaturemint\",\n    contracts: \"erc721signaturemint\"\n  },\n  abis: [SignatureMintERC721_V1Abi],\n  features: {}\n};\nconst FEATURE_NFT_ENUMERABLE = {\n  name: \"ERC721Enumerable\",\n  namespace: \"nft.query.owned\",\n  docLinks: {\n    sdk: \"sdk.erc721enumerable\",\n    contracts: \"erc721enumerable\"\n  },\n  abis: [Erc721Abi, Erc721EnumerableAbi],\n  features: {}\n};\nconst FEATURE_NFT_QUERYABLE = {\n  name: \"ERC721AQueryable\",\n  namespace: \"nft.query.owned\",\n  docLinks: {\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [Erc721AQueryableAbi],\n  features: {}\n};\nconst FEATURE_NFT_SUPPLY = {\n  name: \"ERC721Supply\",\n  namespace: \"nft.query\",\n  docLinks: {\n    sdk: \"sdk.erc721supply\",\n    contracts: \"erc721supply\"\n  },\n  abis: [Erc721Abi, Erc721SupplyAbi],\n  features: {\n    [FEATURE_NFT_ENUMERABLE.name]: FEATURE_NFT_ENUMERABLE,\n    [FEATURE_NFT_QUERYABLE.name]: FEATURE_NFT_QUERYABLE\n  }\n};\nconst FEATURE_NFT_SHARED_METADATA = {\n  name: \"ERC721SharedMetadata\",\n  namespace: \"nft.sharedmetadata\",\n  docLinks: {\n    sdk: \"sdk.sharedmetadata\",\n    contracts: \"SharedMetadata\"\n  },\n  abis: [Erc721Abi, SharedMetadataAbi],\n  features: {}\n};\nconst FEATURE_NFT_LOYALTY_CARD = {\n  name: \"ERC721LoyaltyCard\",\n  namespace: \"nft.loyaltyCard\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [ILoyaltyCardAbi],\n  features: {}\n};\nconst FEATURE_NFT_UPDATABLE_METADATA = {\n  name: \"ERC721UpdatableMetadata\",\n  namespace: \"nft.metadata\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [Erc721Abi, INFTMetadataAbi],\n  features: {}\n};\nconst FEATURE_NFT = {\n  name: \"ERC721\",\n  namespace: \"nft\",\n  docLinks: {\n    sdk: \"sdk.erc721\",\n    contracts: \"erc721\"\n  },\n  abis: [Erc721Abi, IERC721MetadataAbi],\n  features: {\n    [FEATURE_NFT_BURNABLE.name]: FEATURE_NFT_BURNABLE,\n    [FEATURE_NFT_SUPPLY.name]: FEATURE_NFT_SUPPLY,\n    [FEATURE_NFT_MINTABLE.name]: FEATURE_NFT_MINTABLE,\n    [FEATURE_NFT_LAZY_MINTABLE.name]: FEATURE_NFT_LAZY_MINTABLE,\n    [FEATURE_NFT_SIGNATURE_MINTABLE_V1.name]: FEATURE_NFT_SIGNATURE_MINTABLE_V1,\n    [FEATURE_NFT_SIGNATURE_MINTABLE_V2.name]: FEATURE_NFT_SIGNATURE_MINTABLE_V2,\n    [FEATURE_NFT_TIERED_DROP.name]: FEATURE_NFT_TIERED_DROP,\n    [FEATURE_NFT_CLAIM_CUSTOM.name]: FEATURE_NFT_CLAIM_CUSTOM,\n    [FEATURE_NFT_CLAIM_ZORA.name]: FEATURE_NFT_CLAIM_ZORA,\n    [FEATURE_NFT_CLAIM_CONDITIONS_V1.name]: FEATURE_NFT_CLAIM_CONDITIONS_V1,\n    [FEATURE_NFT_CLAIM_CONDITIONS_V2.name]: FEATURE_NFT_CLAIM_CONDITIONS_V2,\n    [FEATURE_NFT_CLAIM_PHASES_V1.name]: FEATURE_NFT_CLAIM_PHASES_V1,\n    [FEATURE_NFT_CLAIM_PHASES_V2.name]: FEATURE_NFT_CLAIM_PHASES_V2,\n    [FEATURE_NFT_SHARED_METADATA.name]: FEATURE_NFT_SHARED_METADATA,\n    [FEATURE_NFT_LOYALTY_CARD.name]: FEATURE_NFT_LOYALTY_CARD,\n    [FEATURE_NFT_UPDATABLE_METADATA.name]: FEATURE_NFT_UPDATABLE_METADATA\n  }\n};\n\n// TODO could be part of IERC1155Metadata even though its not in the spec\nconst NAME_SYMBOL_ABI = [{\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst FEATURE_EDITION_BURNABLE = {\n  name: \"ERC1155Burnable\",\n  namespace: \"edition.burn\",\n  docLinks: {\n    sdk: \"sdk.erc1155burnable\",\n    contracts: \"erc1155burnable\"\n  },\n  abis: [Erc1155Abi, IBurnableERC1155Abi],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC1155ClaimConditionsV1\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"erc1155dropsinglephase\"\n  },\n  abis: [Erc1155Abi, IDropSinglePhase1155_V1],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC1155ClaimConditionsV2\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"erc1155claimconditions\"\n  },\n  abis: [Erc1155Abi, IDropSinglePhase1155],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_PHASES_V2 = {\n  name: \"ERC1155ClaimPhasesV2\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"erc1155claimphases\"\n  },\n  abis: [Erc1155Abi, IDropMultiPhase1155],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_PHASES_V1 = {\n  name: \"ERC1155ClaimPhasesV1\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"erc1155claimphases\"\n  },\n  abis: [DropERC1155_V2Abi],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CUSTOM = {\n  name: \"ERC1155ClaimCustom\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"erc1155claimcustom\"\n  },\n  abis: [Erc1155Abi, IClaimableERC1155],\n  features: {}\n};\nconst FEATURE_EDITION_REVEALABLE = {\n  name: \"ERC1155Revealable\",\n  namespace: \"edition.drop.revealer\",\n  docLinks: {\n    sdk: \"sdk.drop.delayedreveal\",\n    contracts: \"erc1155revealable\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, DelayedRevealAbi],\n  features: {}\n};\nconst FEATURE_EDITION_LAZY_MINTABLE_V2 = {\n  name: \"ERC1155LazyMintableV2\",\n  namespace: \"edition.drop\",\n  docLinks: {\n    sdk: \"sdk.erc1155droppable\",\n    contracts: \"lazymint\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi],\n  features: {\n    [FEATURE_EDITION_REVEALABLE.name]: FEATURE_EDITION_REVEALABLE\n  }\n};\nconst FEATURE_EDITION_LAZY_MINTABLE_V1 = {\n  name: \"ERC1155LazyMintableV1\",\n  namespace: \"edition.drop\",\n  docLinks: {\n    sdk: \"sdk.erc1155droppable\",\n    contracts: \"lazymint\"\n  },\n  abis: [DropERC1155_V2Abi],\n  features: {\n    [FEATURE_EDITION_CLAIM_PHASES_V1.name]: FEATURE_EDITION_CLAIM_PHASES_V1\n  }\n};\nconst FEATURE_EDITION_SIGNATURE_MINTABLE = {\n  name: \"ERC1155SignatureMintable\",\n  namespace: \"edition.signature\",\n  docLinks: {\n    sdk: \"sdk.erc1155signaturemintable\",\n    contracts: \"erc1155signaturemint\"\n  },\n  abis: [Erc1155Abi, ISignatureMintERC1155Abi],\n  features: {}\n};\nconst FEATURE_EDITION_BATCH_MINTABLE = {\n  name: \"ERC1155BatchMintable\",\n  namespace: \"edition.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc1155batchmintable\",\n    contracts: \"erc1155batchmintable\"\n  },\n  abis: [Erc1155Abi, IMintableERC1155Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_EDITION_MINTABLE = {\n  name: \"ERC1155Mintable\",\n  namespace: \"edition.mint\",\n  docLinks: {\n    sdk: \"sdk.erc1155mintable\",\n    contracts: \"erc1155mintable\"\n  },\n  abis: [Erc1155Abi, IMintableERC1155Abi],\n  features: {\n    [FEATURE_EDITION_BATCH_MINTABLE.name]: FEATURE_EDITION_BATCH_MINTABLE\n  }\n};\nconst FEATURE_EDITION_ENUMERABLE = {\n  name: \"ERC1155Enumerable\",\n  namespace: \"edition.query\",\n  docLinks: {\n    sdk: \"sdk.erc1155\",\n    contracts: \"erc1155enumerable\"\n  },\n  abis: [Erc1155Abi, Erc1155EnumerableAbi],\n  features: {}\n};\nconst FEATURE_EDITION_UPDATABLE_METADATA = {\n  name: \"ERC1155UpdatableMetadata\",\n  namespace: \"edition.metadata\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [Erc1155Abi, INFTMetadataAbi],\n  features: {}\n};\nconst FEATURE_EDITION_SUPPLY = {\n  name: \"ERC1155Supply\",\n  namespace: \"edition.supply\",\n  docLinks: {\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [Erc1155Abi, Erc1155SupplyAbi],\n  features: {}\n};\nconst FEATURE_EDITION = {\n  name: \"ERC1155\",\n  namespace: \"edition\",\n  docLinks: {\n    sdk: \"sdk.erc1155enumerable\",\n    contracts: \"erc1155\"\n  },\n  abis: [Erc1155Abi, Erc1155MetadataAbi, NAME_SYMBOL_ABI],\n  features: {\n    [FEATURE_EDITION_SUPPLY.name]: FEATURE_EDITION_SUPPLY,\n    [FEATURE_EDITION_BURNABLE.name]: FEATURE_EDITION_BURNABLE,\n    [FEATURE_EDITION_ENUMERABLE.name]: FEATURE_EDITION_ENUMERABLE,\n    [FEATURE_EDITION_MINTABLE.name]: FEATURE_EDITION_MINTABLE,\n    [FEATURE_EDITION_LAZY_MINTABLE_V1.name]: FEATURE_EDITION_LAZY_MINTABLE_V1,\n    [FEATURE_EDITION_LAZY_MINTABLE_V2.name]: FEATURE_EDITION_LAZY_MINTABLE_V2,\n    [FEATURE_EDITION_REVEALABLE.name]: FEATURE_EDITION_REVEALABLE,\n    [FEATURE_EDITION_SIGNATURE_MINTABLE.name]: FEATURE_EDITION_SIGNATURE_MINTABLE,\n    [FEATURE_EDITION_CLAIM_CUSTOM.name]: FEATURE_EDITION_CLAIM_CUSTOM,\n    [FEATURE_EDITION_CLAIM_CONDITIONS_V1.name]: FEATURE_EDITION_CLAIM_CONDITIONS_V1,\n    [FEATURE_EDITION_CLAIM_CONDITIONS_V2.name]: FEATURE_EDITION_CLAIM_CONDITIONS_V2,\n    [FEATURE_EDITION_CLAIM_PHASES_V2.name]: FEATURE_EDITION_CLAIM_PHASES_V2,\n    [FEATURE_EDITION_UPDATABLE_METADATA.name]: FEATURE_EDITION_UPDATABLE_METADATA\n  }\n};\n\nconst fallbackAbi = [{\n  stateMutability: \"payable\",\n  type: \"fallback\"\n}];\nconst getAllPluginsAbi = [{\n  inputs: [],\n  name: \"getAllPlugins\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes4\",\n      name: \"functionSelector\",\n      type: \"bytes4\"\n    }, {\n      internalType: \"string\",\n      name: \"functionSignature\",\n      type: \"string\"\n    }, {\n      internalType: \"address\",\n      name: \"pluginAddress\",\n      type: \"address\"\n    }],\n    internalType: \"struct IPluginMap.Plugin[]\",\n    name: \"registered\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst getAllExtensionsAbi = [{\n  inputs: [],\n  name: \"getAllExtensions\",\n  outputs: [{\n    components: [{\n      components: [{\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\"\n      }, {\n        internalType: \"string\",\n        name: \"metadataURI\",\n        type: \"string\"\n      }, {\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\"\n      }],\n      internalType: \"struct IExtension.ExtensionMetadata\",\n      name: \"metadata\",\n      type: \"tuple\"\n    }, {\n      components: [{\n        internalType: \"bytes4\",\n        name: \"functionSelector\",\n        type: \"bytes4\"\n      }, {\n        internalType: \"string\",\n        name: \"functionSignature\",\n        type: \"string\"\n      }],\n      internalType: \"struct IExtension.ExtensionFunction[]\",\n      name: \"functions\",\n      type: \"tuple[]\"\n    }],\n    internalType: \"struct IExtension.Extension[]\",\n    name: \"allExtensions\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst coreContractAbi = [{\n  type: \"fallback\",\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"cancelOwnershipHandover\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"completeOwnershipHandover\",\n  inputs: [{\n    name: \"pendingOwner\",\n    type: \"address\",\n    internalType: \"address\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"getInstalledExtensions\",\n  inputs: [],\n  outputs: [{\n    name: \"_installedExtensions\",\n    type: \"tuple[]\",\n    internalType: \"struct IModularCore.InstalledExtension[]\",\n    components: [{\n      name: \"implementation\",\n      type: \"address\",\n      internalType: \"address\"\n    }, {\n      name: \"config\",\n      type: \"tuple\",\n      internalType: \"struct IExtensionConfig.ExtensionConfig\",\n      components: [{\n        name: \"registerInstallationCallback\",\n        type: \"bool\",\n        internalType: \"bool\"\n      }, {\n        name: \"requiredInterfaces\",\n        type: \"bytes4[]\",\n        internalType: \"bytes4[]\"\n      }, {\n        name: \"supportedInterfaces\",\n        type: \"bytes4[]\",\n        internalType: \"bytes4[]\"\n      }, {\n        name: \"callbackFunctions\",\n        type: \"tuple[]\",\n        internalType: \"struct IExtensionConfig.CallbackFunction[]\",\n        components: [{\n          name: \"selector\",\n          type: \"bytes4\",\n          internalType: \"bytes4\"\n        }]\n      }, {\n        name: \"fallbackFunctions\",\n        type: \"tuple[]\",\n        internalType: \"struct IExtensionConfig.FallbackFunction[]\",\n        components: [{\n          name: \"selector\",\n          type: \"bytes4\",\n          internalType: \"bytes4\"\n        }, {\n          name: \"permissionBits\",\n          type: \"uint256\",\n          internalType: \"uint256\"\n        }]\n      }]\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getSupportedCallbackFunctions\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"tuple[]\",\n    internalType: \"struct IModularCore.SupportedCallbackFunction[]\",\n    components: [{\n      name: \"selector\",\n      type: \"bytes4\",\n      internalType: \"bytes4\"\n    }, {\n      name: \"mode\",\n      type: \"uint8\",\n      internalType: \"enum IModularCore.CallbackMode\"\n    }]\n  }],\n  stateMutability: \"pure\"\n}, {\n  type: \"function\",\n  name: \"grantRoles\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"hasAllRoles\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"hasAnyRole\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"installExtension\",\n  inputs: [{\n    name: \"_extension\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"_data\",\n    type: \"bytes\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"owner\",\n  inputs: [],\n  outputs: [{\n    name: \"result\",\n    type: \"address\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"ownershipHandoverExpiresAt\",\n  inputs: [{\n    name: \"pendingOwner\",\n    type: \"address\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    name: \"result\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"renounceOwnership\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"renounceRoles\",\n  inputs: [{\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"requestOwnershipHandover\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"revokeRoles\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"rolesOf\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    name: \"roles\",\n    type: \"uint256\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"supportsInterface\",\n  inputs: [{\n    name: \"interfaceId\",\n    type: \"bytes4\",\n    internalType: \"bytes4\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"transferOwnership\",\n  inputs: [{\n    name: \"newOwner\",\n    type: \"address\",\n    internalType: \"address\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"uninstallExtension\",\n  inputs: [{\n    name: \"_extension\",\n    type: \"address\",\n    internalType: \"address\"\n  }, {\n    name: \"_data\",\n    type: \"bytes\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"event\",\n  name: \"ExtensionInstalled\",\n  inputs: [{\n    name: \"caller\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }, {\n    name: \"implementation\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }, {\n    name: \"installedExtension\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"ExtensionUninstalled\",\n  inputs: [{\n    name: \"caller\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }, {\n    name: \"implementation\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }, {\n    name: \"installedExtension\",\n    type: \"address\",\n    indexed: false,\n    internalType: \"address\"\n  }],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"OwnershipHandoverCanceled\",\n  inputs: [{\n    name: \"pendingOwner\",\n    type: \"address\",\n    indexed: true,\n    internalType: \"address\"\n  }],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"OwnershipHandoverRequested\",\n  inputs: [{\n    name: \"pendingOwner\",\n    type: \"address\",\n    indexed: true,\n    internalType: \"address\"\n  }],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"OwnershipTransferred\",\n  inputs: [{\n    name: \"oldOwner\",\n    type: \"address\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    name: \"newOwner\",\n    type: \"address\",\n    indexed: true,\n    internalType: \"address\"\n  }],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"RolesUpdated\",\n  inputs: [{\n    name: \"user\",\n    type: \"address\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    name: \"roles\",\n    type: \"uint256\",\n    indexed: true,\n    internalType: \"uint256\"\n  }],\n  anonymous: false\n}, {\n  type: \"error\",\n  name: \"AlreadyInitialized\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"CallbackExecutionReverted\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"CallbackFunctionAlreadyInstalled\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"CallbackFunctionNotSupported\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"CallbackFunctionRequired\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"CallbackFunctionUnauthorizedCall\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"ExtensionAlreadyInstalled\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"ExtensionInterfaceNotCompatible\",\n  inputs: [{\n    name: \"requiredInterfaceId\",\n    type: \"bytes4\",\n    internalType: \"bytes4\"\n  }]\n}, {\n  type: \"error\",\n  name: \"ExtensionNotInstalled\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"ExtensionOutOfSync\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"FallbackFunctionAlreadyInstalled\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"FallbackFunctionNotInstalled\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"IndexOutOfBounds\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"NewOwnerIsZeroAddress\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"NoHandoverRequest\",\n  inputs: []\n}, {\n  type: \"error\",\n  name: \"Unauthorized\",\n  inputs: []\n}];\nconst extensionContractAbi = [{\n  type: \"function\",\n  name: \"getExtensionConfig\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"tuple\",\n    internalType: \"struct IExtensionConfig.ExtensionConfig\",\n    components: [{\n      name: \"registerInstallationCallback\",\n      type: \"bool\",\n      internalType: \"bool\"\n    }, {\n      name: \"requiredInterfaces\",\n      type: \"bytes4[]\",\n      internalType: \"bytes4[]\"\n    }, {\n      name: \"supportedInterfaces\",\n      type: \"bytes4[]\",\n      internalType: \"bytes4[]\"\n    }, {\n      name: \"callbackFunctions\",\n      type: \"tuple[]\",\n      internalType: \"struct IExtensionConfig.CallbackFunction[]\",\n      components: [{\n        name: \"selector\",\n        type: \"bytes4\",\n        internalType: \"bytes4\"\n      }]\n    }, {\n      name: \"fallbackFunctions\",\n      type: \"tuple[]\",\n      internalType: \"struct IExtensionConfig.FallbackFunction[]\",\n      components: [{\n        name: \"selector\",\n        type: \"bytes4\",\n        internalType: \"bytes4\"\n      }, {\n        name: \"permissionBits\",\n        type: \"uint256\",\n        internalType: \"uint256\"\n      }]\n    }]\n  }],\n  stateMutability: \"pure\"\n}];\nconst FEATURE_ROYALTY = {\n  name: \"Royalty\",\n  namespace: \"royalty\",\n  docLinks: {\n    sdk: \"sdk.contractroyalty\",\n    contracts: \"royalty\"\n  },\n  abis: [IThirdwebRoyaltyAbi],\n  features: {}\n};\nconst FEATURE_PRIMARY_SALE = {\n  name: \"PrimarySale\",\n  namespace: \"sales\",\n  docLinks: {\n    sdk: \"sdk.contractprimarysale\",\n    contracts: \"primarysale\"\n  },\n  abis: [IThirdwebPrimarySaleAbi],\n  features: {}\n};\nconst FEATURE_PLATFORM_FEE = {\n  name: \"PlatformFee\",\n  namespace: \"platformFees\",\n  docLinks: {\n    sdk: \"sdk.platformfee\",\n    contracts: \"platformfee\"\n  },\n  abis: [IThirdwebPlatformFeeAbi],\n  features: {}\n};\nconst FEATURE_PERMISSIONS_ENUMERABLE = {\n  name: \"PermissionsEnumerable\",\n  namespace: \"roles\",\n  docLinks: {\n    sdk: \"sdk.contractroles\",\n    contracts: \"permissionsenumerable\"\n  },\n  abis: [IPermissionsEnumerableAbi],\n  features: {}\n};\nconst FEATURE_PERMISSIONS = {\n  name: \"Permissions\",\n  namespace: \"roles\",\n  docLinks: {\n    sdk: \"sdk.contractroles\",\n    contracts: \"permissions\"\n  },\n  abis: [IPermissionsAbi],\n  features: {\n    [FEATURE_PERMISSIONS_ENUMERABLE.name]: FEATURE_PERMISSIONS_ENUMERABLE\n  }\n};\nconst FEATURE_METADATA = {\n  name: \"ContractMetadata\",\n  namespace: \"metadata\",\n  docLinks: {\n    sdk: \"sdk.contractmetadata\",\n    contracts: \"contractmetadata\"\n  },\n  abis: [IContractMetadataAbi],\n  features: {}\n};\nconst FEATURE_APPURI = {\n  name: \"AppURI\",\n  namespace: \"appURI\",\n  docLinks: {\n    sdk: \"sdk.appURI\",\n    //TODO\n    contracts: \"\"\n  },\n  abis: [IAppURI],\n  features: {}\n};\nconst FEATURE_OWNER = {\n  name: \"Ownable\",\n  namespace: \"owner\",\n  docLinks: {\n    sdk: \"sdk.owner\",\n    contracts: \"ownable\"\n  },\n  abis: [IOwnableAbi],\n  features: {}\n};\nconst FEATURE_GASLESS = {\n  name: \"Gasless\",\n  namespace: \"gasless\",\n  docLinks: {\n    sdk: \"sdk.gaslesstransaction\",\n    // TODO add the correct name for this once it's added to portal\n    contracts: \"IERC2771Context\"\n  },\n  abis: [IERC2771ContextAbi],\n  features: {}\n};\nconst FEATURE_PACK_VRF = {\n  name: \"PackVRF\",\n  namespace: \"pack.vrf\",\n  docLinks: {\n    sdk: \"sdk.packvrf\",\n    //TODO\n    contracts: \"IPackVRF\"\n  },\n  abis: [IPackVRFAbi],\n  features: {}\n};\nconst FEATURE_PLUGIN_ROUTER = {\n  name: \"PluginRouter\",\n  namespace: \"plugin.router\",\n  docLinks: {\n    sdk: \"sdk.pluginrouter\",\n    //TODO\n    contracts: \"PluginRouter\"\n  },\n  abis: [getAllPluginsAbi],\n  features: {}\n};\nconst FEATURE_DYNAMIC_CONTRACT = {\n  name: \"DynamicContract\",\n  namespace: \"dynamic.contract\",\n  docLinks: {\n    sdk: \"\",\n    //TODO\n    contracts: \"IExtensionsManager\"\n  },\n  abis: [getAllExtensionsAbi],\n  features: {}\n};\nconst FEATURE_MODULAR_CORE = {\n  name: \"ModularCore\",\n  namespace: \"modular.core\",\n  docLinks: {\n    sdk: \"\",\n    //TODO\n    contracts: \"\"\n  },\n  abis: [coreContractAbi],\n  features: {}\n};\nconst FEATURE_MODULAR_EXTENSION = {\n  name: \"ModularExtension\",\n  namespace: \"modular.extension\",\n  docLinks: {\n    sdk: \"\",\n    //TODO\n    contracts: \"\"\n  },\n  abis: [extensionContractAbi],\n  features: {}\n};\nconst FEATURE_DIRECT_LISTINGS = {\n  name: \"DirectListings\",\n  namespace: \"direct.listings\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IDirectListings\"\n  },\n  abis: [IDirectListingsAbi],\n  features: {}\n};\nconst FEATURE_ENGLISH_AUCTIONS = {\n  name: \"EnglishAuctions\",\n  namespace: \"english.auctions\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IEnglishAuctions\"\n  },\n  abis: [IEnglishAuctionsAbi],\n  features: {}\n};\nconst FEATURE_OFFERS = {\n  name: \"Offers\",\n  namespace: \"offers\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IOffers\"\n  },\n  abis: [IOffersAbi],\n  features: {}\n};\nconst FEATURE_ACCOUNT_FACTORY = {\n  name: \"AccountFactory\",\n  namespace: \"accountFactory\",\n  docLinks: {\n    // TODO\n    sdk: \"sdk.accountFactory\",\n    contracts: \"IAccountFactory\"\n  },\n  abis: [IAccountFactoryCore],\n  features: {}\n};\nconst FEATURE_ACCOUNT_PERMISSIONS_V1 = {\n  name: \"AccountPermissionsV1\",\n  namespace: \"accountPermissions\",\n  docLinks: {\n    // TODO\n    sdk: \"sdk.account\",\n    contracts: \"IAccountPermissions\"\n  },\n  abis: [IAccountPermissionsV1],\n  features: {}\n};\nconst FEATURE_ACCOUNT_PERMISSIONS = {\n  name: \"AccountPermissions\",\n  namespace: \"accountPermissions\",\n  docLinks: {\n    // TODO\n    sdk: \"sdk.account\",\n    contracts: \"IAccountPermissions\"\n  },\n  abis: [IAccountPermissions],\n  features: {}\n};\nconst FEATURE_ACCOUNT = {\n  name: \"Account\",\n  namespace: \"account\",\n  docLinks: {\n    // TODO\n    sdk: \"sdk.account\",\n    contracts: \"IAccount\"\n  },\n  abis: [IAccount],\n  features: {\n    [FEATURE_ACCOUNT_PERMISSIONS.name]: FEATURE_ACCOUNT_PERMISSIONS,\n    [FEATURE_ACCOUNT_PERMISSIONS_V1.name]: FEATURE_ACCOUNT_PERMISSIONS_V1\n  }\n};\nconst FEATURE_AIRDROP_ERC20 = {\n  name: \"AirdropERC20\",\n  namespace: \"airdrop20\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IAirdropERC20\"\n  },\n  abis: [IAirdropERC20],\n  features: {}\n};\nconst FEATURE_AIRDROP_ERC721 = {\n  name: \"AirdropERC721\",\n  namespace: \"airdrop721\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IAirdropERC721\"\n  },\n  abis: [IAirdropERC721],\n  features: {}\n};\nconst FEATURE_AIRDROP_ERC1155 = {\n  name: \"AirdropERC1155\",\n  namespace: \"airdrop1155\",\n  docLinks: {\n    // TODO\n    sdk: \"\",\n    contracts: \"IAirdropERC1155\"\n  },\n  abis: [IAirdropERC1155],\n  features: {}\n};\nconst FEATURE_FALLBACK = {\n  name: \"Fallback\",\n  namespace: \"fallback\",\n  docLinks: {\n    sdk: \"\",\n    contracts: \"\"\n  },\n  abis: [fallbackAbi],\n  features: {}\n};\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst SUPPORTED_FEATURES = {\n  [FEATURE_TOKEN.name]: FEATURE_TOKEN,\n  [FEATURE_NFT.name]: FEATURE_NFT,\n  [FEATURE_EDITION.name]: FEATURE_EDITION,\n  [FEATURE_ROYALTY.name]: FEATURE_ROYALTY,\n  [FEATURE_PLATFORM_FEE.name]: FEATURE_PLATFORM_FEE,\n  [FEATURE_PRIMARY_SALE.name]: FEATURE_PRIMARY_SALE,\n  [FEATURE_PERMISSIONS.name]: FEATURE_PERMISSIONS,\n  [FEATURE_METADATA.name]: FEATURE_METADATA,\n  [FEATURE_APPURI.name]: FEATURE_APPURI,\n  [FEATURE_OWNER.name]: FEATURE_OWNER,\n  [FEATURE_GASLESS.name]: FEATURE_GASLESS,\n  [FEATURE_PACK_VRF.name]: FEATURE_PACK_VRF,\n  [FEATURE_PLUGIN_ROUTER.name]: FEATURE_PLUGIN_ROUTER,\n  [FEATURE_DYNAMIC_CONTRACT.name]: FEATURE_DYNAMIC_CONTRACT,\n  [FEATURE_MODULAR_CORE.name]: FEATURE_MODULAR_CORE,\n  [FEATURE_MODULAR_EXTENSION.name]: FEATURE_MODULAR_EXTENSION,\n  [FEATURE_DIRECT_LISTINGS.name]: FEATURE_DIRECT_LISTINGS,\n  [FEATURE_ENGLISH_AUCTIONS.name]: FEATURE_ENGLISH_AUCTIONS,\n  [FEATURE_OFFERS.name]: FEATURE_OFFERS,\n  [FEATURE_AIRDROP_ERC20.name]: FEATURE_AIRDROP_ERC20,\n  [FEATURE_AIRDROP_ERC721.name]: FEATURE_AIRDROP_ERC721,\n  [FEATURE_AIRDROP_ERC1155.name]: FEATURE_AIRDROP_ERC1155,\n  [FEATURE_ACCOUNT_FACTORY.name]: FEATURE_ACCOUNT_FACTORY,\n  [FEATURE_ACCOUNT.name]: FEATURE_ACCOUNT,\n  [FEATURE_NFT_LOYALTY_CARD.name]: FEATURE_NFT_LOYALTY_CARD,\n  [FEATURE_NFT_UPDATABLE_METADATA.name]: FEATURE_NFT_UPDATABLE_METADATA,\n  [FEATURE_FALLBACK.name]: FEATURE_FALLBACK\n};\n\n/**\n * @internal\n */\nfunction toJSType(contractType) {\n  let isReturnType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let withName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let jsType = contractType.type;\n  let isArray = false;\n  if (jsType.endsWith(\"[]\")) {\n    isArray = true;\n    jsType = jsType.slice(0, -2);\n  }\n  if (jsType.startsWith(\"bytes\")) {\n    jsType = \"BytesLike\";\n  }\n  if (jsType.startsWith(\"uint\") || jsType.startsWith(\"int\")) {\n    jsType = isReturnType ? \"BigNumber\" : \"BigNumberish\";\n  }\n  if (jsType.startsWith(\"bool\")) {\n    jsType = \"boolean\";\n  }\n  if (jsType === \"address\") {\n    jsType = \"string\";\n  }\n  if (jsType === \"tuple\") {\n    if (contractType.components) {\n      jsType = `{ ${contractType.components.map(a => toJSType(a, false, true)).join(\", \")} }`;\n    }\n  }\n  if (isArray) {\n    jsType += \"[]\";\n  }\n  if (withName) {\n    jsType = `${contractType.name}: ${jsType}`;\n  }\n  return jsType;\n}\n\n/**\n * @internal\n * @param name - The name of the function to extract the comment from\n * @param metadata - The metadata to extract the comment from\n * @param type - The type of the function to extract the comment from\n */\nfunction extractCommentFromMetadata(name, metadata, type) {\n  return metadata?.output?.userdoc?.[type]?.[Object.keys(metadata?.output?.userdoc[type] || {}).find(fn => fn.includes(name || \"unknown\")) || \"\"]?.notice || metadata?.output?.devdoc?.[type]?.[Object.keys(metadata?.output?.devdoc[type] || {}).find(fn => fn.includes(name || \"unknown\")) || \"\"]?.details;\n}\n\n/**\n * @internal\n * @param abi - The abi to extract functions from\n * @param metadata - The metadata to extract comments from\n */\nfunction extractFunctionsFromAbi(abi, metadata) {\n  const functions = (abi || []).filter(el => el.type === \"function\");\n  const parsed = [];\n  for (const f of functions) {\n    const doc = extractCommentFromMetadata(f.name, metadata, \"methods\");\n    const args = f.inputs?.map(i => `${i.name || \"key\"}: ${toJSType(i)}`)?.join(\", \") || \"\";\n    const fargs = args ? `, [${args}]` : \"\";\n    const out = f.outputs?.map(o => toJSType(o, true))?.join(\", \");\n    const promise = out ? `: Promise<${out}>` : `: Promise<TransactionResult>`;\n    const signature = `contract.call(\"${f.name}\"${fargs})${promise}`;\n    parsed.push({\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore we know AbiTypeBaseSchema.name is not going to be undefined since we're doing `.default(\"\")`\n      inputs: f.inputs || [],\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore we know the AbiTypeBaseSchema.name is not going to be undefined since we're doing `.default(\"\")`\n      outputs: f.outputs || [],\n      name: f.name || \"unknown\",\n      signature,\n      stateMutability: f.stateMutability || \"\",\n      comment: doc\n    });\n  }\n  return parsed;\n}\n\n/**\n * @internal\n * @param contractAbi - The abi to check\n * @param featureAbis - The feature abi to check\n * @returns\n */\nfunction hasMatchingAbi(contractAbi, featureAbis) {\n  const contractFn = extractFunctionsFromAbi(contractAbi);\n  const interfaceFn = featureAbis.flatMap(i => extractFunctionsFromAbi(i));\n  // match every function and their arguments\n  const intersection = contractFn.filter(fn => {\n    const match = interfaceFn.find(iFn => iFn.name === fn.name && iFn.inputs.length === fn.inputs.length && iFn.inputs.every((i, index) => {\n      if (i.type === \"tuple\" || i.type === \"tuple[]\") {\n        // check that all properties in the tuple are the same type\n        return i.type === fn.inputs[index].type && i.components?.every((c, cIndex) => {\n          return c.type === fn.inputs[index].components?.[cIndex]?.type;\n        });\n      }\n      return i.type === fn.inputs[index].type;\n    }));\n    return match !== undefined;\n  });\n  return intersection.length === interfaceFn.length;\n}\n\n/**\n * @internal\n */\nfunction matchesAbiFromBytecode(contractBytecode, featureAbis) {\n  const interfaces = featureAbis.map(abi => new Interface(abi));\n  const selectors = interfaces.flatMap(i => {\n    return Object.values(i.functions).map(fn => Number(i.getSighash(fn)).toString(16));\n  });\n  const uniqueSelectors = [...new Set(selectors)];\n  // checks that all unique selectors are found in the bytecode\n  return uniqueSelectors.every(selector => contractBytecode.includes(selector));\n}\n\nconst lruCache = /* @__PURE__ */createLruCache(10);\n\n/**\n * Processes ALL supported features and sets whether the passed in abi supports each individual feature\n * @internal\n * @param abi - The abi to detect features in\n * @param features - The features to detect\n * @returns The nested struct of all features and whether they're detected in the abi\n */\nfunction detectFeatures(abi) {\n  let features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SUPPORTED_FEATURES;\n  const cacheKey = JSON.stringify(abi);\n  if (lruCache.has(cacheKey)) {\n    return lruCache.get(cacheKey);\n  }\n  const results = detectFeaturesInternal(abi, features);\n  lruCache.put(cacheKey, results);\n  return results;\n}\nfunction detectFeaturesInternal(abi, features) {\n  const results = {};\n  for (const featureKey in features) {\n    const feature = features[featureKey];\n    const enabled = matchesAbiInterface(abi, feature);\n    const childResults = detectFeaturesInternal(abi, feature.features);\n    results[featureKey] = {\n      ...feature,\n      features: childResults,\n      enabled\n    };\n  }\n  return results;\n}\n\n/**\n * @internal\n */\nfunction detectFeaturesFromBytecode(bytecode) {\n  let features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SUPPORTED_FEATURES;\n  const results = {};\n  for (const featureKey in features) {\n    const feature = features[featureKey];\n    const enabled = matchesAbiFromBytecode(bytecode, feature.abis);\n    const childResults = detectFeaturesFromBytecode(bytecode, feature.features);\n    results[featureKey] = {\n      ...feature,\n      features: childResults,\n      enabled\n    };\n  }\n  return results;\n}\n\n/**\n * @internal\n * @param abi - The abi to check\n * @param feature - The feature to check\n */\nfunction matchesAbiInterface(abi, feature) {\n  // returns true if all the functions in `interfaceToMatch` are found in `contract` (removing any duplicates)\n  return hasMatchingAbi(abi, feature.abis);\n}\n\n/**\n * @internal\n */\nfunction extractFeatures(input, enabledExtensions) {\n  if (!input) {\n    return;\n  }\n  for (const extensionKey in input) {\n    const extension = input[extensionKey];\n    // if extension is enabled, then add it to enabledFeatures\n    if (extension.enabled) {\n      enabledExtensions.push(extension);\n    }\n    // recurse\n    extractFeatures(extension.features, enabledExtensions);\n  }\n}\n\n/**\n * Return all the detected features in the abi\n * @param abi - parsed array of abi entries\n * @returns Array of all detected extensions with full information on each feature\n * @internal\n * @deprecated use getAllDetectedExtensions instead\n */\nfunction getAllDetectedFeatures(abi) {\n  const features = [];\n  extractFeatures(detectFeatures(abi), features);\n  return features;\n}\n\n/**\n * @internal\n */\nfunction getAllDetectedExtensionsFromBytecode(bytecode) {\n  const features = [];\n  extractFeatures(detectFeaturesFromBytecode(bytecode), features);\n  return features;\n}\n\n/**\n * @internal\n */\nfunction constructAbiFromBytecode(bytecode) {\n  let extensions = getAllDetectedExtensionsFromBytecode(bytecode);\n  // special deduping for ERC721 and ERC20\n  if (extensions.find(f => f.name === \"ERC721\")) {\n    extensions = extensions.filter(f => f.name !== \"ERC20\");\n  }\n  const abi = joinABIs(extensions.map(f => joinABIs(f.abis)));\n  return abi;\n}\n\n/**\n * Return all the detected extensions in the abi\n * @param abi - parsed array of abi entries\n * @returns Array of all detected extensions with full information on each feature\n * @public\n */\nfunction getAllDetectedExtensions(abi) {\n  return getAllDetectedFeatures(abi).map(f => ({\n    ...f,\n    extensions: f.features\n  }));\n}\n\nconst CONTRACT_RESOLVER_BASE_URL = \"https://contract.thirdweb.com/metadata\";\n\n// Internal static cache\nconst metadataCache = /* @__PURE__ */createLruCache(20);\nlet multichainRegistry = undefined;\nfunction getCacheKey(address, chainId) {\n  return `${address}-${chainId}`;\n}\nfunction putInCache(address, chainId, metadata) {\n  metadataCache.put(getCacheKey(address, chainId), metadata);\n}\n\n/**\n * @internal\n */\nfunction getContractMetadataFromCache(address, chainId) {\n  return metadataCache.get(getCacheKey(address, chainId));\n}\n\n/**\n * @internal\n * @param address - The address to fetch the metadata for\n * @param provider - The provider to use\n * @param storage - The storage to use\n */\nasync function fetchContractMetadataFromAddress(address, provider, storage) {\n  let sdkOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const chainId = (await provider.getNetwork()).chainId; // TODO resolve from sdk network\n  const cached = getContractMetadataFromCache(address, chainId);\n  if (cached) {\n    return cached;\n  }\n  let metadata;\n\n  // try to resolve from DNS first\n  const isLocalChain = chainId === 31337 || chainId === 1337;\n  if (!isLocalChain) {\n    try {\n      const response = await fetch(`${CONTRACT_RESOLVER_BASE_URL}/${chainId}/${address}`, {\n        headers: {\n          ...getAnalyticsHeaders()\n        }\n      });\n      if (response.ok) {\n        const resolvedData = await response.json();\n        metadata = formatCompilerMetadata(resolvedData);\n      }\n    } catch (e) {\n      // fallback to IPFS\n    }\n  }\n  if (!metadata) {\n    metadata = await fetchContractMetadataFromBytecode(address, chainId, provider, storage, sdkOptions);\n  }\n  if (!metadata) {\n    throw new Error(`Could not resolve contract. Try importing it by visiting: https://thirdweb.com/${chainId}/${address}`);\n  }\n  if (!metadata.isPartialAbi) {\n    putInCache(address, chainId, metadata);\n  } else {\n    console.warn(`Contract metadata could only be partially resolved, some contract functions might be unavailable. Try importing the contract by visiting: https://thirdweb.com/${chainId}/${address}`);\n  }\n  return metadata;\n}\n\n/**\n * @internal\n */\nasync function fetchContractMetadataFromBytecode(address, chainId, provider, storage) {\n  let sdkOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  let metadata;\n  // we can't race here, because the contract URI might resolve first with a non pinned URI\n  const [ipfsData, registryData] = await Promise.all([resolveContractUriAndBytecode(address, provider).catch(() => undefined), getMetadataUriFromMultichainRegistry(address, chainId, sdkOptions).then(uri => {\n    if (!uri) {\n      return undefined;\n    }\n    return {\n      uri,\n      bytecode: \"\"\n    };\n  }).catch(() => undefined)]);\n  const bytecode = ipfsData?.bytecode;\n  const metadataUri = registryData?.uri || ipfsData?.uri;\n  if (!metadataUri && !bytecode) {\n    throw new Error(`Could not fetch bytecode for contract at ${address} on chain ${chainId}, double check that the address and chainId are correct.`);\n  }\n  try {\n    metadata = await fetchContractMetadata(metadataUri, storage);\n  } catch (e) {\n    // Don't warn here, its common to not have IPFS metadata for a contract, fallback to bytecode\n  }\n  if (!metadata && bytecode) {\n    const abi = constructAbiFromBytecode(bytecode);\n    if (abi && abi.length > 0) {\n      // return partial ABI\n      metadata = {\n        name: \"Unimported Contract\",\n        abi: abi,\n        metadata: {},\n        info: {},\n        licenses: [],\n        isPartialAbi: true\n      };\n      // return without caching\n      return metadata;\n    }\n  }\n  return metadata;\n}\nasync function getMetadataUriFromMultichainRegistry(address, chainId, sdkOptions) {\n  const TWRegistryABI = (await import('@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json')).default;\n  if (!multichainRegistry) {\n    const polygonChain = sdkOptions?.supportedChains?.find(c => c.chainId === 137);\n    const chain = polygonChain || Polygon;\n    multichainRegistry = new Contract(getMultichainRegistryAddress(), TWRegistryABI, getChainProvider(chain, sdkOptions));\n  }\n  const importedUri = await multichainRegistry.getMetadataUri(chainId, address);\n  return importedUri;\n}\n\n/**\n * @internal\n * @param address - The address to fetch the metadata for\n * @param provider - The provider to use\n * @param storage - The storage to use\n * @returns\n */\nasync function fetchAbiFromAddress(address, provider, storage) {\n  try {\n    const metadata = await fetchContractMetadataFromAddress(address, provider, storage);\n    if (metadata && metadata.abi) {\n      return metadata.abi;\n    }\n  } catch (e) {\n    // ignore and return undefined\n    // will fallback to embedded ABIs for prebuilts\n  }\n  return undefined;\n}\n\nasync function getCompositeABIfromRelease(publishMetadataUri, storage) {\n  const {\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishMetadataUri, storage);\n  const compositeAbi = extendedMetadata?.compositeAbi || [];\n  return compositeAbi;\n}\n\nconst ERROR_SUBSTRINGS = [\"eip-155\", \"eip155\", \"protected\", \"invalid chain id for signer\", \"chain id none\", \"chain_id mismatch\", \"recovered sender mismatch\", \"transaction hash mismatch\", \"chainid no support\", \"chainid (0)\", \"chainid(0)\"];\nconst ERROR_SUBSTRINGS_COMPOSITE = [[\"account\", \"not found\"], [\"wrong\", \"chainid\"]];\nconst CUSTOM_GAS_BINS = [1, 1 * 10 ** 9, 100 * 10 ** 9, 500 * 10 ** 9, 1000 * 10 ** 9, 2500 * 10 ** 9, 5000 * 10 ** 9, 7500 * 10 ** 9, 10_000 * 10 ** 9, 25_000 * 10 ** 9, 50_000 * 10 ** 9, 75_000 * 10 ** 9, 100_000 * 10 ** 9, 250_000 * 10 ** 9, 500_000 * 10 ** 9, 750_000 * 10 ** 9, 1_000_000 * 10 ** 9];\n\n/* eslint-disable no-useless-computed-key */\nconst CUSTOM_GAS_FOR_CHAIN = {\n  [5001]: {\n    name: \"Mantle Testnet\",\n    gasPrice: 1\n  },\n  [71402]: {\n    name: \"Godwoken Mainnet\",\n    gasPrice: 40000 * 10 ** 9\n  },\n  [1351057110]: {\n    name: \"Chaos (SKALE Testnet)\",\n    gasPrice: 100000\n  },\n  [361]: {\n    name: \"Theta Mainnet\",\n    gasPrice: 4000 * 10 ** 9\n  },\n  [365]: {\n    name: \"Theta Testnet\",\n    gasPrice: 4000 * 10 ** 9\n  },\n  [7700]: {\n    name: \"Canto\",\n    gasPrice: 1000 * 10 ** 9\n  },\n  [7701]: {\n    name: \"Canto Testnet\",\n    gasPrice: 1000 * 10 ** 9\n  },\n  [338]: {\n    name: \"Cronos Testnet\",\n    gasPrice: 2000 * 10 ** 9\n  },\n  [47]: {\n    name: \"Xpla Testnet\",\n    gasPrice: 850 * 10 ** 9\n  },\n  [37]: {\n    name: \"Xpla Mainnet\",\n    gasPrice: 5100 * 10 ** 9\n  },\n  [199]: {\n    name: \"BitTorrent Chain\",\n    gasPrice: 300000 * 10 ** 9\n  },\n  [88882]: {\n    name: \"Spicy Chain\",\n    gasPrice: 2500 * 10 ** 9,\n    gasLimit: 200000\n  },\n  [88888]: {\n    name: \"Chiliz Chain\",\n    gasPrice: 2500 * 10 ** 9,\n    gasLimit: 200000\n  }\n};\nfunction matchError(error) {\n  const hasError = ERROR_SUBSTRINGS.some(substring => error.includes(substring));\n  // can early exit if we find a match\n  if (hasError) {\n    return true;\n  }\n  const hasCompositeError = ERROR_SUBSTRINGS_COMPOSITE.some(arr => {\n    return arr.some(substring => error.includes(substring));\n  });\n  return hasCompositeError;\n}\n\n/**\n * @internal\n */\nconst CREATE2_FACTORY_BYTECODE = \"0x604580600e600039806000f350fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf3\";\n/**\n * @internal\n */\nconst SIGNATURE = {\n  v: 27,\n  r: \"0x2222222222222222222222222222222222222222222222222222222222222222\",\n  s: \"0x2222222222222222222222222222222222222222222222222222222222222222\"\n};\nconst COMMON_FACTORY = \"0x4e59b44847b379578588920cA78FbF26c0B4956C\"; // for pre-eip-155 supporting chains\n\n/**\n * @internal\n */\nconst GAS_LIMIT_FOR_DEPLOYER = 5000000;\n/**\n * @internal\n */\nconst DEPLOYER_BYTECODE = \"0x60806040526040516107f33803806107f383398101604081905261002291610359565b805160005b818110156100c157828181518110610041576100416104c9565b6020026020010151600001516001600160a01b03163b600014156100af576100ad838281518110610074576100746104c9565b602002602001015160200151848381518110610092576100926104c9565b6020026020010151604001516100c960201b6100091760201c565b505b806100b9816104df565b915050610027565b505050610557565b606061011183836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061011860201b60201c565b9392505050565b6060610127848460008561012f565b949350505050565b6060824710156101955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6101ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516102089190610508565b60006040518083038185875af1925050503d8060008114610245576040519150601f19603f3d011682016040523d82523d6000602084013e61024a565b606091505b50909250905061025b828286610266565b979650505050505050565b60608315610275575081610111565b8251156102855782518084602001fd5b8160405162461bcd60e51b815260040161018c9190610524565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156102d7576102d761029f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156103055761030561029f565b604052919050565b80516001600160a01b038116811461032457600080fd5b919050565b60005b8381101561034457818101518382015260200161032c565b83811115610353576000848401525b50505050565b6000602080838503121561036c57600080fd5b82516001600160401b038082111561038357600080fd5b818501915085601f83011261039757600080fd5b8151818111156103a9576103a961029f565b8060051b6103b88582016102dd565b91825283810185019185810190898411156103d257600080fd5b86860192505b838310156104bc578251858111156103f05760008081fd5b86016060601f19828d0381018213156104095760008081fd5b6104116102b5565b61041c8b850161030d565b8152604061042b81860161030d565b828d01529284015192898411156104425760008081fd5b83850194508e603f86011261045957600093508384fd5b8b85015193508984111561046f5761046f61029f565b61047f8c84601f870116016102dd565b92508383528e818587010111156104965760008081fd5b6104a5848d8501838801610329565b8101919091528452505091860191908601906103d8565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561050157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825161051a818460208701610329565b9190910192915050565b6020815260008251806020840152610543816040850160208701610329565b601f01601f19169190910160400192915050565b61028d806105666000396000f3fe6080604052600080fd5b606061004b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610052565b9392505050565b60606100618484600085610069565b949350505050565b6060824710156100cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6101265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100c6565b600080866001600160a01b031685876040516101429190610208565b60006040518083038185875af1925050503d806000811461017f576040519150601f19603f3d011682016040523d82523d6000602084013e610184565b606091505b509150915061019482828661019f565b979650505050505050565b606083156101ae57508161004b565b8251156101be5782518084602001fd5b8160405162461bcd60e51b81526004016100c69190610224565b60005b838110156101f35781810151838201526020016101db565b83811115610202576000848401525b50505050565b6000825161021a8184602087016101d8565b9190910192915050565b60208152600082518060208401526102438160408501602087016101d8565b601f01601f1916919091016040019291505056fea26469706673582212200b524eb8ceaafe6c603273ee859fddbc2d6f1b7860c3d853dcf6f129f9d9371364736f6c634300080c0033\";\n/**\n * @internal\n */\nconst DEPLOYER_ABI = [{\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"predictedAddress\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes\",\n      name: \"data\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct IDeployer.Transaction[]\",\n    name: \"transactions\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"payable\",\n  type: \"constructor\"\n}];\n\n/**\n * Check if a contract exists at the given address\n * @deploy\n * @public\n * @param address - The address to check\n * @param provider - The provider to use\n */\nasync function isContractDeployed(address, provider) {\n  const code = await provider.getCode(address);\n  return code !== \"0x\" && code !== \"0x0\";\n}\n\n/**\n * Check if a chain enforces EIP-155 transactions\n * Ref: https://eips.ethereum.org/EIPS/eip-155\n *\n * @internal\n * @param provider - The provider to use\n */\nasync function isEIP155Enforced(provider) {\n  try {\n    // TODO: Find a better way to check this.\n\n    // Send a random transaction of legacy type (pre-eip-155).\n    // It will fail. Parse the error message to check whether eip-155 is enforced.\n    await provider.sendTransaction(\"0xf8a58085174876e800830186a08080b853604580600e600039806000f350fe7fffffffffffffffafffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222\");\n  } catch (e) {\n    const errorMsg = e.toString().toLowerCase();\n    const errorJson = JSON.stringify(e).toLowerCase();\n    if (matchError(errorMsg) || matchError(errorJson)) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}\n\n/**\n * Generate a transaction to be sent with a keyless signer.\n * @deploy\n * @public\n * @param transaction - Unsigned transaction object\n * @param signature - Signature bytes\n */\nfunction getKeylessTxn(transaction, signature) {\n  // 1. Create serialized txn string\n  const digest = utils.arrayify(utils.keccak256(utils.serializeTransaction(transaction)));\n\n  // 2. Determine signer address from custom signature + txn\n  const signer = utils.recoverAddress(digest, signature);\n\n  // 3. Create the signed serialized txn string.\n  // To be sent directly to the chain using a provider.\n  const signedSerializedTx = utils.serializeTransaction(transaction, signature);\n  return {\n    signer: signer,\n    transaction: signedSerializedTx\n  };\n}\n\n/**\n *\n * @internal\n * @param transaction - Unsigned transaction object\n * @param signature - Signature bytes\n */\nfunction getCreate2FactoryDeploymentInfo(chainId, gasOptions) {\n  const signature = utils.joinSignature(SIGNATURE);\n\n  // 100000 is default deployment gas limit and 100 gwei is default gas price for create2 factory deployment\n  // (See: https://github.com/Arachnid/deterministic-deployment-proxy?tab=readme-ov-file#deployment-gas-limit)\n  const gasPrice = gasOptions.gasPrice ? gasOptions.gasPrice : 100 * 10 ** 9;\n  const gasLimit = gasOptions.gasLimit ? gasOptions.gasLimit : 100000;\n  const deploymentTransaction = getKeylessTxn({\n    gasPrice,\n    gasLimit,\n    nonce: 0,\n    data: CREATE2_FACTORY_BYTECODE,\n    chainId: chainId\n  }, signature);\n  const create2FactoryAddress = utils.getContractAddress({\n    from: deploymentTransaction.signer,\n    nonce: 0\n  });\n  return {\n    ...deploymentTransaction,\n    deployment: create2FactoryAddress,\n    valueToSend: BigNumber.from(gasPrice).mul(gasLimit)\n  };\n}\n\n/**\n * Get the CREATE2 Factory address for a network\n * Source code of the factory:\n * https://github.com/Arachnid/deterministic-deployment-proxy/blob/master/source/deterministic-deployment-proxy.yul\n *\n * @internal\n * @param provider - The provider to use\n */\nasync function getCreate2FactoryAddress(provider) {\n  const deploymentInfo = await computeCreate2FactoryTransaction(provider);\n  return deploymentInfo.deployment;\n}\n\n/**\n * @internal\n */\nasync function computeCreate2FactoryTransaction(provider) {\n  const networkId = (await provider.getNetwork()).chainId;\n\n  // special handling for chains with hardcoded gasPrice and gasLimit\n  if (CUSTOM_GAS_FOR_CHAIN[networkId]) {\n    const enforceEip155 = await isEIP155Enforced(provider);\n    const chainId = enforceEip155 ? networkId : 0;\n    const gasPrice = CUSTOM_GAS_FOR_CHAIN[networkId]?.gasPrice;\n    const gasLimit = CUSTOM_GAS_FOR_CHAIN[networkId]?.gasLimit;\n    const deploymentInfo = getCreate2FactoryDeploymentInfo(chainId, {\n      gasPrice: gasPrice ? BigNumber.from(gasPrice) : undefined,\n      gasLimit: gasLimit ? BigNumber.from(gasLimit) : undefined\n    });\n    if (await isContractDeployed(deploymentInfo.deployment, provider)) {\n      deploymentInfo.transaction = \"\";\n    }\n    return deploymentInfo;\n  }\n\n  // default flow\n  const allBinsInfo = [...CUSTOM_GAS_BINS.map(b =>\n  // to generate EIP-155 transaction\n  getCreate2FactoryDeploymentInfo(networkId, {\n    gasPrice: BigNumber.from(b)\n  })),\n  // to generate pre-EIP-155 transaction, hence chainId 0\n  ...CUSTOM_GAS_BINS.map(b => getCreate2FactoryDeploymentInfo(0, {\n    gasPrice: BigNumber.from(b)\n  }))];\n  const allFactories = await Promise.all(allBinsInfo.map(b => isContractDeployed(b.deployment, provider)));\n  const indexOfCommonFactory = allBinsInfo.findIndex(b => b.deployment === COMMON_FACTORY);\n  if (indexOfCommonFactory && allFactories[indexOfCommonFactory]) {\n    return {\n      ...allBinsInfo[indexOfCommonFactory],\n      transaction: \"\"\n    };\n  }\n  const indexOfExistingDeployment = allFactories.findIndex(b => b);\n  if (indexOfExistingDeployment && allBinsInfo[indexOfExistingDeployment]) {\n    return {\n      ...allBinsInfo[indexOfExistingDeployment],\n      transaction: \"\"\n    };\n  }\n  const [enforceEip155, gasPriceFetched] = await Promise.all([isEIP155Enforced(provider), provider.getGasPrice()]);\n  const chainId = enforceEip155 ? networkId : 0;\n  const bin = _getNearestGasPriceBin(gasPriceFetched);\n  return getCreate2FactoryDeploymentInfo(chainId, {\n    gasPrice: bin\n  });\n}\nfunction _getNearestGasPriceBin(gasPrice) {\n  const bin = CUSTOM_GAS_BINS.find(e => BigNumber.from(e).gte(gasPrice));\n  return bin ? BigNumber.from(bin) : gasPrice;\n}\n\nconst bytecode = \"0x60606040526040805190810160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019061004f9291906100c8565b506040805190810160405280600481526020017f57455448000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b9291906100c8565b506012600260006101000a81548160ff021916908360ff16021790555034156100c357600080fd5b61016d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010957805160ff1916838001178555610137565b82800160010185558215610137579182015b8281111561013657825182559160200191906001019061011b565b5b5090506101449190610148565b5090565b61016a91905b8082111561016657600081600090555060010161014e565b5090565b90565b610c348061017c6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b9578063095ea7b31461014757806318160ddd146101a157806323b872dd146101ca5780632e1a7d4d14610243578063313ce5671461026657806370a082311461029557806395d89b41146102e2578063a9059cbb14610370578063d0e30db0146103ca578063dd62ed3e146103d4575b6100b7610440565b005b34156100c457600080fd5b6100cc6104dd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010c5780820151818401526020810190506100f1565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015257600080fd5b610187600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061057b565b604051808215151515815260200191505060405180910390f35b34156101ac57600080fd5b6101b461066d565b6040518082815260200191505060405180910390f35b34156101d557600080fd5b610229600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068c565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b61026460048080359060200190919050506109d9565b005b341561027157600080fd5b610279610b05565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b6040518082815260200191505060405180910390f35b34156102ed57600080fd5b6102f5610b30565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033557808201518184015260208101905061031a565b50505050905090810190601f1680156103625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037b57600080fd5b6103b0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bce565b604051808215151515815260200191505060405180910390f35b6103d2610440565b005b34156103df57600080fd5b61042a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610be3565b6040518082815260200191505060405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106dc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156107b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108cf5781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561084457600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a2757600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610ab457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081565b6000610bdb33848461068c565b905092915050565b60046020528160005260406000206020528060005260406000206000915091505054815600a165627a7a72305820deb4c2ccab3c2fdca32ab3f46728389c2fe2c165d5fafa07661e4e004f6c344a0029\";\n\n/**\n * Generate salt for deployment with Create2\n * Note: Salt component is generated by appending `tw` (thirdweb) to the bytecode\n *\n * @internal\n * @param bytecode - Creation bytecode of the contract to deploy\n */\nfunction getSaltHash(bytecode) {\n  const bytecodePrefixed = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n  const bytecodeHash = utils.id(bytecodePrefixed);\n  const salt = `tw.${bytecodeHash}`;\n  const saltHash = utils.id(salt);\n  return saltHash;\n}\n\n/**\n *\n * Construct init-bytecode, packed with salthash.\n * This hex data is intended to be sent to the CREATE2 factory address\n *\n * @internal\n * @param bytecode - Creation bytecode of the contract to deploy\n * @param encodedArgs - Abi-encoded constructor params\n */\nfunction getInitBytecodeWithSalt(bytecode, encodedArgs, salt) {\n  const bytecodePrefixed = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n  const saltHash = salt ? utils.id(salt) : getSaltHash(bytecodePrefixed);\n  const initBytecodeWithSalt = utils.solidityPack([\"bytes32\", \"bytes\", \"bytes\"], [saltHash, bytecodePrefixed, encodedArgs]);\n  return initBytecodeWithSalt;\n}\n\n/**\n * Pre-compute a contract's deployment address for a CREATE2 deployment.\n *\n * @internal\n * @param bytecode - Creation bytecode of the contract to deploy\n * @param encodedArgs - Abi-encoded constructor params\n * @param create2FactoryAddress - The create2 factory address to use\n */\nfunction computeDeploymentAddress(bytecode, encodedArgs, create2FactoryAddress, salt) {\n  const bytecodePrefixed = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n  const saltHash = salt ? utils.id(salt) : getSaltHash(bytecodePrefixed);\n\n  // 1. create init bytecode hash with contract's bytecode and encoded args\n  const initBytecode = utils.solidityPack([\"bytes\", \"bytes\"], [bytecodePrefixed, encodedArgs]);\n\n  // 2. abi-encode pack the deployer address, salt, and bytecode hash\n  const deployInfoPacked = utils.solidityPack([\"bytes1\", \"address\", \"bytes32\", \"bytes32\"], [\"0xff\", create2FactoryAddress, saltHash, utils.solidityKeccak256([\"bytes\"], [initBytecode])]);\n\n  // 3. hash the packed deploy info\n  const hashedDeployInfo = utils.solidityKeccak256([\"bytes\"], [deployInfoPacked]);\n\n  // 4. return last 20 bytes (40 characters) of the hash -- this is the predicted address\n  return `0x${hashedDeployInfo.slice(26)}`;\n}\n\n/**\n * @public\n */\nlet ChainId = /*#__PURE__*/function (ChainId) {\n  ChainId[ChainId[\"Mainnet\"] = 1] = \"Mainnet\";\n  ChainId[ChainId[\"Goerli\"] = 5] = \"Goerli\";\n  ChainId[ChainId[\"Polygon\"] = 137] = \"Polygon\";\n  ChainId[ChainId[\"Mumbai\"] = 80001] = \"Mumbai\";\n  ChainId[ChainId[\"Localhost\"] = 1337] = \"Localhost\";\n  ChainId[ChainId[\"Hardhat\"] = 31337] = \"Hardhat\";\n  ChainId[ChainId[\"Fantom\"] = 250] = \"Fantom\";\n  ChainId[ChainId[\"FantomTestnet\"] = 4002] = \"FantomTestnet\";\n  ChainId[ChainId[\"Avalanche\"] = 43114] = \"Avalanche\";\n  ChainId[ChainId[\"AvalancheFujiTestnet\"] = 43113] = \"AvalancheFujiTestnet\";\n  ChainId[ChainId[\"Optimism\"] = 10] = \"Optimism\";\n  ChainId[ChainId[\"OptimismGoerli\"] = 420] = \"OptimismGoerli\";\n  ChainId[ChainId[\"Arbitrum\"] = 42161] = \"Arbitrum\";\n  ChainId[ChainId[\"ArbitrumGoerli\"] = 421613] = \"ArbitrumGoerli\";\n  ChainId[ChainId[\"BinanceSmartChainMainnet\"] = 56] = \"BinanceSmartChainMainnet\";\n  ChainId[ChainId[\"BinanceSmartChainTestnet\"] = 97] = \"BinanceSmartChainTestnet\";\n  return ChainId;\n}({});\n\n/**\n * @public\n */\nconst NATIVE_TOKEN_ADDRESS = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\";\n\n/**\n * @public\n */\nconst NATIVE_TOKENS = {\n  [ChainId.Mainnet]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Goerli]: {\n    name: \"Görli Ether\",\n    symbol: \"GOR\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  11155111: {\n    name: \"Sepolia Ether\",\n    symbol: \"SEP\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Polygon]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\"\n    }\n  },\n  [ChainId.Mumbai]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\"\n    }\n  },\n  [ChainId.Avalanche]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\"\n    }\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\"\n    }\n  },\n  [ChainId.Fantom]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\"\n    }\n  },\n  [ChainId.FantomTestnet]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xf1277d1Ed8AD466beddF92ef448A132661956621\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\"\n    }\n  },\n  [ChainId.Arbitrum]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.ArbitrumGoerli]: {\n    name: \"Arbitrum Goerli Ether\",\n    symbol: \"AGOR\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Optimism]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.OptimismGoerli]: {\n    name: \"Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"BNB\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n      name: \"Wrapped Binance Chain Token\",\n      symbol: \"WBNB\"\n    }\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"TBNB\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\",\n      name: \"Wrapped Binance Chain Testnet Token\",\n      symbol: \"WBNB\"\n    }\n  },\n  [ChainId.Hardhat]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Localhost]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  84531: {\n    name: \"Base Goerli Testnet\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  // eslint-disable-next-line no-useless-computed-key\n  [280]: {\n    name: \"zkSync Era Testnet\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  }\n};\n\n/**\n * Returns the native token for a given chain\n * @param chainId - the chain id\n * @public\n */\nfunction getNativeTokenByChainId(chainId) {\n  const chain = getSupportedChains().find(c => c.chainId === chainId);\n  if (chain && chain.nativeCurrency) {\n    return {\n      name: chain.nativeCurrency.name,\n      symbol: chain.nativeCurrency.symbol,\n      decimals: 18,\n      wrapped: {\n        address: constants.AddressZero,\n        name: `Wrapped ${chain.nativeCurrency.name}`,\n        symbol: `W${chain.nativeCurrency.symbol}`\n      }\n    };\n  }\n  return NATIVE_TOKENS[chainId] || {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: constants.AddressZero,\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  };\n}\nconst LINK_TOKEN_ADDRESS = {\n  [ChainId.Mainnet]: \"0x514910771AF9Ca656af840dff83E8264EcF986CA\",\n  [ChainId.Goerli]: \"0x326C977E6efc84E512bB9C30f76E30c160eD06FB\",\n  [ChainId.BinanceSmartChainMainnet]: \"0x404460C6A5EdE2D891e8297795264fDe62ADBB75\",\n  [ChainId.Polygon]: \"0xb0897686c545045aFc77CF20eC7A532E3120E0F1\",\n  [ChainId.Mumbai]: \"0x326C977E6efc84E512bB9C30f76E30c160eD06FB\",\n  [ChainId.Avalanche]: \"0x5947BB275c521040051D82396192181b413227A3\",\n  [ChainId.AvalancheFujiTestnet]: \"0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846\",\n  [ChainId.Fantom]: \"0x6F43FF82CCA38001B6699a8AC47A2d0E66939407\",\n  [ChainId.FantomTestnet]: \"0xfaFedb041c0DD4fA2Dc0d87a6B0979Ee6FA7af5F\"\n};\n\n/**\n *\n * @param abi - The abi to extract constructor params from\n * @returns\n * @internal\n */\nfunction extractConstructorParamsFromAbi(abi) {\n  const parsedAbi = AbiSchema.parse(abi || []);\n  for (const input of parsedAbi) {\n    if (input.type === \"constructor\") {\n      return input.inputs || [];\n    }\n  }\n  return [];\n}\n\nconst caches = {\n  deploymentPresets: {}\n};\n\n/**\n * Returns the RoyaltyEngineV1 address for a given chain\n * @param chainId - the chain id\n * @public\n */\nfunction getRoyaltyEngineV1ByChainId(chainId) {\n  return ROYALTY_ENGINE_V1_ADDRESS[chainId] || constants.AddressZero;\n}\nconst ROYALTY_ENGINE_V1_ADDRESS = {\n  [ChainId.Mainnet]: \"0x0385603ab55642cb4dd5de3ae9e306809991804f\",\n  [ChainId.Goerli]: \"0xEF770dFb6D5620977213f55f99bfd781D04BBE15\",\n  [ChainId.BinanceSmartChainMainnet]: \"0xEF770dFb6D5620977213f55f99bfd781D04BBE15\",\n  [ChainId.Polygon]: \"0x28EdFcF0Be7E86b07493466e7631a213bDe8eEF2\",\n  [ChainId.Mumbai]: \"0x0a01E11887f727D1b1Cd81251eeEE9BEE4262D07\",\n  [ChainId.Avalanche]: \"0xEF770dFb6D5620977213f55f99bfd781D04BBE15\",\n  [ChainId.Optimism]: \"0xEF770dFb6D5620977213f55f99bfd781D04BBE15\",\n  [ChainId.Arbitrum]: \"0xEF770dFb6D5620977213f55f99bfd781D04BBE15\"\n};\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n/**\n * @internal\n */\nasync function computeDeploymentInfo(contractType, provider, storage, create2Factory, contractOptions, clientId, secretKey) {\n  const contractName = contractOptions && contractOptions.contractName;\n  const version = contractOptions && contractOptions.version;\n  let publisherAddress = contractOptions && contractOptions.publisherAddress;\n  let metadata = contractOptions && contractOptions.metadata;\n  invariant(contractName || metadata, \"Require contract name or metadata\");\n  if (contractName && caches.deploymentPresets[contractName]) {\n    return caches.deploymentPresets[contractName];\n  }\n\n  // Different treatment for WETH contract\n  if (contractName === \"WETH9\") {\n    const address = computeDeploymentAddress(bytecode, [], create2Factory);\n    const contractDeployed = await isContractDeployed(address, provider);\n    let initBytecodeWithSalt = \"\";\n    if (!contractDeployed) {\n      initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, []);\n    }\n    return {\n      name: contractName,\n      type: contractType,\n      transaction: {\n        predictedAddress: address,\n        to: create2Factory,\n        data: initBytecodeWithSalt\n      }\n    };\n  }\n  if (!metadata) {\n    invariant(contractName, \"Require contract name\");\n    if (!publisherAddress) {\n      publisherAddress = THIRDWEB_DEPLOYER;\n    }\n    const publishedContract = await fetchPublishedContractFromPolygon(publisherAddress, contractName, version, storage, clientId, secretKey);\n    metadata = (await fetchAndCacheDeployMetadata(publishedContract.metadataUri, storage)).compilerMetadata;\n  }\n  const encodedArgs = await encodeConstructorParamsForImplementation(metadata, provider, storage, create2Factory, contractOptions?.constructorParams, clientId, secretKey);\n  const address = computeDeploymentAddress(metadata.bytecode, encodedArgs, create2Factory);\n  const contractDeployed = await isContractDeployed(address, provider);\n  let initBytecodeWithSalt = \"\";\n  if (!contractDeployed) {\n    initBytecodeWithSalt = getInitBytecodeWithSalt(metadata.bytecode, encodedArgs);\n  }\n  return {\n    name: contractName,\n    type: contractType,\n    transaction: {\n      predictedAddress: address,\n      to: create2Factory,\n      data: initBytecodeWithSalt\n    },\n    encodedArgs\n  };\n}\n\n/**\n * @internal\n *\n * Determine constructor params required by an implementation contract.\n * Return abi-encoded params.\n */\nasync function encodeConstructorParamsForImplementation(compilerMetadata, provider, storage, create2Factory, constructorParamMap, clientId, secretKey) {\n  const constructorParams = extractConstructorParamsFromAbi(compilerMetadata.abi);\n  const constructorParamTypes = constructorParams.map(p => {\n    if (p.type === \"tuple[]\" || p.type === \"tuple\") {\n      return utils.ParamType.from(p);\n    } else {\n      return p.type;\n    }\n  });\n  const constructorParamValues = await Promise.all(constructorParams.map(async p => {\n    if (constructorParamMap && constructorParamMap[p.name]) {\n      if (constructorParamMap[p.name].type) {\n        invariant(constructorParamMap[p.name].type === p.type, `Provided type ${constructorParamMap[p.name].type} doesn't match the actual type ${p.type} from Abi`);\n      }\n      return constructorParamMap[p.name].value;\n    }\n    if (p.name && p.name.includes(\"nativeTokenWrapper\")) {\n      return await nativeTokenInputArg(provider, storage, create2Factory, clientId, secretKey);\n    } else if (p.name && p.name.includes(\"trustedForwarder\")) {\n      if (compilerMetadata.name === \"Pack\") {\n        return AddressZero;\n      }\n      const deploymentInfo = await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n        contractName: \"Forwarder\"\n      }, clientId, secretKey);\n      if (!caches.deploymentPresets[\"Forwarder\"]) {\n        caches.deploymentPresets[\"Forwarder\"] = deploymentInfo;\n      }\n      return deploymentInfo.transaction.predictedAddress;\n    } else if (p.name && p.name.includes(\"royaltyEngineAddress\")) {\n      const chainId = (await provider.getNetwork()).chainId;\n      return getRoyaltyEngineV1ByChainId(chainId);\n    } else if (p.name && p.name.includes(\"marketplaceV3Params\")) {\n      const chainId = (await provider.getNetwork()).chainId;\n      const royaltyEngineAddress = getRoyaltyEngineV1ByChainId(chainId);\n      const nativeTokenWrapper = await nativeTokenInputArg(provider, storage, create2Factory, clientId, secretKey);\n      const extensions = constructorParamMap ? constructorParamMap[\"_extensions\"].value : [];\n      return {\n        extensions: extensions,\n        royaltyEngineAddress: royaltyEngineAddress,\n        nativeTokenWrapper: nativeTokenWrapper\n      };\n    } else {\n      throw new Error(\"Can't resolve constructor arguments\");\n    }\n  }));\n  const encodedArgs = utils.defaultAbiCoder.encode(constructorParamTypes, constructorParamValues);\n  return encodedArgs;\n}\nasync function nativeTokenInputArg(provider, storage, create2Factory, clientId, secretKey) {\n  const chainId = (await provider.getNetwork()).chainId;\n  let nativeTokenWrapperAddress = getNativeTokenByChainId(chainId).wrapped.address;\n  if (nativeTokenWrapperAddress === constants.AddressZero) {\n    const deploymentInfo = await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n      contractName: \"WETH9\"\n    }, clientId, secretKey);\n    if (!caches.deploymentPresets[\"WETH9\"]) {\n      caches.deploymentPresets[\"WETH9\"] = deploymentInfo;\n    }\n    nativeTokenWrapperAddress = deploymentInfo.transaction.predictedAddress;\n  }\n  return nativeTokenWrapperAddress;\n}\n\n/**\n *\n * @internal\n * @param provider - The provider to use\n * @param storage - The storage to use\n * @param create2Factory - The create2 factory to use\n */\nasync function computeEOAForwarderAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"ForwarderEOAOnly\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n *\n * @internal\n * @param provider - The provider to use\n * @param storage - The storage to use\n * @param create2Factory - The create2 factory to use\n */\nasync function computeForwarderAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"Forwarder\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Error that may get thrown if IPFS returns nothing for a given uri.\n * @internal\n */\nclass NotFoundError extends Error {\n  /** @internal */\n  constructor(identifier) {\n    super(identifier ? `Object with id ${identifier} NOT FOUND` : \"NOT_FOUND\");\n  }\n}\n\n/**\n * Error that may get thrown if an invalid address was passed\n * @internal\n */\nclass InvalidAddressError extends Error {\n  /** @internal */\n  constructor(address) {\n    super(address ? `'${address}' is an invalid address` : \"Invalid address passed\");\n  }\n}\n\n/**\n * @internal\n */\nclass MissingRoleError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor(address, role) {\n    super(`MISSING ROLE: ${address} does not have the '${role}' role`);\n  }\n}\n\n/**\n * @internal\n */\nclass AssetNotFoundError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"The asset you're trying to use could not be found.\";\n    super(`message: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nclass UploadError extends Error {\n  /** @internal */\n  constructor(message) {\n    super(`UPLOAD_FAILED: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nclass FileNameMissingError extends Error {\n  /** @internal */\n  constructor() {\n    super(\"File name is required when object is not a `File` type object.\");\n  }\n}\n\n/**\n * @internal\n */\nclass DuplicateFileNameError extends Error {\n  /** @internal */\n  constructor(fileName) {\n    super(`DUPLICATE_FILE_NAME_ERROR: File name ${fileName} was passed for more than one file.`);\n  }\n}\n\n/**\n * @internal\n */\nclass NotEnoughTokensError extends Error {\n  /** @internal */\n  constructor(contractAddress, quantity, available) {\n    super(`BALANCE ERROR: you do not have enough balance on contract ${contractAddress} to use ${quantity} tokens. You have ${available} tokens available.`);\n  }\n}\n\n/**\n * @internal\n */\nclass MissingOwnerRoleError extends Error {\n  /** @internal */\n  constructor() {\n    super(`LIST ERROR: you should be the owner of the token to list it.`);\n  }\n}\n\n/**\n * @internal\n */\nclass QuantityAboveLimitError extends Error {\n  /** @internal */\n  constructor(quantity) {\n    super(`BUY ERROR: You cannot buy more than ${quantity} tokens`);\n  }\n}\n\n/**\n * Thrown when data fails to fetch from storage.\n * @internal\n */\nclass FetchError extends Error {\n  /** @internal */\n  constructor(message, innerError) {\n    super(`FETCH_FAILED: ${message}`);\n    this.innerError = innerError;\n  }\n}\n\n/**\n * Thrown when attempting to create a snapshot with duplicate leafs\n * @internal\n */\nclass DuplicateLeafsError extends Error {\n  constructor(message) {\n    super(`DUPLICATE_LEAFS${message ? ` : ${message}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to update/cancel an auction that already started\n * @internal\n */\nclass AuctionAlreadyStartedError extends Error {\n  constructor(id) {\n    super(`Auction already started with existing bid${id ? `, id: ${id}` : \"\"}`);\n  }\n}\n\n/**\n * @internal\n */\nclass FunctionDeprecatedError extends Error {\n  /** @internal */\n  constructor(message) {\n    super(`FUNCTION DEPRECATED. ${message ? `Use ${message} instead` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing from a marketplace that doesn't exist\n * @internal\n */\nclass ListingNotFoundError extends Error {\n  constructor(marketplaceContractAddress, listingId) {\n    super(`Could not find listing.${marketplaceContractAddress ? ` marketplace address: ${marketplaceContractAddress}` : \"\"}${listingId ? ` listing id: ${listingId}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing of the wrong type\n * @internal\n */\nclass WrongListingTypeError extends Error {\n  constructor(marketplaceContractAddress, listingId, actualType, expectedType) {\n    super(`Incorrect listing type. Are you sure you're using the right method?.${marketplaceContractAddress ? ` marketplace address: ${marketplaceContractAddress}` : \"\"}${listingId ? ` listing id: ${listingId}` : \"\"}${expectedType ? ` expected type: ${expectedType}` : \"\"}${actualType ? ` actual type: ${actualType}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to transfer an asset that has restricted transferability\n * @internal\n */\nclass RestrictedTransferError extends Error {\n  constructor(assetAddress) {\n    super(`Failed to transfer asset, transfer is restricted.${assetAddress ? ` Address : ${assetAddress}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to execute an admin-role function.\n * @internal\n */\nclass AdminRoleMissingError extends Error {\n  constructor(address, contractAddress) {\n    let message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Failed to execute transaction\";\n    super(`${message}, admin role is missing${address ? ` on address: ${address}` : \"\"}${contractAddress ? ` on contract: ${contractAddress}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to close an auction that has not ended\n * @internal\n */\nclass AuctionHasNotEndedError extends Error {\n  constructor(id, endTime) {\n    super(`Auction has not ended yet${id ? `, id: ${id}` : \"\"}${endTime ? `, end time: ${endTime.toString()}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to call a contract function that is not implemented\n * @internal\n */\nclass ExtensionNotImplementedError extends Error {\n  constructor(feature) {\n    super(`This functionality is not available because the contract does not implement the '${feature.name}' Extension. Learn how to unlock this functionality at https://portal.thirdweb.com/contracts/build/extensions `);\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * @public\n */\nclass TransactionError extends Error {\n  constructor(info, raw) {\n    let errorMessage = `\\n\\n\\n╔═══════════════════╗\\n║ TRANSACTION ERROR ║\\n╚═══════════════════╝\\n\\n`;\n    errorMessage += `Reason: ${info.reason}`;\n    errorMessage += `\\n\\n\\n╔═════════════════════════╗\\n║ TRANSACTION INFORMATION ║\\n╚═════════════════════════╝\\n`;\n    errorMessage += withSpaces(\"from\", info.from);\n    if (info.to) {\n      errorMessage += withSpaces(\"to\", info.contractName ? `${info.to} (${info.contractName})` : info.to);\n    }\n    errorMessage += withSpaces(`chain`, `${info.network.name} (${info.network.chainId})`);\n    if (info.rpcUrl) {\n      try {\n        const url = new URL(info.rpcUrl);\n        errorMessage += withSpaces(`rpc`, url.hostname);\n      } catch (e2) {\n        // ignore if can't parse URL\n      }\n    }\n    if (info.hash) {\n      errorMessage += withSpaces(`tx hash`, info.hash);\n    }\n    if (info.value && info.value.gt(0)) {\n      errorMessage += withSpaces(\"value\", `${utils.formatEther(info.value)} ${NATIVE_TOKENS[info.network.chainId]?.symbol || \"\"}`);\n    }\n    errorMessage += withSpaces(`data`, `${info.data}`);\n    if (info.method) {\n      errorMessage += withSpaces(\"method\", info.method);\n    }\n    if (info.sources) {\n      const revertFile = info.sources.find(file => file.source.includes(info.reason));\n      if (revertFile) {\n        const lines = revertFile.source.split(\"\\n\").map((line, index) => `${index + 1}  ${line}`);\n        const revertLine = lines.findIndex(line => line.includes(info.reason));\n        lines[revertLine] += \"   <-- REVERT\";\n        const errorLines = lines.slice(revertLine - 8, revertLine + 4);\n        errorMessage += `\\n\\n\\n╔══════════════════════╗\\n║ SOLIDITY STACK TRACE ║\\n╚══════════════════════╝\\n\\n`;\n        errorMessage += `File: ${revertFile.filename.replace(\"node_modules/\", \"\")}\\n\\n`;\n        errorMessage += errorLines.join(\"\\n\");\n      }\n    }\n    errorMessage += `\\n\\n\\n╔═════════════════════╗\\n║ DEBUGGING RESOURCES ║\\n╚═════════════════════╝\\n\\n`;\n    errorMessage += `Need helping debugging? Visit our support site: https://thirdweb.com/support`;\n    errorMessage += `\\n\\n`;\n    super(errorMessage);\n    this._reason = info.reason;\n    this._info = info;\n    this._raw = raw;\n  }\n\n  // Keep reason here for backwards compatibility\n  get reason() {\n    return this._reason;\n  }\n  get raw() {\n    return this._raw;\n  }\n  get info() {\n    return this._info;\n  }\n}\n\n/**\n * @internal\n */\nfunction parseRevertReason(error) {\n  if (error.reason && !error.reason.includes(\"cannot estimate gas\")) {\n    return error.reason;\n  }\n  if (error.error) {\n    return error.error;\n  }\n\n  // I think this code path should never be hit, but just in case\n\n  let errorString = error;\n  if (typeof error === \"object\") {\n    // MetaMask errors come as objects so parse them first\n    errorString = JSON.stringify(error);\n  } else if (typeof error !== \"string\") {\n    errorString = error.toString();\n  }\n\n  // if the error is just too long, just return the message to limit Regexp processing time\n  // see: https://cwe.mitre.org/data/definitions/1333.html\n  if (errorString.length > 5000) {\n    return error.message || \"\";\n  }\n  return parseMessageParts(/.*?\"message\":\"([^\"\\\\]*).*?/, errorString) || parseMessageParts(/.*?\"reason\":\"([^\"\\\\]*).*?/, errorString) || error.message || \"\";\n}\nfunction withSpaces(label, content) {\n  if (content === \"\") {\n    return content;\n  }\n  const spaces = Array(10 - label.length).fill(\" \").join(\"\");\n  if (content.includes(\"\\n\")) {\n    content = \"\\n\\n  \" + content.split(\"\\n\").join(`\\n  `);\n  } else {\n    content = `${spaces}${content}`;\n  }\n  return `\\n${label}:${content}`;\n}\nfunction parseMessageParts(regex, raw) {\n  const msgMatches = raw.match(regex) || [];\n  let extracted = \"\";\n  if (msgMatches?.length > 0) {\n    extracted += msgMatches[1];\n  }\n  return extracted;\n}\n\n/**\n * @internal\n * @param err - The error to check\n * @param message - The message to check for\n */\nfunction includesErrorMessage(err, message) {\n  if (!err) {\n    return false;\n  }\n  return err && err.toString().includes(message) || err && err.message && err.message.toString().includes(message) || err && err.error && err.error.toString().includes(message);\n}\n\n/**\n * @internal\n */\nconst ForwardRequest = [{\n  name: \"from\",\n  type: \"address\"\n}, {\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"gas\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"data\",\n  type: \"bytes\"\n}];\nconst ChainAwareForwardRequest = [{\n  name: \"from\",\n  type: \"address\"\n}, {\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"gas\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"data\",\n  type: \"bytes\"\n}, {\n  name: \"chainid\",\n  type: \"uint256\"\n}];\n\n/**\n * @internal\n */\nconst BiconomyForwarderAbi = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"batchId\",\n    type: \"uint256\"\n  }],\n  name: \"getNonce\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst _nonces = {};\nconst _noncesSyncTimestamp = {};\n\n/**\n * @internal\n */\nasync function getAndIncrementNonce(forwarder, forwarderFunction, forwarderArgs) {\n  // address is only used for internal caching :)\n  const address = forwarderArgs.join(\"|\");\n  const timestamp = _noncesSyncTimestamp[address];\n  // if it's within 2 seconds we're optimistically increment the nonce\n  // should we always sync?\n  const shouldSync = Date.now() - timestamp >= 2000;\n  if (!(address in _nonces) || shouldSync) {\n    const nonceResult = await forwarder.functions[forwarderFunction](...forwarderArgs);\n    if (Array.isArray(nonceResult) && nonceResult.length > 0) {\n      _nonces[address] = BigNumber.from(nonceResult[0]);\n    } else {\n      _nonces[address] = BigNumber.from(nonceResult);\n    }\n    _noncesSyncTimestamp[address] = Date.now();\n  }\n  const nonce = _nonces[address];\n  _nonces[address] = BigNumber.from(_nonces[address]).add(1);\n  return nonce;\n}\n\nasync function getDefaultGasOverrides(provider) {\n  // handle smart wallet provider\n  if (provider.originalProvider) {\n    provider = provider.originalProvider;\n  }\n  const feeData = await getDynamicFeeData(provider);\n  if (feeData.maxFeePerGas && feeData.maxPriorityFeePerGas) {\n    return {\n      maxFeePerGas: feeData.maxFeePerGas,\n      maxPriorityFeePerGas: feeData.maxPriorityFeePerGas\n    };\n  } else {\n    return {\n      gasPrice: await getGasPrice(provider)\n    };\n  }\n}\nasync function getDynamicFeeData(provider) {\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  const [{\n    chainId\n  }, block, eth_maxPriorityFeePerGas] = await Promise.all([provider.getNetwork(), provider.getBlock(\"latest\"), provider.send(\"eth_maxPriorityFeePerGas\", []).catch(() => null)]);\n  const baseBlockFee = block && block.baseFeePerGas ? block.baseFeePerGas : utils.parseUnits(\"100\", \"wei\");\n\n  // flag-chain overrides\n  if (chainId === Flag.chainId || chainId === FlagTestnet.chainId) {\n    // chains does not support eip-1559, return null for all\n    return {\n      maxFeePerGas: null,\n      maxPriorityFeePerGas: null,\n      baseFee: null\n    };\n  } else if (chainId === Mumbai.chainId || chainId === Polygon.chainId) {\n    // for polygon, get fee data from gas station\n    maxPriorityFeePerGas = await getPolygonGasPriorityFee(chainId);\n  } else if (eth_maxPriorityFeePerGas) {\n    // prioritize fee from eth_maxPriorityFeePerGas\n    maxPriorityFeePerGas = BigNumber.from(eth_maxPriorityFeePerGas);\n  } else {\n    // if eth_maxPriorityFeePerGas is not available, use 1.5 gwei default\n    const feeData = await provider.getFeeData();\n    maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n    if (!maxPriorityFeePerGas) {\n      // chain does not support eip-1559, return null for both\n      return {\n        maxFeePerGas: null,\n        maxPriorityFeePerGas: null,\n        baseFee: null\n      };\n    }\n  }\n\n  // add 10% tip to maxPriorityFeePerGas for faster processing\n  maxPriorityFeePerGas = getPreferredPriorityFee(maxPriorityFeePerGas);\n  // eip-1559 formula, doubling the base fee ensures that the tx can be included in the next 6 blocks no matter how busy the network is\n  // good article on the subject: https://www.blocknative.com/blog/eip-1559-fees\n  maxFeePerGas = baseBlockFee.mul(2).add(maxPriorityFeePerGas);\n  return {\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    baseFee: baseBlockFee\n  };\n}\nfunction getPreferredPriorityFee(defaultPriorityFeePerGas) {\n  let percentMultiplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  const extraTip = defaultPriorityFeePerGas.div(100).mul(percentMultiplier); // + 10%\n  const totalPriorityFee = defaultPriorityFeePerGas.add(extraTip);\n  return totalPriorityFee;\n}\nasync function getGasPrice(provider) {\n  const gasPrice = await provider.getGasPrice();\n  const maxGasPrice = utils.parseUnits(\"300\", \"gwei\"); // 300 gwei\n  const extraTip = gasPrice.div(100).mul(10); // + 10%\n  const txGasPrice = gasPrice.add(extraTip);\n  if (txGasPrice.gt(maxGasPrice)) {\n    return maxGasPrice;\n  }\n  return txGasPrice;\n}\nasync function estimateTransactionCost(provider, tx) {\n  const chainId = (await provider.getNetwork()).chainId;\n  let l1GasCost = BigNumber.from(0);\n  if (isOpStackChain(chainId)) {\n    const {\n      asL2Provider\n    } = await import('@eth-optimism/sdk');\n    const l2RpcProvider = asL2Provider(provider);\n    l1GasCost = await l2RpcProvider.estimateL1GasCost(tx);\n  }\n  const gasLimit = tx.gasLimit || (await provider.estimateGas(tx));\n  const gasPrice = await getGasPrice(provider);\n  const gasCost = BigNumber.from(gasLimit).mul(gasPrice);\n  return gasCost.add(l1GasCost);\n}\nfunction isOpStackChain(chainId) {\n  return chainId === Optimism.chainId || chainId === OpSepoliaTestnet.chainId || chainId === Base.chainId || chainId === BaseSepoliaTestnet.chainId || chainId === Zora.chainId || chainId === ZoraSepoliaTestnet.chainId || chainId === Celo.chainId || chainId === CeloAlfajoresTestnet.chainId || chainId === 204 ||\n  // opBNB\n  chainId === 5611 // opBNB testnet\n  ;\n}\n\n/**\n * @internal\n */\nfunction getGasStationUrl(chainId) {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return \"https://gasstation.polygon.technology/v2\";\n    case ChainId.Mumbai:\n      return \"https://gasstation-testnet.polygon.technology/v2\";\n  }\n}\nconst MIN_POLYGON_GAS_PRICE = /* @__PURE__ */(() => utils.parseUnits(\"31\", \"gwei\"))();\nconst MIN_MUMBAI_GAS_PRICE = /* @__PURE__ */(() => utils.parseUnits(\"1\", \"gwei\"))();\n\n/**\n * @internal\n */\nfunction getDefaultGasFee(chainId) {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return MIN_POLYGON_GAS_PRICE;\n    case ChainId.Mumbai:\n      return MIN_MUMBAI_GAS_PRICE;\n  }\n}\n\n/**\n *\n * @returns The gas price\n * @internal\n */\nasync function getPolygonGasPriorityFee(chainId) {\n  const gasStationUrl = getGasStationUrl(chainId);\n  try {\n    const data = await (await fetch(gasStationUrl)).json();\n    // take the standard speed here, SDK options will define the extra tip\n    const priorityFee = data[\"fast\"][\"maxPriorityFee\"];\n    if (priorityFee > 0) {\n      const fixedFee = parseFloat(priorityFee).toFixed(9);\n      return utils.parseUnits(fixedFee, \"gwei\");\n    }\n  } catch {\n    // if the gas station is down, return the default gas fee\n  }\n  return getDefaultGasFee(chainId);\n}\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * eip712 sign typed data with different wallet handling including ledger live\n * @internal\n */\nasync function signTypedDataInternal(signerInput, domain, types, message) {\n  // Handle ERC4337Signer\n  let signer = signerInput;\n  if (signerInput.originalSigner) {\n    signer = signerInput.originalSigner;\n  }\n  const provider = signer?.provider;\n  if (!provider) {\n    throw new Error(\"missing provider\");\n  }\n  const payload = utils._TypedDataEncoder.getPayload(domain, types, message);\n  let signature = \"\";\n  const signerAddress = (await signer.getAddress()).toLowerCase();\n\n  // an indirect way for accessing walletconnect's underlying provider\n  if (provider?.provider?.isWalletConnect) {\n    try {\n      signature = await provider.send(\"eth_signTypedData_v4\", [signerAddress, JSON.stringify(payload)]);\n    } catch (err) {\n      if (err?.message?.includes(\"eth_signTypedData_v4\")) {\n        signature = await provider.send(\"eth_signTypedData\", [signerAddress, JSON.stringify(payload)]);\n      } else {\n        throw err;\n      }\n    }\n  } else {\n    try {\n      signature = await signer._signTypedData(domain, types, message);\n    } catch (err) {\n      if (err?.message?.includes(\"eth_signTypedData_v4\")) {\n        signature = await provider.send(\"eth_signTypedData\", [signerAddress, JSON.stringify(payload)]);\n      } else {\n        // magic.link signer only supports this way\n        try {\n          await provider.send(\"eth_signTypedData_v4\", [signerAddress, JSON.stringify(payload)]);\n        } catch (finalErr) {\n          throw finalErr;\n        }\n      }\n    }\n  }\n\n  // fix ledger live where signature result in v = 0, 1. ethers magically fix it in split/join.\n  return {\n    payload,\n    signature: utils.joinSignature(utils.splitSignature(signature))\n  };\n}\n\nconst NAME_ABI = [{\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst DOMAIN_SEPARATOR_ABI = [{\n  constant: true,\n  inputs: [],\n  name: \"DOMAIN_SEPARATOR\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getDomainSeperator\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst NONCES_ABI = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"nonces\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"user\",\n    type: \"address\"\n  }],\n  name: \"getNonce\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"nonce\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nasync function getSignerNonce(signer, contractAddress) {\n  const contract = new Contract(contractAddress, NONCES_ABI, signer);\n  try {\n    return await contract.nonces(await signer.getAddress());\n  } catch (err) {\n    return await contract.getNonce(await signer.getAddress());\n  }\n}\nasync function getDomainSeperator(signer, contractAddress) {\n  const contract = new Contract(contractAddress, DOMAIN_SEPARATOR_ABI, signer);\n  try {\n    return await contract.DOMAIN_SEPARATOR();\n  } catch (err) {\n    try {\n      return await contract.getDomainSeperator();\n    } catch (err2) {\n      console.error(\"Error getting domain separator\", err2);\n    }\n  }\n}\nasync function getTokenName(signer, contractAddress) {\n  return new Contract(contractAddress, NAME_ABI, signer).name();\n}\n\n/**\n * Polygon chain has different EIP712 domain separator for USDC, DAI compared to other chains and slightly different than EIP-2612.\n */\nasync function getChainDomainSeperator(signer, domain) {\n  const contractDomainSeparator = await getDomainSeperator(signer, domain.verifyingContract);\n  const polygonDomain = {\n    name: domain.name,\n    version: domain.version,\n    verifyingContract: domain.verifyingContract,\n    salt: utils.hexZeroPad(BigNumber.from(domain.chainId).toHexString(), 32)\n  };\n  if (utils._TypedDataEncoder.hashDomain(polygonDomain) === contractDomainSeparator) {\n    return polygonDomain;\n  }\n  return domain;\n}\n\n/**\n * @internal\n */\nasync function signEIP2612Permit(signer, currencyAddress, owner, spender, value, deadline, nonce, domainSeparatorVersion) {\n  const [name, chainId, signerNonce] = await Promise.all([getTokenName(signer, currencyAddress), signer.getChainId(), getSignerNonce(signer, currencyAddress)]);\n  const domain = await getChainDomainSeperator(signer, {\n    name,\n    version: domainSeparatorVersion || \"1\",\n    chainId,\n    verifyingContract: currencyAddress\n  });\n  nonce = nonce || signerNonce.toString();\n  deadline = deadline || constants.MaxUint256;\n  const message = {\n    owner,\n    spender,\n    value,\n    nonce,\n    deadline\n  };\n  const types = {\n    Permit: [{\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      name: \"spender\",\n      type: \"address\"\n    }, {\n      name: \"value\",\n      type: \"uint256\"\n    }, {\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      name: \"deadline\",\n      type: \"uint256\"\n    }]\n  };\n  const {\n    signature\n  } = await signTypedDataInternal(signer, domain, types, message);\n  return {\n    message,\n    signature\n  };\n}\n\nconst TWRegistry_address = \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\";\nconst TWFactory_address = \"0x5DBC7B840baa9daBcBe9D2492E45D7244B54A2A0\";\n\n/**\n * @internal\n */\nconst OZ_DEFENDER_FORWARDER_ADDRESS = \"0xc82BbE41f2cF04e3a8efA18F7032BDD7f6d98a81\";\n\n/**\n * @internal\n */\nconst CONTRACT_ADDRESSES = {\n  [ChainId.Mainnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x76ce2CB1Ae48Fa067f4fb8c5f803111AE0B24BEA\",\n    biconomyForwarder: \"0x84a0856b038eaAd1cC7E297cF34A7e72685A8693\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.Goerli]: {\n    openzeppelinForwarder: \"0x5001A14CA6163143316a7C614e30e6041033Ac20\",\n    openzeppelinForwarderEOA: \"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2\",\n    biconomyForwarder: \"0xE041608922d06a4F26C0d4c27d8bCD01daf1f792\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0xB1Bd9d7942A250BA2Dce27DD601F2ED4211A60C4\"\n  },\n  [ChainId.Polygon]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F\",\n    biconomyForwarder: \"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x308473Be900F4185A56587dE54bDFF5E8f7a6AE7\"\n  },\n  [ChainId.Mumbai]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3F17972CB27506eb4a6a3D59659e0B57a43fd16C\"\n  },\n  [ChainId.Avalanche]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x64CD353384109423a966dCd3Aa30D884C9b2E057\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2\",\n    biconomyForwarder: \"0x6271Ca63D30507f2Dcbf99B52787032506D75BBF\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23\"\n  },\n  [ChainId.Fantom]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x64CD353384109423a966dCd3Aa30D884C9b2E057\",\n    twFactory: \"0x97EA0Fcc552D5A8Fb5e9101316AAd0D62Ea0876B\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.FantomTestnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x42D3048b595B6e1c28a588d70366CcC2AA4dB47b\",\n    biconomyForwarder: \"0x69FB8Dca8067A5D38703b9e8b39cf2D51473E4b4\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23\"\n  },\n  [ChainId.Arbitrum]: {\n    openzeppelinForwarder: \"0x4a8AC7f22DeD2CF923A51e4A1c67490bd8868add\",\n    openzeppelinForwarderEOA: \"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F\",\n    biconomyForwarder: \"0xfe0fa3C06d03bDC7fb49c892BbB39113B534fB57\",\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.ArbitrumGoerli]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310\",\n    biconomyForwarder: AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.Optimism]: {\n    openzeppelinForwarder: \"0xd85da690EF288A6976DE0E85Fb2Aad512eBAfbf7\",\n    openzeppelinForwarderEOA: \"0x7e80648EB2071E26937F9D42A513ccf4815fc702\",\n    biconomyForwarder: \"0xefba8a2a82ec1fb1273806174f5e28fbb917cf95\",\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.OptimismGoerli]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310\",\n    biconomyForwarder: AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    openzeppelinForwarder: \"0x7C4717039B89d5859c4Fbb85EDB19A6E2ce61171\",\n    openzeppelinForwarderEOA: \"0xE8dd2Ff0212F86d3197b4AfDC6dAC6ac47eb10aC\",\n    biconomyForwarder: \"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8\",\n    twBYOCRegistry: AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    openzeppelinForwarder: \"0x44bE9D54B9C8b5e57a3325E8Ec9154640e7c6955\",\n    openzeppelinForwarderEOA: \"0x7e80648EB2071E26937F9D42A513ccf4815fc702\",\n    biconomyForwarder: \"0x61456BF1715C1415730076BB79ae118E806E74d2\",\n    twBYOCRegistry: AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: TWRegistry_address\n  },\n  [ChainId.Hardhat]: {\n    openzeppelinForwarder: AddressZero,\n    openzeppelinForwarderEOA: AddressZero,\n    biconomyForwarder: AddressZero,\n    twFactory: AddressZero,\n    twRegistry: AddressZero,\n    twBYOCRegistry: AddressZero\n  },\n  [ChainId.Localhost]: {\n    openzeppelinForwarder: AddressZero,\n    openzeppelinForwarderEOA: AddressZero,\n    biconomyForwarder: AddressZero,\n    twFactory: AddressZero,\n    twRegistry: AddressZero,\n    twBYOCRegistry: AddressZero\n  }\n};\n\n/**\n * @internal\n */\nfunction getContractAddressByChainId(chainId, contractName) {\n  // for testing only\n  if (chainId === ChainId.Hardhat || chainId === ChainId.Localhost) {\n    if (contractName === \"twFactory\") {\n      return getProcessEnv(\"factoryAddress\");\n    } else if (contractName === \"twRegistry\") {\n      return getProcessEnv(\"registryAddress\");\n    } else {\n      return AddressZero;\n    }\n  }\n  // real output here\n  return CONTRACT_ADDRESSES[chainId]?.[contractName];\n}\n\n/**\n * @public\n */\nlet EventType = /*#__PURE__*/function (EventType) {\n  EventType[\"Transaction\"] = \"transaction\";\n  EventType[\"Signature\"] = \"signature\";\n  return EventType;\n}({});\n\nconst CallOverrideSchema = /* @__PURE__ */(() => z.object({\n  gasLimit: BigNumberishSchema.optional(),\n  gasPrice: BigNumberishSchema.optional(),\n  maxFeePerGas: BigNumberishSchema.optional(),\n  maxPriorityFeePerGas: BigNumberishSchema.optional(),\n  nonce: BigNumberishSchema.optional(),\n  value: BigNumberishSchema.optional(),\n  blockTag: z.union([z.string(), z.number()]).optional(),\n  from: AddressOrEnsSchema.optional(),\n  type: z.number().optional()\n}).strict())();\n\n/**\n * @internal\n */\nclass RPCConnectionHandler extends EventEmitter {\n  constructor(network, options) {\n    super();\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\"invalid sdk options object passed, falling back to default options\", optionParseError);\n      this.options = SDKOptionsSchema.parse({});\n    }\n    const [signer, provider] = getSignerAndProvider(network, this.options);\n    this.network = network;\n    this.signer = signer;\n    this.provider = provider;\n  }\n  /**\n   * The function to call whenever the network changes, such as when the users connects their wallet, disconnects their wallet, the connected chain changes, etc.\n   *\n   * @param network - a network, signer or provider that ethers js can interpret\n   */\n  updateSignerOrProvider(network) {\n    const [signer, provider] = getSignerAndProvider(network, this.options);\n    this.network = network;\n    this.signer = signer;\n    this.provider = provider;\n  }\n  /**\n   *\n   * @returns whether or not a signer is set, `true` if there is no signer so the class is in \"read only\" mode\n   */\n  isReadOnly() {\n    return !isSigner(this.signer);\n  }\n\n  /**\n   * Explicitly get the active signer.\n   * @returns The active signer, if there is one\n   */\n  getSigner() {\n    return this.signer;\n  }\n\n  /**\n   * Explicitly get the active provider.\n   * @returns The active provider\n   */\n  getProvider() {\n    return this.provider;\n  }\n\n  /**\n   *\n   * @returns The current signer if there is one, otherwise the active provider\n   */\n  getSignerOrProvider() {\n    return this.getSigner() || this.getProvider();\n  }\n}\n\n/**\n * @internal\n */\nclass ContractWrapper extends RPCConnectionHandler {\n  isValidContract = false;\n  customOverrides = () => ({});\n  /**\n   * @internal\n   */\n\n  constructor(network, contractAddress, contractAbi, options, storage) {\n    super(network, options);\n    this.abi = AbiSchema.parse(contractAbi);\n    this.address = contractAddress;\n    // set up the contract\n    this.writeContract = new Contract(contractAddress, contractAbi, this.getSignerOrProvider());\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(this.getProvider());\n    this.storage = storage;\n    this.functions = extractFunctionsFromAbi(this.abi);\n    this.extensions = detectFeatures(this.abi);\n  }\n  updateSignerOrProvider(network) {\n    // update the underlying base class\n    super.updateSignerOrProvider(network);\n    // re-connect the contract with the new signer / provider\n    this.writeContract = this.writeContract.connect(this.getSignerOrProvider());\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(this.getProvider());\n  }\n  updateAbi(updatedAbi) {\n    // re-connect the contract with the new signer / provider\n    this.writeContract = new Contract(this.address, updatedAbi, this.getSignerOrProvider());\n\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(this.getProvider());\n    this.abi = AbiSchema.parse(updatedAbi);\n    this.functions = extractFunctionsFromAbi(this.abi);\n    this.extensions = detectFeatures(this.abi);\n  }\n\n  /**\n   * @internal\n   */\n  async getChainID() {\n    const provider = this.getProvider();\n    const {\n      chainId\n    } = await provider.getNetwork();\n    return chainId;\n  }\n  /**\n   * @internal\n   */\n  async getSignerAddress() {\n    const signer = this.getSigner();\n    if (!signer) {\n      throw new Error(\"This action requires a connected wallet to sign the transaction. Please pass a valid signer to the SDK.\");\n    }\n    return await signer.getAddress();\n  }\n\n  /**\n   * @internal\n   */\n  callStatic() {\n    return this.writeContract.callStatic;\n  }\n\n  /**\n   * @internal\n   */\n  async getCallOverrides() {\n    // If we're running in the browser, let users configure gas price in their wallet UI\n    if (isBrowser()) {\n      return {};\n    }\n    return getDefaultGasOverrides(this.getProvider());\n  }\n\n  /**\n   * @internal\n   */\n  emitTransactionEvent(status, transactionHash) {\n    this.emit(EventType.Transaction, {\n      status,\n      transactionHash\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async multiCall(encoded) {\n    return this.sendTransaction(\"multicall\", [encoded]);\n  }\n\n  /**\n   * @internal\n   */\n  async estimateGas(fn, args) {\n    return this.writeContract.estimateGas[fn](...args);\n  }\n  async populateTransaction(fn, args) {\n    return this.writeContract.populateTransaction[fn](...args);\n  }\n\n  /**\n   * @internal\n   */\n  withTransactionOverride(hook) {\n    this.customOverrides = hook;\n  }\n\n  /**\n   *\n   * @param functionName - The function name on the contract to call\n   * @param args - The arguments to be passed to the functionName\n   * @returns The return value of the function call\n   */\n  async read(functionName, args) {\n    const functions = this.functions.filter(f => f.name === functionName);\n    if (!functions.length) {\n      throw new Error(`Function \"${functionName.toString()}\" not found in contract. Check your dashboard for the list of functions available`);\n    }\n    const fn = functions.find(f => f.name === functionName && f.inputs.length === args.length);\n\n    // TODO extract this and re-use for deploy function to check constructor args\n    if (!fn) {\n      throw new Error(`Function \"${functionName.toString()}\" requires ${functions[0].inputs.length} arguments, but ${args.length} were provided.\\nExpected function signature: ${functions[0].signature}`);\n    }\n    const ethersFnName = `${functionName.toString()}(${fn.inputs.map(i => i.type).join()})`;\n\n    // check if the function exists on the contract, otherwise use the name passed in\n    const fnName = ethersFnName in this.readContract.functions ? ethersFnName : functionName;\n    if (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") {\n      // read function\n      const result = await this.readContract[fnName.toString()](...args);\n      return result;\n    }\n    throw new Error(\"Cannot call a write function with read()\");\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let overrides = arguments.length > 2 ? arguments[2] : undefined;\n    // parse last arg as tx options if present\n    const txOptions = overrides ? await CallOverrideSchema.parseAsync(overrides) : undefined;\n    const functions = extractFunctionsFromAbi(AbiSchema.parse(this.abi)).filter(f => f.name === functionName);\n    if (!functions.length) {\n      throw new Error(`Function \"${functionName}\" not found in contract. Check your dashboard for the list of functions available`);\n    }\n    const fn = functions.find(f => f.name === functionName && f.inputs.length === args.length);\n\n    // TODO extract this and re-use for deploy function to check constructor args\n    if (!fn) {\n      throw new Error(`Function \"${functionName}\" requires ${functions[0].inputs.length} arguments, but ${args.length} were provided.\\nExpected function signature: ${functions[0].signature}`);\n    }\n    const ethersFnName = `${functionName}(${fn.inputs.map(i => i.type).join()})`;\n\n    // check if the function exists on the contract, otherwise use the name passed in\n    const fnName = ethersFnName in this.readContract.functions ? ethersFnName : functionName;\n\n    // TODO validate each argument\n    if (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") {\n      // read function\n      return txOptions ? this.readContract[fnName](...args, txOptions) : this.readContract[fnName](...args);\n    } else {\n      // write function\n      const receipt = await this.sendTransaction(fnName, args, txOptions);\n      return {\n        receipt\n      };\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async sendTransaction(\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  fn, args, callOverrides) {\n    if (!callOverrides) {\n      callOverrides = await this.getCallOverrides();\n    }\n    // if a custom override is set, merge our override with the custom one\n    callOverrides = {\n      ...callOverrides,\n      ...this.customOverrides()\n    };\n    // clear up the override (single use)\n    this.customOverrides = () => ({});\n    if (this.options?.gasless && (\"openzeppelin\" in this.options.gasless || \"biconomy\" in this.options.gasless || \"engine\" in this.options.gasless)) {\n      if (fn === \"multicall\" && Array.isArray(args[0]) && args[0].length > 0) {\n        const from = await this.getSignerAddress();\n        args[0] = args[0].map(tx => utils.solidityPack([\"bytes\", \"address\"], [tx, from]));\n      }\n      const provider = this.getProvider();\n      const txHash = await this.sendGaslessTransaction(fn, args, callOverrides);\n      this.emitTransactionEvent(\"submitted\", txHash);\n      const receipt = await provider.waitForTransaction(txHash);\n      this.emitTransactionEvent(\"completed\", txHash);\n      return receipt;\n    } else {\n      // one time verification that this is a valid contract (to avoid sending funds to wrong addresses)\n      if (!this.isValidContract) {\n        const code = await this.getProvider().getCode(this.address);\n        this.isValidContract = code !== \"0x\";\n        if (!this.isValidContract) {\n          throw new Error(\"The address you're trying to send a transaction to is not a smart contract. Make sure you are on the correct network and the contract address is correct\");\n        }\n      }\n      const tx = await this.sendTransactionByFunction(fn, args, callOverrides);\n      this.emitTransactionEvent(\"submitted\", tx.hash);\n\n      // tx.wait() can fail so we need to wrap it with a catch\n      let receipt;\n      try {\n        receipt = await tx.wait();\n      } catch (err) {\n        try {\n          // If tx.wait() fails, it just gives us a generic \"transaction failed\"\n          // error. So instead, we need to call static to get an informative error message\n          await this.writeContract.callStatic[fn](...args, ...(callOverrides.value ? [{\n            value: callOverrides.value\n          }] : []));\n        } catch (staticErr) {\n          throw await this.formatError(staticErr, fn, args, callOverrides);\n        }\n        throw await this.formatError(err, fn, args, callOverrides);\n      }\n      this.emitTransactionEvent(\"completed\", tx.hash);\n      return receipt;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async sendTransactionByFunction(fn, args, callOverrides) {\n    const func = this.writeContract.functions[fn];\n    if (!func) {\n      throw new Error(`invalid function: \"${fn.toString()}\"`);\n    }\n\n    // First, if no gasLimit is passed, call estimate gas ourselves\n    if (!callOverrides.gasLimit) {\n      try {\n        callOverrides.gasLimit = await this.writeContract.estimateGas[fn](...args, callOverrides);\n      } catch (e) {\n        // If gas estimation fails, we'll call static to get a better error message\n        try {\n          await this.writeContract.callStatic[fn](...args, ...(callOverrides.value ? [{\n            value: callOverrides.value\n          }] : []));\n        } catch (staticErr) {\n          throw await this.formatError(staticErr, fn, args, callOverrides);\n        }\n      }\n    }\n\n    // Now there should be no gas estimate errors\n    try {\n      return await func(...args, callOverrides);\n    } catch (err) {\n      throw await this.formatError(err, fn, args, callOverrides);\n    }\n  }\n  async formatError(error, fn, args, callOverrides) {\n    const provider = this.getProvider();\n\n    // Get metadata for transaction to populate into error\n    const network = await provider.getNetwork();\n    const from = await (callOverrides.from || this.getSignerAddress());\n    const to = this.address;\n    const data = this.readContract.interface.encodeFunctionData(fn, args);\n    const value = BigNumber.from(callOverrides.value || 0);\n    const rpcUrl = provider.connection?.url;\n\n    // Render function signature with arguments filled in\n    const functionSignature = this.readContract.interface.getFunction(fn);\n    const methodArgs = args.map(arg => {\n      if (JSON.stringify(arg).length <= 80) {\n        return JSON.stringify(arg);\n      }\n      return JSON.stringify(arg, undefined, 2);\n    });\n    const joinedArgs = methodArgs.join(\", \").length <= 80 ? methodArgs.join(\", \") : \"\\n\" + methodArgs.map(arg => \"  \" + arg.split(\"\\n\").join(\"\\n  \")).join(\",\\n\") + \"\\n\";\n    const method = `${functionSignature.name}(${joinedArgs})`;\n    const hash = error.transactionHash || error.transaction?.hash || error.receipt?.transactionHash;\n\n    // Parse the revert reason from the error\n    const reason = parseRevertReason(error);\n\n    // Get contract metadata for contract name if cached\n    let contractName = undefined;\n    try {\n      const chainId = (await provider.getNetwork()).chainId;\n      const metadata = getContractMetadataFromCache(this.address, chainId);\n      if (metadata?.name) {\n        contractName = metadata.name;\n      }\n    } catch (err) {\n      // no-op\n    }\n    return new TransactionError({\n      reason,\n      from,\n      to,\n      method,\n      data,\n      network,\n      rpcUrl,\n      value,\n      hash,\n      contractName\n    }, error);\n  }\n\n  /**\n   * @internal\n   */\n  async sendGaslessTransaction(fn) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let callOverrides = arguments.length > 2 ? arguments[2] : undefined;\n    const signer = this.getSigner();\n    invariant(signer, \"Cannot execute gasless transaction without valid signer\");\n    const chainId = await this.getChainID();\n    const from = await this.getSignerAddress();\n    const to = this.writeContract.address;\n    const value = callOverrides?.value || 0;\n    if (BigNumber.from(value).gt(0)) {\n      throw new Error(\"Cannot send native token value with gasless transaction\");\n    }\n    const data = this.writeContract.interface.encodeFunctionData(fn, args);\n    let gas = BigNumber.from(0);\n    try {\n      const gasEstimate = await this.readContract.estimateGas[fn](...args);\n      gas = gasEstimate.mul(2);\n    } catch (e) {\n      // ignore\n    }\n\n    // in some cases WalletConnect doesn't properly gives an estimate for how much gas it would actually use.\n    // as a fix, we're setting it to a high arbitrary number (500k) as the gas limit that should cover for most function calls.\n    if (gas.lt(100000)) {\n      gas = BigNumber.from(500000);\n    }\n\n    // check for gas override in callOverrides\n    if (callOverrides.gasLimit && BigNumber.from(callOverrides.gasLimit).gt(gas)) {\n      gas = BigNumber.from(callOverrides.gasLimit);\n    }\n    const tx = {\n      from,\n      to,\n      data,\n      chainId,\n      gasLimit: gas,\n      functionName: fn.toString(),\n      functionArgs: args,\n      callOverrides\n    };\n    return await this.defaultGaslessSendFunction(tx);\n  }\n  async signTypedData(signer, domain, types, message) {\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\"\n    });\n    const {\n      signature: sig\n    } = await signTypedDataInternal(signer, domain, types, message);\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature: sig\n    });\n    return sig;\n  }\n  parseLogs(eventName, logs) {\n    if (!logs || logs.length === 0) {\n      return [];\n    }\n    const topic = this.writeContract.interface.getEventTopic(eventName);\n    const parsedLogs = logs.filter(x => x.topics.indexOf(topic) >= 0);\n    return parsedLogs.map(l => this.writeContract.interface.parseLog(l));\n  }\n  async defaultGaslessSendFunction(transaction) {\n    if (this.options.gasless && \"biconomy\" in this.options.gasless) {\n      return this.biconomySendFunction(transaction);\n    } else if (this.options.gasless && \"openzeppelin\" in this.options.gasless) {\n      return this.defenderSendFunction(transaction);\n    }\n    return this.engineSendFunction(transaction);\n  }\n  async engineSendFunction(transaction) {\n    invariant(this.options.gasless && \"engine\" in this.options.gasless, \"calling engine gasless transaction without engine config in the SDK options\");\n    const request = await this.enginePrepareRequest(transaction);\n    const res = await fetch(this.options.gasless.engine.relayerUrl, {\n      ...request,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    if (data.error) {\n      throw new Error(data.error?.message || JSON.stringify(data.error));\n    }\n    const queueId = data.result.queueId;\n    const engineUrl = this.options.gasless.engine.relayerUrl.split(\"/relayer/\")[0];\n    const startTime = Date.now();\n    while (true) {\n      const txRes = await fetch(`${engineUrl}/transaction/status/${queueId}`);\n      const txData = await txRes.json();\n      if (txData.result.transactionHash) {\n        return txData.result.transactionHash;\n      }\n\n      // Time out after 30s\n      if (Date.now() - startTime > 30 * 1000) {\n        throw new Error(\"timeout\");\n      }\n\n      // Poll to check if the transaction was mined\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    }\n  }\n  async enginePrepareRequest(transaction) {\n    invariant(this.options.gasless && \"engine\" in this.options.gasless, \"calling engine gasless transaction without openzeppelin config in the SDK options\");\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    const storage = this.storage;\n    invariant(signer, \"signer is not set\");\n    try {\n      const {\n        abi\n      } = await fetchContractMetadataFromAddress(transaction.to, provider, storage);\n      const chainId = (await provider.getNetwork()).chainId;\n      const contract = new ContractWrapper(signer, transaction.to, abi, {}, storage);\n      if (abi.find(item => item.name === \"executeMetaTransaction\")) {\n        const name = await contract.call(\"name\", []);\n        const domain = {\n          name,\n          version: \"1\",\n          salt: \"0x\" + chainId.toString(16).padStart(64, \"0\"),\n          // Use 64 length hex chain id as salt\n          verifyingContract: transaction.to\n        };\n        const types = {\n          MetaTransaction: [{\n            name: \"nonce\",\n            type: \"uint256\"\n          }, {\n            name: \"from\",\n            type: \"address\"\n          }, {\n            name: \"functionSignature\",\n            type: \"bytes\"\n          }]\n        };\n        const nonce = await contract.call(\"getNonce\", [transaction.from]);\n        const message = {\n          nonce: nonce,\n          from: transaction.from,\n          functionSignature: transaction.data\n        };\n        const {\n          signature\n        } = await signTypedDataInternal(signer, domain, types, message);\n        return {\n          method: \"POST\",\n          body: JSON.stringify({\n            type: \"execute-meta-transaction\",\n            request: {\n              from: transaction.from,\n              to: transaction.to,\n              data: transaction.data\n            },\n            signature\n          })\n        };\n      }\n    } catch {\n      // no-op\n    }\n    if (transaction.functionName === \"approve\" && transaction.functionArgs.length === 2) {\n      const spender = transaction.functionArgs[0];\n      const amount = transaction.functionArgs[1];\n      // TODO: support DAI permit by signDAIPermit\n      const {\n        message: permit,\n        signature: sig\n      } = await signEIP2612Permit(signer, transaction.to, transaction.from, spender, amount, this.options.gasless.engine.domainSeparatorVersion);\n      const message = {\n        to: transaction.to,\n        owner: permit.owner,\n        spender: permit.spender,\n        value: BigNumber.from(permit.value).toString(),\n        nonce: BigNumber.from(permit.nonce).toString(),\n        deadline: BigNumber.from(permit.deadline).toString()\n      };\n      return {\n        method: \"POST\",\n        body: JSON.stringify({\n          type: \"permit\",\n          request: message,\n          signature: sig\n        })\n      };\n    } else {\n      const forwarderAddress = this.options.gasless.engine.relayerForwarderAddress || CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarder || (await computeForwarderAddress(provider, storage));\n      const ForwarderABI = (await import('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json')).default;\n      const forwarder = new Contract(forwarderAddress, ForwarderABI, provider);\n      const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from]);\n      let domain;\n      let types;\n      let message;\n      if (this.options.gasless.experimentalChainlessSupport) {\n        domain = {\n          name: \"GSNv2 Forwarder\",\n          version: \"0.0.1\",\n          verifyingContract: forwarderAddress\n        };\n        types = {\n          ForwardRequest: ChainAwareForwardRequest\n        };\n        message = {\n          from: transaction.from,\n          to: transaction.to,\n          value: BigNumber.from(0).toString(),\n          gas: BigNumber.from(transaction.gasLimit).toString(),\n          nonce: BigNumber.from(nonce).toString(),\n          data: transaction.data,\n          chainid: BigNumber.from(transaction.chainId).toString()\n        };\n      } else {\n        domain = {\n          name: this.options.gasless.engine.domainName,\n          version: this.options.gasless.engine.domainVersion,\n          chainId: transaction.chainId,\n          verifyingContract: forwarderAddress\n        };\n        types = {\n          ForwardRequest\n        };\n        message = {\n          from: transaction.from,\n          to: transaction.to,\n          value: BigNumber.from(0).toString(),\n          gas: BigNumber.from(transaction.gasLimit).toString(),\n          nonce: BigNumber.from(nonce).toString(),\n          data: transaction.data\n        };\n      }\n      const {\n        signature: sig\n      } = await signTypedDataInternal(signer, domain, types, message);\n      const signature = sig;\n      return {\n        method: \"POST\",\n        body: JSON.stringify({\n          type: \"forward\",\n          request: message,\n          signature,\n          forwarderAddress\n        })\n      };\n    }\n  }\n  async biconomySendFunction(transaction) {\n    invariant(this.options.gasless && \"biconomy\" in this.options.gasless, \"calling biconomySendFunction without biconomy\");\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer && provider, \"signer and provider must be set\");\n    const forwarder = new Contract(getContractAddressByChainId(transaction.chainId, \"biconomyForwarder\"), BiconomyForwarderAbi, provider);\n    const batchId = 0;\n    const batchNonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from, batchId]);\n    const request = {\n      from: transaction.from,\n      to: transaction.to,\n      token: constants.AddressZero,\n      txGas: transaction.gasLimit.toNumber(),\n      tokenGasPrice: \"0\",\n      batchId,\n      batchNonce: batchNonce.toNumber(),\n      deadline: Math.floor(Date.now() / 1000 + (this.options?.gasless && \"biconomy\" in this.options.gasless && this.options.gasless.biconomy?.deadlineSeconds || 3600)),\n      data: transaction.data\n    };\n    const hashToSign = utils.arrayify(utils.solidityKeccak256([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, utils.keccak256(request.data)]));\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message: hashToSign,\n      signature: \"\"\n    });\n    const signature = await signer.signMessage(hashToSign);\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message: hashToSign,\n      signature\n    });\n    const response = await fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        from: transaction.from,\n        apiId: this.options.gasless.biconomy.apiId,\n        params: [request, signature],\n        to: transaction.to,\n        gasLimit: transaction.gasLimit.toHexString()\n      }),\n      headers: {\n        \"x-api-key\": this.options.gasless.biconomy.apiKey,\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      }\n    });\n    if (response.ok) {\n      const resp = await response.json();\n      if (!resp.txHash) {\n        throw new Error(`relay transaction failed: ${resp.log}`);\n      }\n      return resp.txHash;\n    }\n    throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n  }\n  async defenderSendFunction(transaction) {\n    invariant(this.options.gasless && \"openzeppelin\" in this.options.gasless, \"calling openzeppelin gasless transaction without openzeppelin config in the SDK options\");\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer, \"provider is not set\");\n    invariant(provider, \"provider is not set\");\n    const ForwarderABI = (await import('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json')).default;\n    const forwarderAddress = this.options.gasless.openzeppelin.relayerForwarderAddress || (this.options.gasless.openzeppelin.useEOAForwarder ? CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarderEOA || (await computeEOAForwarderAddress(this.getProvider(), this.storage, \"\", this.options.clientId, this.options.secretKey)) : CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarder || (await computeForwarderAddress(this.getProvider(), this.storage, \"\", this.options.clientId, this.options.secretKey)));\n    const forwarder = new Contract(forwarderAddress, ForwarderABI, provider);\n    const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from]);\n    let domain;\n    let types;\n    let message;\n    if (this.options.gasless.experimentalChainlessSupport) {\n      domain = {\n        name: \"GSNv2 Forwarder\",\n        version: \"0.0.1\",\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest: ChainAwareForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data,\n        chainid: BigNumber.from(transaction.chainId).toString()\n      };\n    } else {\n      domain = {\n        name: this.options.gasless.openzeppelin.domainName,\n        version: this.options.gasless.openzeppelin.domainVersion,\n        chainId: transaction.chainId,\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data\n      };\n    }\n    let signature;\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\"\n    });\n\n    // if the executing function is \"approve\" and matches with erc20 approve signature\n    // and if the token supports permit, then we use permit for gasless instead of approve.\n    if (transaction.functionName === \"approve\" && transaction.functionArgs.length === 2) {\n      const spender = transaction.functionArgs[0];\n      const amount = transaction.functionArgs[1];\n      // TODO: support DAI permit by signDAIPermit\n      const {\n        message: permit,\n        signature: sig\n      } = await signEIP2612Permit(signer, this.writeContract.address, transaction.from, spender, amount, this.options.gasless.openzeppelin.domainSeparatorVersion);\n      const {\n        r,\n        s,\n        v\n      } = utils.splitSignature(sig);\n      message = {\n        to: this.address,\n        owner: permit.owner,\n        spender: permit.spender,\n        value: BigNumber.from(permit.value).toString(),\n        nonce: BigNumber.from(permit.nonce).toString(),\n        deadline: BigNumber.from(permit.deadline).toString(),\n        r,\n        s,\n        v\n      };\n      signature = sig;\n    } else {\n      const {\n        signature: sig\n      } = await signTypedDataInternal(signer, domain, types, message);\n      signature = sig;\n    }\n    let messageType = \"forward\";\n\n    // if has owner property then it's permit :)\n    if (message?.owner) {\n      messageType = \"permit\";\n    }\n    const body = JSON.stringify({\n      request: message,\n      signature,\n      forwarderAddress,\n      type: messageType\n    });\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature\n    });\n    const response = await fetch(this.options.gasless.openzeppelin.relayerUrl, {\n      method: \"POST\",\n      body\n    });\n    if (response.ok) {\n      const resp = await response.json();\n      if (!resp.result) {\n        throw new Error(`Relay transaction failed: ${resp.message}`);\n      }\n      const result = JSON.parse(resp.result);\n      return result.txHash;\n    }\n    throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n  }\n}\n\n/**\n * Checks whether the given ABI supports a given feature\n * @deprecated use isExtensionEnabled instead\n * @param abi - The abi to check\n * @param featureName - The feature name to check\n * @internal\n */\nfunction isFeatureEnabled(abi, featureName, features) {\n  return _featureEnabled(features, featureName);\n}\n\n/**\n * Checks whether the given ABI supports a given extension\n * @public\n * @param abi - The abi to check\n * @param featureName - The feature name to check\n */\nfunction isExtensionEnabled(abi, featureName, features) {\n  return isFeatureEnabled(abi, featureName, features);\n}\n\n/**\n * Searches the feature map for featureName and returns whether its enabled\n * @internal\n * @param features - The feature map to search\n * @param featureName - The feature name to search for\n */\nfunction _featureEnabled(features, featureName) {\n  const keys = Object.keys(features);\n  if (!keys.includes(featureName)) {\n    let found = false;\n    for (const key of keys) {\n      const f = features[key];\n      found = _featureEnabled(f.features, featureName);\n      if (found) {\n        break;\n      }\n    }\n    return found;\n  }\n  const feature = features[featureName];\n  return feature.enabled;\n}\n\n/**\n * @internal\n */\nasync function getPluginABI(addresses, provider, storage) {\n  return (await Promise.all(addresses.map(address => fetchContractMetadataFromAddress(address, provider, storage).catch(err => {\n    console.error(`Failed to fetch plug-in for ${address}`, err);\n    return {\n      abi: []\n    };\n  })))).map(metadata => metadata.abi);\n}\n\n/**\n * @internal\n */\nasync function getCompositeABI(address, abi, provider, options, storage) {\n  let pluginABIs = [];\n  try {\n    // TODO this should not be needed here, should only be done once in getContract()\n    const features = detectFeatures(abi);\n    // check if contract is plugin-pattern / dynamic\n    const isPluginRouter = isExtensionEnabled(abi, \"PluginRouter\", features);\n    const isbaseRouter = isExtensionEnabled(abi, \"DynamicContract\", features);\n    const isModular = isExtensionEnabled(abi, \"ModularCore\", features);\n    // check if the contract has fallback function - we'll further check for diamond pattern if needed\n    const isFallback = isExtensionEnabled(abi, \"Fallback\", features);\n    if (isbaseRouter) {\n      const contract = new ContractWrapper(provider, address, getAllExtensionsAbi, options, storage);\n      const plugins = await contract.call(\"getAllExtensions\");\n\n      // get extension addresses\n      const pluginAddresses = plugins.map(item => item.metadata.implementation);\n\n      // get ABIs of extension contracts --\n      pluginABIs = await getPluginABI(pluginAddresses, provider, storage);\n    } else if (isModular) {\n      const contract = new ContractWrapper(provider, address, coreContractAbi, options, storage);\n      const extensions = await contract.call(\"getInstalledExtensions\");\n\n      // get extension addresses\n      const extensionAddresses = extensions.map(item => item.implementation);\n\n      // get ABIs of extension contracts --\n      pluginABIs = await getPluginABI(extensionAddresses, provider, storage);\n    } else if (isPluginRouter) {\n      const contract = new ContractWrapper(provider, address, getAllPluginsAbi, options, storage);\n      const pluginMap = await contract.call(\"getAllPlugins\");\n\n      // get extension addresses\n      const allPlugins = pluginMap.map(item => item.pluginAddress);\n      const plugins = Array.from(new Set(allPlugins));\n\n      // get ABIs of extension contracts\n      pluginABIs = await getPluginABI(plugins, provider, storage);\n    } else if (isFallback) {\n      // check if diamond pattern\n      const dimaondAbi = [\"function facets() external view returns (tuple(address,bytes4[])[])\"];\n      const contract = new Contract(address, dimaondAbi, provider);\n\n      // get facets\n      const facets = await contract.facets();\n\n      // filter facet addresses\n      const facetAddresses = facets.map(item => item[0]);\n\n      // get ABI of facets\n      pluginABIs = await getPluginABI(facetAddresses, provider, storage);\n    }\n  } catch (err) {}\n  return pluginABIs.length > 0 ? joinABIs([...pluginABIs], abi) : abi;\n}\n\n/**\n *\n * @internal\n */\nconst roleMap = {\n  admin: \"\",\n  transfer: \"TRANSFER_ROLE\",\n  minter: \"MINTER_ROLE\",\n  pauser: \"PAUSER_ROLE\",\n  lister: \"LISTER_ROLE\",\n  asset: \"ASSET_ROLE\",\n  unwrap: \"UNWRAP_ROLE\",\n  factory: \"FACTORY_ROLE\",\n  signer: \"SIGNER_ROLE\",\n  metadata: \"METADATA_ROLE\",\n  revoke: \"REVOKE_ROLE\",\n  migration: \"MIGRATION_ROLE\"\n};\n\n/**\n * @public\n */\n\n/**\n * @public\n */\nconst ALL_ROLES = /* @__PURE__ */(() => Object.keys(roleMap))();\n\n/**\n * @internal\n */\nfunction getRoleHash(role) {\n  if (role === \"admin\") {\n    return utils.hexZeroPad([0], 32);\n  }\n  return utils.id(roleMap[role]);\n}\n\nconst DropErc1155ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc1155ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc1155ContractDeploy = /* @__PURE__ */(() => DropErc1155ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst DropErc1155ContractSchema = {\n  deploy: DropErc1155ContractDeploy,\n  output: DropErc1155ContractOutput,\n  input: DropErc1155ContractInput\n};\n\nconst DropErc20ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc20ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc20ContractDeploy = /* @__PURE__ */(() => DropErc20ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst DropErc20ContractSchema = {\n  deploy: DropErc20ContractDeploy,\n  output: DropErc20ContractOutput,\n  input: DropErc20ContractInput\n};\n\nconst DropErc721ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc721ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema))();\nconst DropErc721ContractDeploy = /* @__PURE__ */(() => DropErc721ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst DropErc721ContractSchema = {\n  deploy: DropErc721ContractDeploy,\n  output: DropErc721ContractOutput,\n  input: DropErc721ContractInput\n};\n\nconst MarketplaceContractInput = CommonContractSchema;\nconst MarketplaceContractOutput = CommonContractOutputSchema;\nconst MarketplaceContractDeploy = /* @__PURE__ */(() => MarketplaceContractInput.merge(CommonPlatformFeeSchema).merge(CommonTrustedForwarderSchema))();\nconst MarketplaceContractSchema = {\n  deploy: MarketplaceContractDeploy,\n  output: MarketplaceContractOutput,\n  input: MarketplaceContractInput\n};\n\nconst MultiwrapContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst MultiwrapContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst MultiwrapContractDeploy = /* @__PURE__ */(() => MultiwrapContractInput.merge(CommonTrustedForwarderSchema))();\nconst MultiwrapContractSchema = {\n  deploy: MultiwrapContractDeploy,\n  output: MultiwrapContractOutput,\n  input: MultiwrapContractInput\n};\n\nconst PackContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst PackContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst PackContractDeploy = /* @__PURE__ */(() => PackContractInput.merge(CommonPlatformFeeSchema).merge(CommonTrustedForwarderSchema))();\nconst PackContractSchema = {\n  deploy: PackContractDeploy,\n  output: PackContractOutput,\n  input: PackContractInput\n};\n\nconst SplitRecipientInputSchema = /* @__PURE__ */(() => z.object({\n  address: AddressOrEnsSchema,\n  sharesBps: BasisPointsSchema.gt(0, \"Shares must be greater than 0\")\n}))();\nconst SplitRecipientOuputSchema = /* @__PURE__ */(() => SplitRecipientInputSchema.extend({\n  address: AddressOrEnsSchema,\n  sharesBps: BasisPointsSchema\n}))();\nconst SplitsContractInput = /* @__PURE__ */(() => CommonContractSchema.extend({\n  recipients: z.array(SplitRecipientInputSchema).default([]).superRefine((val, context) => {\n    const addressMap = {};\n    let totalShares = 0;\n    for (let index = 0; index < val.length; index++) {\n      const entry = val[index];\n      if (addressMap[entry.address]) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Duplicate address.`,\n          path: [index, `address`]\n        });\n      }\n      addressMap[entry.address] = true;\n      totalShares += entry.sharesBps;\n      if (totalShares > 10000) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Total shares cannot go over 100%.`,\n          path: [index, `sharesBps`]\n        });\n      }\n    }\n    if (totalShares !== 10000) {\n      context.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Total shares need to add up to 100%. Total shares are currently ${totalShares / 100}%`,\n        path: []\n      });\n    }\n  })\n}))();\nconst SplitsContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.extend({\n  recipients: z.array(SplitRecipientOuputSchema)\n}))();\nconst SplitsContractDeploy = /* @__PURE__ */(() => SplitsContractInput.merge(SplitsContractInput).merge(CommonTrustedForwarderSchema))();\nconst SplitsContractSchema = {\n  deploy: SplitsContractDeploy,\n  output: SplitsContractOutput,\n  input: SplitsContractInput\n};\n\nconst TokenErc1155ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst TokenErc1155ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst TokenErc1155ContractDeploy = /* @__PURE__ */(() => TokenErc1155ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst TokenErc1155ContractSchema = {\n  deploy: TokenErc1155ContractDeploy,\n  output: TokenErc1155ContractOutput,\n  input: TokenErc1155ContractInput\n};\n\nconst TokenErc20ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonSymbolSchema))();\nconst TokenErc20ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonSymbolSchema))();\nconst TokenErc20ContractDeploy = /* @__PURE__ */(() => TokenErc20ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst TokenErc20ContractSchema = {\n  deploy: TokenErc20ContractDeploy,\n  output: TokenErc20ContractOutput,\n  input: TokenErc20ContractInput\n};\n\nconst TokenErc721ContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst TokenErc721ContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst TokenErc721ContractDeploy = /* @__PURE__ */(() => TokenErc721ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\nconst TokenErc721ContractSchema = {\n  deploy: TokenErc721ContractDeploy,\n  output: TokenErc721ContractOutput,\n  input: TokenErc721ContractInput\n};\n\nconst VoteSettingsInputSchema = /* @__PURE__ */(() => z.object({\n  voting_delay_in_blocks: z.number().min(0).default(0),\n  voting_period_in_blocks: z.number().min(1).default(1),\n  voting_token_address: AddressOrEnsSchema,\n  voting_quorum_fraction: PercentSchema.default(0),\n  proposal_token_threshold: BigNumberishSchema.default(1)\n}))();\nconst VoteSettingsOuputSchema = /* @__PURE__ */(() => VoteSettingsInputSchema.extend({\n  proposal_token_threshold: BigNumberSchema\n}))();\nconst VoteContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(VoteSettingsInputSchema))();\nconst VoteContractOutput = /* @__PURE__ */(() => CommonContractOutputSchema.merge(VoteSettingsOuputSchema))();\nconst VoteContractDeploy = /* @__PURE__ */(() => VoteContractInput.merge(CommonTrustedForwarderSchema))();\nconst VoteContractSchema = {\n  deploy: VoteContractDeploy,\n  output: VoteContractOutput,\n  input: VoteContractInput\n};\nconst ProposalOutputSchema = /* @__PURE__ */(() => z.object({\n  proposalId: BigNumberSchema,\n  proposer: z.string(),\n  targets: z.array(z.string()),\n  values: z.array(BigNumberSchema),\n  signatures: z.array(z.string()),\n  calldatas: z.array(z.string()),\n  startBlock: BigNumberSchema,\n  endBlock: BigNumberSchema,\n  description: z.string()\n}))();\n\nconst ADMIN_ROLE = [\"admin\"];\nconst NFT_BASE_CONTRACT_ROLES = [\"admin\", \"minter\", \"transfer\", \"metadata\"];\nconst MARKETPLACE_CONTRACT_ROLES = [\"admin\", \"lister\", \"asset\"];\nconst PACK_CONTRACT_ROLES = [\"admin\", \"minter\", \"asset\", \"transfer\"];\nconst TOKEN_DROP_CONTRACT_ROLES = [\"admin\", \"transfer\"];\nconst MULTIWRAP_CONTRACT_ROLES = [\"admin\", \"transfer\", \"minter\", \"unwrap\", \"asset\"];\n\nconst prebuiltContractTypes = {\n  vote: \"vote\",\n  token: \"token\",\n  \"edition-drop\": \"edition-drop\",\n  edition: \"edition\",\n  marketplace: \"marketplace\",\n  \"marketplace-v3\": \"marketplace-v3\",\n  multiwrap: \"multiwrap\",\n  \"nft-collection\": \"nft-collection\",\n  \"nft-drop\": \"nft-drop\",\n  pack: \"pack\",\n  \"signature-drop\": \"signature-drop\",\n  split: \"split\",\n  \"token-drop\": \"token-drop\"\n};\n/**\n * @internal\n */\nconst EditionDropInitializer = {\n  name: \"DropERC1155\",\n  contractType: prebuiltContractTypes[\"edition-drop\"],\n  schema: DropErc1155ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    let [network, address, storage, options] = _ref;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([EditionDropInitializer.getAbi(address, provider, storage), import('./edition-drop-2eec5001.esm.js'), provider.getNetwork()]);\n    return new contract.EditionDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 2 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC1155.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC1155_V2.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst EditionInitializer = {\n  name: \"TokenERC1155\",\n  contractType: prebuiltContractTypes[\"edition\"],\n  schema: TokenErc1155ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    let [network, address, storage, options] = _ref2;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([EditionInitializer.getAbi(address, provider, storage), import('./edition-6f56b3d4.esm.js'), provider.getNetwork()]);\n    return new contract.Edition(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC1155.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst MarketplaceInitializer = {\n  name: \"Marketplace\",\n  contractType: prebuiltContractTypes.marketplace,\n  schema: MarketplaceContractSchema,\n  roles: MARKETPLACE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len3 = arguments.length, _ref3 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      _ref3[_key3] = arguments[_key3];\n    }\n    let [network, address, storage, options] = _ref3;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([MarketplaceInitializer.getAbi(address, provider, storage), import('./marketplace-2d2ceb00.esm.js'), provider.getNetwork()]);\n    return new contract.Marketplace(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Marketplace.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst MarketplaceV3Initializer = {\n  name: \"MarketplaceV3\",\n  contractType: prebuiltContractTypes[\"marketplace-v3\"],\n  schema: MarketplaceContractSchema,\n  roles: MARKETPLACE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len4 = arguments.length, _ref4 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      _ref4[_key4] = arguments[_key4];\n    }\n    let [network, address, storage, options] = _ref4;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([MarketplaceV3Initializer.getAbi(address, provider, storage, options), import('./marketplacev3-3aaa1ef5.esm.js'), provider.getNetwork()]);\n    return new contract.MarketplaceV3(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage, options) => {\n    const chainId = (await provider.getNetwork()).chainId;\n    const isZkSync = chainId === 280 || chainId === 300 || chainId === 324 || chainId === 302;\n\n    // Can't resolve IPFS hash from plugin bytecode on ZkSync\n    // Thus, pull the composite ABI from the release page\n    if (isZkSync) {\n      const publishedContract = await fetchPublishedContractFromPolygon(THIRDWEB_DEPLOYER, \"MarketplaceV3\", \"latest\", storage, options?.clientId, options?.secretKey);\n      const uri = publishedContract.metadataUri;\n      const compositeAbi = await getCompositeABIfromRelease(uri, storage);\n      return compositeAbi;\n    }\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return await getCompositeABI(address, abi, provider, {}, storage);\n    }\n\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    const localAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/MarketplaceV3.json')).default;\n    return await getCompositeABI(address, AbiSchema.parse(localAbi || []), provider, {}, storage);\n  }\n};\n\n/**\n * @internal\n */\nconst MultiwrapInitializer = {\n  name: \"Multiwrap\",\n  contractType: prebuiltContractTypes.multiwrap,\n  schema: MultiwrapContractSchema,\n  roles: MULTIWRAP_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len5 = arguments.length, _ref5 = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      _ref5[_key5] = arguments[_key5];\n    }\n    let [network, address, storage, options] = _ref5;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([MultiwrapInitializer.getAbi(address, provider, storage), import('./multiwrap-6535f097.esm.js'), provider.getNetwork()]);\n    return new contract.Multiwrap(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Multiwrap.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst NFTCollectionInitializer = {\n  name: \"TokenERC721\",\n  contractType: prebuiltContractTypes[\"nft-collection\"],\n  schema: TokenErc721ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len6 = arguments.length, _ref6 = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      _ref6[_key6] = arguments[_key6];\n    }\n    let [network, address, storage, options] = _ref6;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([NFTCollectionInitializer.getAbi(address, provider, storage), import('./nft-collection-409ca07f.esm.js'), provider.getNetwork()]);\n    return new contract.NFTCollection(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC721.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst NFTDropInitializer = {\n  name: \"DropERC721\",\n  contractType: prebuiltContractTypes[\"nft-drop\"],\n  schema: DropErc721ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len7 = arguments.length, _ref7 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      _ref7[_key7] = arguments[_key7];\n    }\n    let [network, address, storage, options] = _ref7;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([NFTDropInitializer.getAbi(address, provider, storage), import('./nft-drop-44b7e054.esm.js'), provider.getNetwork()]);\n    return new contract.NFTDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 3 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC721.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC721_V3.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst PackInitializer = {\n  name: \"Pack\",\n  contractType: prebuiltContractTypes[\"pack\"],\n  schema: PackContractSchema,\n  roles: PACK_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len8 = arguments.length, _ref8 = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      _ref8[_key8] = arguments[_key8];\n    }\n    let [network, address, storage, options] = _ref8;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([PackInitializer.getAbi(address, provider, storage), import('./pack-7b880b67.esm.js'), provider.getNetwork()]);\n    return new contract.Pack(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return AbiSchema.parse((await import('@thirdweb-dev/contracts-js/dist/abis/Pack.json')).default || []);\n  }\n};\n\n/**\n * @internal\n */\nconst SignatureDropInitializer = {\n  name: \"SignatureDrop\",\n  contractType: prebuiltContractTypes[\"signature-drop\"],\n  schema: DropErc721ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len9 = arguments.length, _ref9 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      _ref9[_key9] = arguments[_key9];\n    }\n    let [network, address, storage, options] = _ref9;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([SignatureDropInitializer.getAbi(address, provider, storage), import('./signature-drop-91e51396.esm.js'), provider.getNetwork()]);\n    return new contract.SignatureDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 4 ? (await import('@thirdweb-dev/contracts-js/dist/abis/SignatureDrop.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/SignatureDrop_V4.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst SplitInitializer = {\n  name: \"Split\",\n  contractType: prebuiltContractTypes[\"split\"],\n  schema: SplitsContractSchema,\n  roles: ADMIN_ROLE,\n  initialize: async function () {\n    for (var _len10 = arguments.length, _ref10 = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      _ref10[_key10] = arguments[_key10];\n    }\n    let [network, address, storage, options] = _ref10;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([SplitInitializer.getAbi(address, provider, storage), import('./split-7655424a.esm.js'), provider.getNetwork()]);\n    return new contract.Split(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Split.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst TokenDropInitializer = {\n  name: \"DropERC20\",\n  contractType: prebuiltContractTypes[\"token-drop\"],\n  schema: DropErc20ContractSchema,\n  roles: TOKEN_DROP_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len11 = arguments.length, _ref11 = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      _ref11[_key11] = arguments[_key11];\n    }\n    let [network, address, storage, options] = _ref11;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([TokenDropInitializer.getAbi(address, provider, storage), import('./token-drop-ce773657.esm.js'), provider.getNetwork()]);\n    return new contract.TokenDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 2 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC20.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC20_V2.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst TokenInitializer = {\n  name: \"TokenERC20\",\n  contractType: prebuiltContractTypes.token,\n  schema: TokenErc20ContractSchema,\n  roles: NFT_BASE_CONTRACT_ROLES,\n  initialize: async function () {\n    for (var _len12 = arguments.length, _ref12 = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      _ref12[_key12] = arguments[_key12];\n    }\n    let [network, address, storage, options] = _ref12;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([TokenInitializer.getAbi(address, provider, storage), import('./token-bf92c2bc.esm.js'), provider.getNetwork()]);\n    return new contract.Token(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC20.json')).default;\n  }\n};\n\n/**\n * @internal\n */\nconst VoteInitializer = {\n  name: \"VoteERC20\",\n  contractType: prebuiltContractTypes.vote,\n  schema: VoteContractSchema,\n  roles: [],\n  initialize: async function () {\n    for (var _len13 = arguments.length, _ref13 = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n      _ref13[_key13] = arguments[_key13];\n    }\n    let [network, address, storage, options] = _ref13;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([VoteInitializer.getAbi(address, provider, storage), import('./vote-a6a06847.esm.js'), provider.getNetwork()]);\n    return new contract.Vote(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider, storage) => {\n    const abi = await fetchAbiFromAddress(address, provider, storage);\n    if (abi) {\n      return abi;\n    }\n    // Deprecated - only needed for backwards compatibility with non-published contracts - should remove in v4\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/VoteERC20.json')).default;\n  }\n};\nasync function getContractInfo(address, provider) {\n  try {\n    return await getPrebuiltInfo(address, provider);\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * a map from contractType - contract metadata\n * @internal\n */\nconst PREBUILT_CONTRACTS_MAP = {\n  [prebuiltContractTypes[\"edition-drop\"]]: EditionDropInitializer,\n  [prebuiltContractTypes.edition]: EditionInitializer,\n  [prebuiltContractTypes.marketplace]: MarketplaceInitializer,\n  [prebuiltContractTypes[\"marketplace-v3\"]]: MarketplaceV3Initializer,\n  [prebuiltContractTypes.multiwrap]: MultiwrapInitializer,\n  [prebuiltContractTypes[\"nft-collection\"]]: NFTCollectionInitializer,\n  [prebuiltContractTypes[\"nft-drop\"]]: NFTDropInitializer,\n  [prebuiltContractTypes.pack]: PackInitializer,\n  [prebuiltContractTypes[\"signature-drop\"]]: SignatureDropInitializer,\n  [prebuiltContractTypes.split]: SplitInitializer,\n  [prebuiltContractTypes[\"token-drop\"]]: TokenDropInitializer,\n  [prebuiltContractTypes.token]: TokenInitializer,\n  [prebuiltContractTypes.vote]: VoteInitializer\n};\n\n/**\n * @internal\n */\nconst PREBUILT_CONTRACTS_APPURI_MAP = {\n  [prebuiltContractTypes[\"edition-drop\"]]: \"ipfs://QmNm3wRzpKYWo1SRtJfgfxtvudp5p2nXD6EttcsQJHwTmk\",\n  [prebuiltContractTypes.edition]: \"\",\n  [prebuiltContractTypes.marketplace]: \"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/marketplace.html\",\n  [prebuiltContractTypes[\"marketplace-v3\"]]: \"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/marketplace-v3.html\",\n  [prebuiltContractTypes.multiwrap]: \"\",\n  [prebuiltContractTypes[\"nft-collection\"]]: \"\",\n  [prebuiltContractTypes[\"nft-drop\"]]: \"ipfs://QmZptmVipc6SGFbKAyXcxGgohzTwYRXZ9LauRX5ite1xDK\",\n  [prebuiltContractTypes.pack]: \"\",\n  [prebuiltContractTypes[\"signature-drop\"]]: \"ipfs://QmZptmVipc6SGFbKAyXcxGgohzTwYRXZ9LauRX5ite1xDK\",\n  [prebuiltContractTypes.split]: \"\",\n  [prebuiltContractTypes[\"token-drop\"]]: \"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/erc20.html\",\n  [prebuiltContractTypes.token]: \"\",\n  [prebuiltContractTypes.vote]: \"\"\n};\nconst SmartContract = {\n  name: \"SmartContract\",\n  contractType: \"custom\",\n  schema: {},\n  roles: ALL_ROLES\n};\n\n/**\n * @internal\n */\nconst CONTRACTS_MAP = {\n  ...PREBUILT_CONTRACTS_MAP,\n  [SmartContract.contractType]: SmartContract\n};\n\n/**\n * @internal\n */\nfunction getContractTypeForRemoteName(name) {\n  return Object.values(CONTRACTS_MAP).find(contract => contract.name === name)?.contractType || \"custom\";\n}\n\n/**\n * @internal\n */\nfunction getContractName(type) {\n  return Object.values(CONTRACTS_MAP).find(contract => contract.contractType === type)?.name;\n}\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\nexport { estimateTransactionCost as $, AssetNotFoundError as A, includesErrorMessage as B, CONTRACTS_MAP as C, DuplicateFileNameError as D, EditionDropInitializer as E, FileNameMissingError as F, ALL_ROLES as G, getRoleHash as H, InvalidAddressError as I, getContractMetadataFromCache as J, fetchContractMetadataFromAddress as K, ListingNotFoundError as L, MarketplaceInitializer as M, NFTCollectionInitializer as N, fetchContractMetadataFromBytecode as O, PackInitializer as P, QuantityAboveLimitError as Q, RestrictedTransferError as R, StaticJsonRpcBatchProvider as S, TokenDropInitializer as T, UploadError as U, VoteInitializer as V, WrongListingTypeError as W, fetchAbiFromAddress as X, getDefaultGasOverrides as Y, getDynamicFeeData as Z, getGasPrice as _, EditionInitializer as a, NATIVE_TOKENS as a$, getPolygonGasPriorityFee as a0, fetchContractMetadata as a1, formatCompilerMetadata as a2, hasMatchingAbi as a3, matchesAbiFromBytecode as a4, extractCommentFromMetadata as a5, extractConstructorParamsFromAbi as a6, extractFunctionsFromAbi as a7, extractMinimalProxyImplementationAddress as a8, resolveContractUriFromAddress as a9, isEIP155Enforced as aA, getCreate2FactoryAddress as aB, computeCreate2FactoryTransaction as aC, getSaltHash as aD, getInitBytecodeWithSalt as aE, computeDeploymentAddress as aF, computeEOAForwarderAddress as aG, computeForwarderAddress as aH, getKeylessTxn as aI, computeDeploymentInfo as aJ, encodeConstructorParamsForImplementation as aK, getCreate2FactoryDeploymentInfo as aL, THIRDWEB_DEPLOYER as aM, fetchPublishedContractFromPolygon as aN, fetchAndCacheDeployMetadata as aO, resolveEns as aP, resolveAddress as aQ, signTypedDataInternal as aR, OZ_DEFENDER_FORWARDER_ADDRESS as aS, CONTRACT_ADDRESSES as aT, getContractAddressByChainId as aU, getContractPublisherAddress as aV, getMultichainRegistryAddress as aW, ChainId as aX, setSupportedChains as aY, getSupportedChains as aZ, NATIVE_TOKEN_ADDRESS as a_, resolveContractUriAndBytecode as aa, resolveImplementation as ab, extractIPFSHashFromBytecode as ac, fetchRawPredeployMetadata as ad, fetchPreDeployMetadata as ae, fetchExtendedReleaseMetadata as af, detectFeatures as ag, detectFeaturesFromBytecode as ah, getAllDetectedFeatures as ai, getAllDetectedExtensionsFromBytecode as aj, constructAbiFromBytecode as ak, getAllDetectedExtensions as al, isFeatureEnabled as am, isExtensionEnabled as an, joinABIs as ao, getCompositeABI as ap, toSemver as aq, isIncrementalVersion as ar, isDowngradeVersion as as, CREATE2_FACTORY_BYTECODE as at, SIGNATURE as au, COMMON_FACTORY as av, GAS_LIMIT_FOR_DEPLOYER as aw, DEPLOYER_BYTECODE as ax, DEPLOYER_ABI as ay, isContractDeployed as az, MarketplaceV3Initializer as b, DropErc1155ContractDeploy as b$, getNativeTokenByChainId as b0, LINK_TOKEN_ADDRESS as b1, EventType as b2, getChainProvider as b3, getChainIdFromNetwork as b4, getChainIdOrName as b5, isChainConfig as b6, getProviderFromRpcUrl as b7, getSignerAndProvider as b8, SUPPORTED_FEATURES as b9, FullPublishMetadataSchemaInput as bA, FullPublishMetadataSchemaOutput as bB, ProfileSchemaInput as bC, ProfileSchemaOutput as bD, PublishedContractSchema as bE, ContractInfoSchema as bF, CompilerMetadataFetchedSchema as bG, PreDeployMetadataFetchedSchema as bH, CommonContractSchema as bI, CommonContractOutputSchema as bJ, CommonRoyaltySchema as bK, CommonPrimarySaleSchema as bL, CommonPlatformFeeSchema as bM, CommonTrustedForwarderSchema as bN, CommonSymbolSchema as bO, MerkleSchema as bP, SnapshotEntryInput as bQ, SnapshotInputSchema as bR, SnapshotEntryWithProofSchema as bS, SnapshotSchema as bT, SnapshotInfoSchema as bU, DropErc721ContractInput as bV, DropErc721ContractOutput as bW, DropErc721ContractDeploy as bX, DropErc721ContractSchema as bY, DropErc1155ContractInput as bZ, DropErc1155ContractOutput as b_, BigNumberSchema as ba, BigNumberishSchema as bb, BigNumberTransformSchema as bc, AddressSchema as bd, AddressOrEnsSchema as be, CallOverrideSchema as bf, SDKOptionsSchema as bg, BYOCContractMetadataSchema as bh, CustomContractInput as bi, CustomContractOutput as bj, CustomContractDeploy as bk, CustomContractSchema as bl, AbiTypeSchema as bm, AbiObjectSchema as bn, AbiSchema as bo, CompilerTypeInput as bp, PreDeployMetadata as bq, ChainIdToAddressSchema as br, CustomFactoryInput as bs, ModularFactoryInput as bt, FactoryDeploymentSchema as bu, DeployTypeInput as bv, RouterTypeInput as bw, DeploymentNetworkInput as bx, ExtraPublishMetadataSchemaInput as by, ExtraPublishMetadataSchemaOutput as bz, MultiwrapInitializer as c, FEATURE_NFT_ENUMERABLE as c$, DropErc1155ContractSchema as c0, MarketplaceContractInput as c1, MarketplaceContractOutput as c2, MarketplaceContractDeploy as c3, MarketplaceContractSchema as c4, PackContractInput as c5, PackContractOutput as c6, PackContractDeploy as c7, PackContractSchema as c8, SplitsContractInput as c9, getProcessEnv as cA, AmountSchema as cB, BigNumberTransformSchema$1 as cC, FileOrBufferOrStringSchema as cD, HexColor as cE, QuantitySchema as cF, BytesLikeSchema as cG, BasisPointsSchema as cH, FEATURE_TOKEN_BURNABLE as cI, FEATURE_TOKEN_CLAIM_CONDITIONS_V2 as cJ, FEATURE_TOKEN_BATCH_MINTABLE as cK, FEATURE_TOKEN_MINTABLE as cL, FEATURE_TOKEN_SIGNATURE_MINTABLE as cM, FEATURE_TOKEN as cN, FEATURE_METADATA as cO, FEATURE_APPURI as cP, FEATURE_NFT_BURNABLE as cQ, FEATURE_NFT_CLAIM_CONDITIONS_V2 as cR, FEATURE_NFT_CLAIM_ZORA as cS, FEATURE_NFT_CLAIM_CUSTOM as cT, FEATURE_NFT_LAZY_MINTABLE as cU, FEATURE_NFT_REVEALABLE as cV, FEATURE_NFT_LOYALTY_CARD as cW, FEATURE_NFT_UPDATABLE_METADATA as cX, FEATURE_NFT_BATCH_MINTABLE as cY, FEATURE_NFT_MINTABLE as cZ, FEATURE_NFT_SHARED_METADATA as c_, SplitsContractOutput as ca, SplitsContractDeploy as cb, SplitsContractSchema as cc, TokenErc20ContractInput as cd, TokenErc20ContractOutput as ce, TokenErc20ContractDeploy as cf, TokenErc20ContractSchema as cg, TokenErc721ContractInput as ch, TokenErc721ContractOutput as ci, TokenErc721ContractDeploy as cj, TokenErc721ContractSchema as ck, TokenErc1155ContractInput as cl, TokenErc1155ContractOutput as cm, TokenErc1155ContractDeploy as cn, TokenErc1155ContractSchema as co, VoteSettingsInputSchema as cp, VoteSettingsOuputSchema as cq, VoteContractInput as cr, VoteContractOutput as cs, VoteContractDeploy as ct, VoteContractSchema as cu, ProposalOutputSchema as cv, RPCConnectionHandler as cw, ContractWrapper as cx, extractFeatures as cy, AddressZero as cz, NFTDropInitializer as d, FEATURE_NFT_QUERYABLE as d0, FEATURE_NFT_SUPPLY as d1, FEATURE_NFT_TIERED_DROP as d2, FEATURE_NFT_SIGNATURE_MINTABLE_V2 as d3, FEATURE_NFT as d4, coreContractAbi as d5, extensionContractAbi as d6, hasDuplicates as d7, createLruCache as d8, FEATURE_PERMISSIONS as d9, signEIP2612Permit as dA, getAndIncrementNonce as dB, ChainAwareForwardRequest as dC, ForwardRequest as dD, BiconomyForwarderAbi as dE, FEATURE_DIRECT_LISTINGS as dF, FEATURE_ENGLISH_AUCTIONS as dG, FEATURE_OFFERS as dH, caches as dI, MAX_BPS as dJ, getRoyaltyEngineV1ByChainId as dK, NFT_BASE_CONTRACT_ROLES as dL, MARKETPLACE_CONTRACT_ROLES as dM, MULTIWRAP_CONTRACT_ROLES as dN, MultiwrapContractSchema as dO, FEATURE_PACK_VRF as dP, PACK_CONTRACT_ROLES as dQ, ADMIN_ROLE as dR, TOKEN_DROP_CONTRACT_ROLES as dS, DropErc20ContractSchema as dT, FEATURE_ROYALTY as da, FEATURE_OWNER as db, FEATURE_PRIMARY_SALE as dc, isNode as dd, FEATURE_EDITION_CLAIM_CUSTOM as de, FEATURE_EDITION_CLAIM_CONDITIONS_V2 as df, FEATURE_EDITION_SIGNATURE_MINTABLE as dg, getPrebuiltInfo as dh, FEATURE_EDITION_BURNABLE as di, FEATURE_EDITION_ENUMERABLE as dj, FEATURE_EDITION_LAZY_MINTABLE_V2 as dk, FEATURE_EDITION_REVEALABLE as dl, FEATURE_EDITION_BATCH_MINTABLE as dm, FEATURE_EDITION_MINTABLE as dn, FEATURE_EDITION as dp, FEATURE_EDITION_SUPPLY as dq, FEATURE_EDITION_UPDATABLE_METADATA as dr, FEATURE_ACCOUNT_PERMISSIONS as ds, FEATURE_ACCOUNT as dt, FEATURE_ACCOUNT_FACTORY as du, FEATURE_DYNAMIC_CONTRACT as dv, FEATURE_AIRDROP_ERC20 as dw, FEATURE_AIRDROP_ERC721 as dx, FEATURE_AIRDROP_ERC1155 as dy, FEATURE_PLATFORM_FEE as dz, SignatureDropInitializer as e, SplitInitializer as f, TokenInitializer as g, PREBUILT_CONTRACTS_MAP as h, PREBUILT_CONTRACTS_APPURI_MAP as i, getContractTypeForRemoteName as j, getContractName as k, isProvider as l, isSigner as m, NotFoundError as n, MissingRoleError as o, NotEnoughTokensError as p, MissingOwnerRoleError as q, FetchError as r, DuplicateLeafsError as s, AuctionAlreadyStartedError as t, FunctionDeprecatedError as u, AdminRoleMissingError as v, AuctionHasNotEndedError as w, ExtensionNotImplementedError as x, TransactionError as y, parseRevertReason as z };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9168, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/fetchSourceFilesFromMetadata-f1d39e93.esm.js"],"sourcesContent":["/**\n * @internal\n * @param publishedMetadata - The published metadata to fetch the sources for\n * @param storage - The storage to use\n */\n\nasync function fetchSourceFilesFromMetadata(publishedMetadata, storage) {\n  return await Promise.all(Object.entries(publishedMetadata.metadata.sources).map(async _ref => {\n    let [path, info] = _ref;\n    const urls = info.urls;\n    const ipfsLink = urls ? urls.find(url => url.includes(\"ipfs\")) : undefined;\n    if (ipfsLink) {\n      const ipfsHash = ipfsLink.split(\"ipfs/\")[1];\n      // 3 sec timeout for sources that haven't been uploaded to ipfs\n      const timeout = new Promise((_r, rej) => setTimeout(() => rej(\"timeout\"), 3000));\n      const source = await Promise.race([(await storage.download(`ipfs://${ipfsHash}`)).text(), timeout]);\n      return {\n        filename: path,\n        source\n      };\n    } else {\n      return {\n        filename: path,\n        source: info.content || \"Could not find source for this contract\"\n      };\n    }\n  }));\n}\n\nexport { fetchSourceFilesFromMetadata as f };\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED,eAAe,6BAA6B,iBAAiB,EAAE,OAAO;IACpE,OAAO,MAAM,QAAQ,GAAG,CAAC,OAAO,OAAO,CAAC,kBAAkB,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,OAAM;QACpF,IAAI,CAAC,MAAM,KAAK,GAAG;QACnB,MAAM,OAAO,KAAK,IAAI;QACtB,MAAM,WAAW,OAAO,KAAK,IAAI,CAAC,CAAA,MAAO,IAAI,QAAQ,CAAC,WAAW;QACjE,IAAI,UAAU;YACZ,MAAM,WAAW,SAAS,KAAK,CAAC,QAAQ,CAAC,EAAE;YAC3C,+DAA+D;YAC/D,MAAM,UAAU,IAAI,QAAQ,CAAC,IAAI,MAAQ,WAAW,IAAM,IAAI,YAAY;YAC1E,MAAM,SAAS,MAAM,QAAQ,IAAI,CAAC;gBAAC,CAAC,MAAM,QAAQ,QAAQ,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,IAAI;gBAAI;aAAQ;YAClG,OAAO;gBACL,UAAU;gBACV;YACF;QACF,OAAO;YACL,OAAO;gBACL,UAAU;gBACV,QAAQ,KAAK,OAAO,IAAI;YAC1B;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/transactions-89262635.esm.js"],"sourcesContent":["import { K as fetchContractMetadataFromAddress, $ as estimateTransactionCost, z as parseRevertReason, J as getContractMetadataFromCache, y as TransactionError, ap as getCompositeABI, cx as ContractWrapper, aR as signTypedDataInternal, dA as signEIP2612Permit, aT as CONTRACT_ADDRESSES, aH as computeForwarderAddress, dB as getAndIncrementNonce, dC as ChainAwareForwardRequest, dD as ForwardRequest, aG as computeEOAForwarderAddress, aU as getContractAddressByChainId, dE as BiconomyForwarderAbi, _ as getGasPrice, Y as getDefaultGasOverrides } from './index-6d283666.esm.js';\nimport { isBrowser } from '@thirdweb-dev/storage';\nimport { Contract, BigNumber, utils, constants } from 'ethers';\nimport invariant from 'tiny-invariant';\n\nfunction buildDeployTransactionFunction(fn) {\n  async function executeFn() {\n    const tx = await fn(...arguments);\n    return tx.execute();\n  }\n  executeFn.prepare = fn;\n  return executeFn;\n}\nfunction buildTransactionFunction(fn) {\n  async function executeFn() {\n    const tx = await fn(...arguments);\n    return tx.execute();\n  }\n  executeFn.prepare = fn;\n  return executeFn;\n}\n\nclass TransactionContext {\n  constructor(options) {\n    this.args = options.args;\n    this.overrides = options.overrides || {};\n    this.provider = options.provider;\n    this.signer = options.signer;\n    this.storage = options.storage;\n\n    // Connect provider to signer if it isn't already connected\n    if (!this.signer.provider) {\n      this.signer = this.signer.connect(this.provider);\n    }\n  }\n  get getSigner() {\n    return this.signer;\n  }\n  get getProvider() {\n    return this.provider;\n  }\n  get getStorage() {\n    return this.storage;\n  }\n  getArgs() {\n    return this.args;\n  }\n  getOverrides() {\n    return this.overrides;\n  }\n  getValue() {\n    return this.overrides.value || 0;\n  }\n  setArgs(args) {\n    this.args = args;\n    return this;\n  }\n  setOverrides(overrides) {\n    this.overrides = overrides;\n    return this;\n  }\n  updateOverrides(overrides) {\n    this.overrides = {\n      ...this.overrides,\n      ...overrides\n    };\n    return this;\n  }\n  setValue(value) {\n    this.updateOverrides({\n      value\n    });\n    return this;\n  }\n  setGasLimit(gasLimit) {\n    this.updateOverrides({\n      gasLimit\n    });\n    return this;\n  }\n  setGasPrice(gasPrice) {\n    this.updateOverrides({\n      gasPrice\n    });\n    return this;\n  }\n  setNonce(nonce) {\n    this.updateOverrides({\n      nonce\n    });\n    return this;\n  }\n  setMaxFeePerGas(maxFeePerGas) {\n    this.updateOverrides({\n      maxFeePerGas\n    });\n    return this;\n  }\n  setMaxPriorityFeePerGas(maxPriorityFeePerGas) {\n    this.updateOverrides({\n      maxPriorityFeePerGas\n    });\n    return this;\n  }\n  setType(type) {\n    this.updateOverrides({\n      type\n    });\n    return this;\n  }\n  setAccessList(accessList) {\n    this.updateOverrides({\n      accessList\n    });\n    return this;\n  }\n  setCustomData(customData) {\n    this.updateOverrides({\n      customData\n    });\n    return this;\n  }\n  setCcipReadEnabled(ccipReadEnabled) {\n    this.updateOverrides({\n      ccipReadEnabled\n    });\n    return this;\n  }\n  /**\n   * Set a multiple to multiply the gas limit by\n   *\n   * @example\n   * ```js\n   * // Set the gas limit multiple to 1.2 (increase by 20%)\n   * tx.setGasLimitMultiple(1.2)\n   * ```\n   */\n  setGasLimitMultiple(factor) {\n    // If gasLimit override is set, we can just set it synchronously\n    if (BigNumber.isBigNumber(this.overrides.gasLimit)) {\n      this.overrides.gasLimit = BigNumber.from(Math.floor(BigNumber.from(this.overrides.gasLimit).toNumber() * factor));\n    } else {\n      // Otherwise, set a gas multiple to use later\n      this.gasMultiple = factor;\n    }\n  }\n\n  /**\n   * Calculates the gas price for transactions (adding a 10% tip buffer)\n   */\n  async getGasPrice() {\n    return getGasPrice(this.provider);\n  }\n\n  /**\n   * Get the address of the transaction signer\n   */\n  async getSignerAddress() {\n    return this.signer.getAddress();\n  }\n\n  /**\n   * Get gas overrides for the transaction\n   */\n  async getGasOverrides() {\n    // If we're running in the browser, let users configure gas price in their wallet UI\n    // TODO - should prob only check if its a json rpc signer (browser extension)\n    if (isBrowser()) {\n      return {};\n    }\n    return getDefaultGasOverrides(this.provider);\n  }\n}\n\n/**\n * @contract\n */\nclass Transaction extends TransactionContext {\n  static fromContractWrapper(options) {\n    const signer = options.contractWrapper.getSigner();\n    if (!signer) {\n      throw new Error(\"Cannot create a transaction without a signer. Please ensure that you have a connected signer.\");\n    }\n    const optionsWithContract = {\n      ...options,\n      contract: options.contractWrapper.writeContract,\n      provider: options.contractWrapper.getProvider(),\n      signer,\n      gasless: options.contractWrapper.options.gasless,\n      storage: options.contractWrapper.storage\n    };\n    return new Transaction(optionsWithContract);\n  }\n  static async fromContractInfo(options) {\n    const storage = options.storage;\n    let contractAbi = options.contractAbi;\n    if (!contractAbi) {\n      try {\n        const metadata = await fetchContractMetadataFromAddress(options.contractAddress, options.provider, storage);\n        contractAbi = metadata.abi;\n      } catch {\n        throw new Error(`Could resolve contract metadata for address ${options.contractAddress}. Please pass the contract ABI manually with the 'contractAbi' option.`);\n      }\n    }\n    const contract = new Contract(options.contractAddress, contractAbi, options.provider);\n    const optionsWithContract = {\n      ...options,\n      storage,\n      contract\n    };\n    return new Transaction(optionsWithContract);\n  }\n  constructor(options) {\n    super({\n      args: options.args,\n      overrides: options.overrides,\n      provider: options.provider,\n      signer: options.signer,\n      storage: options.storage\n    });\n    this.method = options.method;\n    this.gaslessOptions = options.gasless;\n    this.parse = options.parse;\n\n    // Always connect the signer to the contract\n    this.contract = options.contract.connect(this.signer);\n\n    // Create new storage instance if one isn't provided\n    this.storage = options.storage;\n  }\n  getTarget() {\n    return this.contract.address;\n  }\n  getMethod() {\n    return this.method;\n  }\n  getGaslessOptions() {\n    return this.gaslessOptions;\n  }\n  setGaslessOptions(options) {\n    this.gaslessOptions = options;\n    return this;\n  }\n  setParse(parse) {\n    this.parse = parse;\n    return this;\n  }\n\n  /**\n   * Encode the function data for this transaction\n   */\n  encode() {\n    return this.contract.interface.encodeFunctionData(this.method, this.args);\n  }\n\n  /**\n   * Get the signed transaction\n   */\n  async sign() {\n    const populatedTx = await this.populateTransaction();\n    const signedTx = await this.contract.signer.signTransaction(populatedTx);\n    return signedTx;\n  }\n  async populateTransaction() {\n    const gasOverrides = await this.getGasOverrides();\n    const overrides = {\n      ...gasOverrides,\n      ...this.overrides\n    };\n\n    // First, if no gasLimit is passed, call estimate gas ourselves\n    if (!overrides.gasLimit) {\n      overrides.gasLimit = await this.estimateGasLimit();\n    }\n    const tx = await this.contract.populateTransaction[this.method](...this.args, overrides);\n    const populatedTx = await this.contract.signer.populateTransaction(tx);\n    return populatedTx;\n  }\n\n  /**\n   * Simulate the transaction on-chain without executing\n   */\n  async simulate() {\n    if (!this.contract.callStatic[this.method]) {\n      throw this.functionError();\n    }\n    try {\n      return await this.contract.callStatic[this.method](...this.args, ...(this.overrides.value ? [{\n        value: this.overrides.value\n      }] : []));\n    } catch (err) {\n      throw await this.transactionError(err);\n    }\n  }\n\n  /**\n   * Estimate the gas limit of this transaction\n   */\n  async estimateGasLimit() {\n    if (!this.contract.estimateGas[this.method]) {\n      throw this.functionError();\n    }\n    try {\n      const gasEstimate = await this.contract.estimateGas[this.method](...this.args, this.overrides);\n      if (this.gasMultiple) {\n        return BigNumber.from(Math.floor(BigNumber.from(gasEstimate).toNumber() * this.gasMultiple));\n      }\n      return gasEstimate;\n    } catch (err) {\n      // If gas estimation fails, we'll call static to get a better error message\n      await this.simulate();\n\n      // If transaction simulation (static call) doesn't throw, then throw a generic error\n      throw await this.transactionError(err);\n    }\n  }\n\n  /**\n   * Estimate the total gas cost of this transaction (in both ether and wei)\n   */\n  async estimateGasCost() {\n    const gasCost = await estimateTransactionCost(this.provider, await this.populateTransaction());\n    return {\n      ether: utils.formatEther(gasCost),\n      wei: gasCost\n    };\n  }\n\n  /**\n   * Send the transaction without waiting for it to be mined.\n   */\n  async send() {\n    if (!this.contract.functions[this.method]) {\n      throw this.functionError();\n    }\n    if (this.gaslessOptions && (\"openzeppelin\" in this.gaslessOptions || \"biconomy\" in this.gaslessOptions || \"engine\" in this.gaslessOptions)) {\n      return this.sendGasless();\n    }\n    const gasOverrides = await this.getGasOverrides();\n    const overrides = {\n      ...gasOverrides,\n      ...this.overrides\n    };\n\n    // First, if no gasLimit is passed, call estimate gas ourselves\n    if (!overrides.gasLimit) {\n      overrides.gasLimit = await this.estimateGasLimit();\n    }\n\n    // Now there should be no gas estimate errors\n    try {\n      return await this.contract.functions[this.method](...this.args, overrides);\n    } catch (err) {\n      throw await this.transactionError(err);\n    }\n  }\n\n  /**\n   * Send the transaction and wait for it to be mined\n   */\n  async execute() {\n    const tx = await this.send();\n    let receipt;\n    try {\n      receipt = await tx.wait();\n    } catch (err) {\n      // If tx.wait() fails, it just gives us a generic \"transaction failed\"\n      // error. So instead, we need to call static to get an informative error message\n      await this.simulate();\n\n      // If transaction simulation (static call) doesn't throw, then throw with the message that we have\n      throw await this.transactionError(err);\n    }\n    if (this.parse) {\n      return this.parse(receipt);\n    }\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Execute the transaction with gasless\n   */\n  async sendGasless() {\n    const tx = await this.prepareGasless();\n    const txHash = await defaultGaslessSendFunction(tx, this.signer, this.provider, this.storage, this.gaslessOptions);\n\n    // Need to poll here because ethers.provider.getTransaction lies about the type\n    // It can actually return null, which can happen if we're still in gasless API send queue\n    let sentTx;\n    let iteration = 1;\n    while (!sentTx) {\n      try {\n        sentTx = await this.provider.getTransaction(txHash);\n      } catch (err) {\n        // some providers can throw an error if the tx is very recent\n      }\n      // Exponential (ish) backoff for polling\n      if (!sentTx) {\n        await new Promise(resolve => setTimeout(resolve, Math.min(iteration * 1000, 10000)));\n        iteration++;\n      }\n\n      // Timeout if we still don't have it after a while\n      if (iteration > 20) {\n        throw new Error(`Unable to retrieve transaction with hash ${txHash}`);\n      }\n    }\n    return sentTx;\n  }\n\n  /**\n   * @internal\n   * @returns\n   */\n  async prepareGasless() {\n    invariant(this.gaslessOptions && (\"openzeppelin\" in this.gaslessOptions || \"biconomy\" in this.gaslessOptions || \"engine\" in this.gaslessOptions), \"No gasless options set on this transaction!\");\n    const signerAddress = await this.getSignerAddress();\n    const args = [...this.args];\n    if (this.method === \"multicall\" && Array.isArray(this.args[0]) && args[0].length > 0) {\n      args[0] = args[0].map(tx => utils.solidityPack([\"bytes\", \"address\"], [tx, signerAddress]));\n    }\n    invariant(this.signer, \"Cannot execute gasless transaction without valid signer\");\n    const [{\n      chainId\n    }, from] = await Promise.all([this.provider.getNetwork(), this.overrides.from || signerAddress]);\n    const to = this.contract.address;\n    const value = this.overrides?.value || 0;\n    if (BigNumber.from(value).gt(0)) {\n      throw new Error(\"Cannot send native token value with gasless transaction\");\n    }\n    const data = this.contract.interface.encodeFunctionData(this.method, args);\n    let gas = BigNumber.from(0);\n    try {\n      const gasEstimate = await this.contract.estimateGas[this.method](...args);\n      gas = gasEstimate.mul(2);\n    } catch (e) {\n      // ignore\n    }\n\n    // in some cases WalletConnect doesn't properly give an estimate for how much gas it would actually use.\n    // as a fix, we're setting it to a high arbitrary number (500k) as the gas limit that should cover for most function calls.\n    if (gas.lt(100000)) {\n      gas = BigNumber.from(500000);\n    }\n\n    // check for gas override in callOverrides\n    if (this.overrides.gasLimit && BigNumber.from(this.overrides.gasLimit).gt(gas)) {\n      gas = BigNumber.from(this.overrides.gasLimit);\n    }\n    return {\n      from,\n      to,\n      data,\n      chainId,\n      gasLimit: gas,\n      functionName: this.method,\n      functionArgs: args,\n      callOverrides: this.overrides\n    };\n  }\n  functionError() {\n    return new Error(`Contract \"${this.contract.address}\" does not have function \"${this.method}\"`);\n  }\n\n  /**\n   * Create a nicely formatted error message with tx metadata and solidity stack trace\n   */\n  async transactionError(error) {\n    const provider = this.provider;\n\n    // Get metadata for transaction to populate into error\n    const [network, from] = await Promise.all([provider.getNetwork(), this.overrides.from || this.getSignerAddress()]);\n    const to = this.contract.address;\n    const data = this.encode();\n    const value = BigNumber.from(this.overrides.value || 0);\n    const rpcUrl = provider.connection?.url;\n\n    // Render function signature with arguments filled in\n    const functionSignature = this.contract.interface.getFunction(this.method);\n    const methodArgs = this.args.map(arg => {\n      if (JSON.stringify(arg).length <= 80) {\n        return JSON.stringify(arg);\n      }\n      return JSON.stringify(arg, undefined, 2);\n    });\n    const joinedArgs = methodArgs.join(\", \").length <= 80 ? methodArgs.join(\", \") : \"\\n\" + methodArgs.map(arg => \"  \" + arg.split(\"\\n\").join(\"\\n  \")).join(\",\\n\") + \"\\n\";\n    const method = `${functionSignature.name}(${joinedArgs})`;\n    const hash = error.transactionHash || error.transaction?.hash || error.receipt?.transactionHash;\n\n    // Parse the revert reason from the error\n    const reason = parseRevertReason(error);\n\n    // Get contract metadata for contract name if cached\n    let contractName = undefined;\n    try {\n      const chainId = (await provider.getNetwork()).chainId;\n      const metadata = getContractMetadataFromCache(this.contract.address, chainId);\n      if (metadata?.name) {\n        contractName = metadata.name;\n      }\n    } catch (err) {\n      // no-op\n    }\n    return new TransactionError({\n      reason,\n      from,\n      to,\n      method,\n      data,\n      network,\n      rpcUrl,\n      value,\n      hash,\n      contractName\n    }, error);\n  }\n}\n\n/**\n * @contract\n */\nclass DeployTransaction extends TransactionContext {\n  constructor(options) {\n    super(options);\n    this.factory = options.factory;\n    this.events = options.events;\n  }\n  encode() {\n    return utils.hexlify(utils.concat([this.factory.bytecode, this.factory.interface.encodeDeploy(this.args)]));\n  }\n  getTarget() {\n    return constants.AddressZero;\n  }\n  getMethod() {\n    return \"deploy\";\n  }\n  async sign() {\n    const populatedTx = await this.populateTransaction();\n    return this.signer.signTransaction(populatedTx);\n  }\n  async simulate() {\n    const populatedTx = await this.populateTransaction();\n    return this.signer.call(populatedTx);\n  }\n  async estimateGasLimit() {\n    try {\n      const gasOverrides = await this.getGasOverrides();\n      const overrides = {\n        ...gasOverrides,\n        ...this.overrides\n      };\n      const populatedTx = this.factory.getDeployTransaction(...this.args, overrides);\n      return this.signer.estimateGas(populatedTx);\n    } catch (err) {\n      // No need to do simulation here, since there can't be revert errors\n      throw await this.deployError(err);\n    }\n  }\n  async estimateGasCost() {\n    const gasOverrides = await this.getGasOverrides();\n    const overrides = {\n      ...gasOverrides,\n      ...this.overrides\n    };\n    const populatedTx = this.factory.getDeployTransaction(...this.args, overrides);\n    const gasCost = await estimateTransactionCost(this.provider, populatedTx);\n    return {\n      ether: utils.formatEther(gasCost),\n      wei: gasCost\n    };\n  }\n  async send() {\n    try {\n      const populatedTx = await this.populateTransaction();\n      return await this.signer.sendTransaction(populatedTx);\n    } catch (err) {\n      throw await this.deployError(err);\n    }\n  }\n  async execute() {\n    const tx = await this.send();\n    try {\n      await tx.wait();\n    } catch (err) {\n      // If tx.wait() fails, it just gives us a generic \"transaction failed\"\n      // error. So instead, we need to call static to get an informative error message\n      await this.simulate();\n\n      // If transaction simulation (static call) doesn't throw, then throw with the message that we have\n      throw await this.deployError(err);\n    }\n    const contractAddress = utils.getContractAddress({\n      from: tx.from,\n      nonce: tx.nonce\n    });\n\n    // TODO: Remove when we delete events from deploy\n    if (this.events) {\n      this.events.emit(\"contractDeployed\", {\n        status: \"completed\",\n        contractAddress,\n        transactionHash: tx.hash\n      });\n    }\n    return contractAddress;\n  }\n  async populateTransaction() {\n    const gasOverrides = await this.getGasOverrides();\n    const overrides = {\n      ...gasOverrides,\n      ...this.overrides\n    };\n\n    // First, if no gasLimit is passed, call estimate gas ourselves\n    if (!overrides.gasLimit) {\n      overrides.gasLimit = await this.estimateGasLimit();\n    }\n    return this.factory.getDeployTransaction(...this.args, overrides);\n  }\n\n  /**\n   * Create a nicely formatted error message with tx metadata and solidity stack trace\n   */\n  async deployError(error) {\n    const provider = this.provider;\n\n    // Get metadata for transaction to populate into error\n    const [network, from] = await Promise.all([provider.getNetwork(), this.overrides.from || this.getSignerAddress()]);\n    const data = this.encode();\n    const value = BigNumber.from(this.overrides.value || 0);\n    const rpcUrl = provider.connection?.url;\n    const methodArgs = this.args.map(arg => {\n      if (JSON.stringify(arg).length <= 80) {\n        return JSON.stringify(arg);\n      }\n      return JSON.stringify(arg, undefined, 2);\n    });\n    const joinedArgs = methodArgs.join(\", \").length <= 80 ? methodArgs.join(\", \") : \"\\n\" + methodArgs.map(arg => \"  \" + arg.split(\"\\n\").join(\"\\n  \")).join(\",\\n\") + \"\\n\";\n    const method = `deployContract(${joinedArgs})`;\n    const hash = error.transactionHash || error.transaction?.hash || error.receipt?.transactionHash;\n\n    // Parse the revert reason from the error\n    const reason = parseRevertReason(error);\n    return new TransactionError({\n      reason,\n      from,\n      method,\n      data,\n      network,\n      rpcUrl,\n      value,\n      hash\n    }, error);\n  }\n}\nasync function defaultGaslessSendFunction(transaction, signer, provider, storage, gaslessOptions) {\n  if (gaslessOptions && \"biconomy\" in gaslessOptions) {\n    return biconomySendFunction(transaction, signer, provider, gaslessOptions);\n  } else if (gaslessOptions && \"openzeppelin\" in gaslessOptions) {\n    return defenderSendFunction(transaction, signer, provider, storage, gaslessOptions);\n  }\n  return engineSendFunction(transaction, signer, provider, storage, gaslessOptions);\n}\n\n/**\n * @internal\n */\nasync function engineSendFunction(transaction, signer, provider, storage, gaslessOptions) {\n  invariant(gaslessOptions && \"engine\" in gaslessOptions, \"calling engine gasless transaction without engine config in the SDK options\");\n  const request = await enginePrepareRequest(transaction, signer, provider, storage, gaslessOptions);\n  const res = await fetch(gaslessOptions.engine.relayerUrl, {\n    ...request,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await res.json();\n  if (data.error) {\n    throw new Error(data.error?.message || JSON.stringify(data.error));\n  }\n  const queueId = data.result.queueId;\n  const engineUrl = gaslessOptions.engine.relayerUrl.split(\"/relayer/\")[0];\n  const startTime = Date.now();\n  while (true) {\n    const txRes = await fetch(`${engineUrl}/transaction/status/${queueId}`);\n    const txData = await txRes.json();\n    if (txData.result.transactionHash) {\n      return txData.result.transactionHash;\n    }\n\n    // Time out after 30s\n    if (Date.now() - startTime > 30 * 1000) {\n      throw new Error(\"timeout\");\n    }\n\n    // Poll to check if the transaction was mined\n    await new Promise(resolve => setTimeout(resolve, 2000));\n  }\n}\nasync function biconomySendFunction(transaction, signer, provider, gaslessOptions) {\n  const request = await biconomyPrepareRequest(transaction, signer, provider, gaslessOptions);\n  const response = await fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", request);\n  if (response.ok) {\n    const resp = await response.json();\n    if (!resp.txHash) {\n      throw new Error(`relay transaction failed: ${resp.log}`);\n    }\n    return resp.txHash;\n  }\n  throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n}\nasync function defenderSendFunction(transaction, signer, provider, storage, gaslessOptions) {\n  invariant(gaslessOptions && \"openzeppelin\" in gaslessOptions, \"calling openzeppelin gasless transaction without openzeppelin config in the SDK options\");\n  const request = await defenderPrepareRequest(transaction, signer, provider, storage, gaslessOptions);\n  const response = await fetch(gaslessOptions.openzeppelin.relayerUrl, request);\n  if (response.ok) {\n    const resp = await response.json();\n    if (!resp.result) {\n      throw new Error(`Relay transaction failed: ${resp.message}`);\n    }\n    const result = JSON.parse(resp.result);\n    return result.txHash;\n  }\n  throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n}\nasync function enginePrepareRequest(transaction, signer, provider, storage, gaslessOptions) {\n  invariant(gaslessOptions && \"engine\" in gaslessOptions, \"calling engine gasless transaction without openzeppelin config in the SDK options\");\n  try {\n    const metadata = await fetchContractMetadataFromAddress(transaction.to, provider, storage);\n    const chainId = (await provider.getNetwork()).chainId;\n    const abi = await getCompositeABI(transaction.to, metadata.abi, provider, {}, storage);\n    const contract = new ContractWrapper(signer, transaction.to, abi, {}, storage);\n    if (abi.find(item => item.name === \"executeMetaTransaction\")) {\n      const name = await contract.call(\"name\", []);\n      const domain = {\n        name,\n        version: \"1\",\n        salt: \"0x\" + chainId.toString(16).padStart(64, \"0\"),\n        // Use 64 length hex chain id as salt\n        verifyingContract: transaction.to\n      };\n      const types = {\n        MetaTransaction: [{\n          name: \"nonce\",\n          type: \"uint256\"\n        }, {\n          name: \"from\",\n          type: \"address\"\n        }, {\n          name: \"functionSignature\",\n          type: \"bytes\"\n        }]\n      };\n      const nonce = await contract.call(\"getNonce\", [transaction.from]);\n      const message = {\n        nonce: nonce,\n        from: transaction.from,\n        functionSignature: transaction.data\n      };\n      const {\n        signature\n      } = await signTypedDataInternal(signer, domain, types, message);\n      return {\n        method: \"POST\",\n        body: JSON.stringify({\n          type: \"execute-meta-transaction\",\n          request: {\n            from: transaction.from,\n            to: transaction.to,\n            data: transaction.data\n          },\n          signature\n        })\n      };\n    }\n  } catch {\n    // no-op\n  }\n  if (transaction.functionName === \"approve\" && transaction.functionArgs.length === 2) {\n    const spender = transaction.functionArgs[0];\n    const amount = transaction.functionArgs[1];\n    // TODO: support DAI permit by signDAIPermit\n    const {\n      message: permit,\n      signature: sig\n    } = await signEIP2612Permit(signer, transaction.to, transaction.from, spender, amount, gaslessOptions.engine.domainSeparatorVersion);\n    const message = {\n      to: transaction.to,\n      owner: permit.owner,\n      spender: permit.spender,\n      value: BigNumber.from(permit.value).toString(),\n      nonce: BigNumber.from(permit.nonce).toString(),\n      deadline: BigNumber.from(permit.deadline).toString()\n    };\n    return {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"permit\",\n        request: message,\n        signature: sig\n      })\n    };\n  } else {\n    const forwarderAddress = gaslessOptions.engine.relayerForwarderAddress || CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarder || (await computeForwarderAddress(provider, storage));\n    const ForwarderABI = (await import('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json')).default;\n    const forwarder = new Contract(forwarderAddress, ForwarderABI, provider);\n    const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from]);\n    let domain;\n    let types;\n    let message;\n    if (gaslessOptions.experimentalChainlessSupport) {\n      domain = {\n        name: \"GSNv2 Forwarder\",\n        version: \"0.0.1\",\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest: ChainAwareForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data,\n        chainid: BigNumber.from(transaction.chainId).toString()\n      };\n    } else {\n      domain = {\n        name: gaslessOptions.engine.domainName,\n        version: gaslessOptions.engine.domainVersion,\n        chainId: transaction.chainId,\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data\n      };\n    }\n    const {\n      signature: sig\n    } = await signTypedDataInternal(signer, domain, types, message);\n    const signature = sig;\n    return {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"forward\",\n        request: message,\n        signature,\n        forwarderAddress\n      })\n    };\n  }\n}\nasync function defenderPrepareRequest(transaction, signer, provider, storage, gaslessOptions) {\n  invariant(gaslessOptions && \"openzeppelin\" in gaslessOptions, \"calling openzeppelin gasless transaction without openzeppelin config in the SDK options\");\n  invariant(signer, \"provider is not set\");\n  invariant(provider, \"provider is not set\");\n  const forwarderAddress = gaslessOptions.openzeppelin.relayerForwarderAddress || (gaslessOptions.openzeppelin.useEOAForwarder ? CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarderEOA || (await computeEOAForwarderAddress(provider, storage)) : CONTRACT_ADDRESSES[transaction.chainId]?.openzeppelinForwarder || (await computeForwarderAddress(provider, storage)));\n  const ForwarderABI = (await import('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json')).default;\n  const forwarder = new Contract(forwarderAddress, ForwarderABI, provider);\n  const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from]);\n  let domain;\n  let types;\n  let message;\n  if (gaslessOptions.experimentalChainlessSupport) {\n    domain = {\n      name: \"GSNv2 Forwarder\",\n      version: \"0.0.1\",\n      verifyingContract: forwarderAddress\n    };\n    types = {\n      ForwardRequest: ChainAwareForwardRequest\n    };\n    message = {\n      from: transaction.from,\n      to: transaction.to,\n      value: BigNumber.from(0).toString(),\n      gas: BigNumber.from(transaction.gasLimit).toString(),\n      nonce: BigNumber.from(nonce).toString(),\n      data: transaction.data,\n      chainid: BigNumber.from(transaction.chainId).toString()\n    };\n  } else {\n    domain = {\n      name: gaslessOptions.openzeppelin.domainName,\n      version: gaslessOptions.openzeppelin.domainVersion,\n      chainId: transaction.chainId,\n      verifyingContract: forwarderAddress\n    };\n    types = {\n      ForwardRequest\n    };\n    message = {\n      from: transaction.from,\n      to: transaction.to,\n      value: BigNumber.from(0).toString(),\n      gas: BigNumber.from(transaction.gasLimit).toString(),\n      nonce: BigNumber.from(nonce).toString(),\n      data: transaction.data\n    };\n  }\n  let signature;\n\n  // if the executing function is \"approve\" and matches with erc20 approve signature\n  // and if the token supports permit, then we use permit for gasless instead of approve.\n  if (transaction.functionName === \"approve\" && transaction.functionArgs.length === 2) {\n    const spender = transaction.functionArgs[0];\n    const amount = transaction.functionArgs[1];\n    // TODO: support DAI permit by signDAIPermit\n    const {\n      message: permit,\n      signature: sig\n    } = await signEIP2612Permit(signer, transaction.to, transaction.from, spender, amount, gaslessOptions.openzeppelin.domainSeparatorVersion);\n    const {\n      r,\n      s,\n      v\n    } = utils.splitSignature(sig);\n    message = {\n      to: transaction.to,\n      owner: permit.owner,\n      spender: permit.spender,\n      value: BigNumber.from(permit.value).toString(),\n      nonce: BigNumber.from(permit.nonce).toString(),\n      deadline: BigNumber.from(permit.deadline).toString(),\n      r,\n      s,\n      v\n    };\n    signature = sig;\n  } else {\n    const {\n      signature: sig\n    } = await signTypedDataInternal(signer, domain, types, message);\n    signature = sig;\n  }\n  let messageType = \"forward\";\n\n  // if has owner property then it's permit :)\n  if (message?.owner) {\n    messageType = \"permit\";\n  }\n  return {\n    method: \"POST\",\n    body: JSON.stringify({\n      request: message,\n      signature,\n      forwarderAddress,\n      type: messageType\n    })\n  };\n}\nasync function prepareGaslessRequest(tx) {\n  const gaslessTx = await tx.prepareGasless();\n  const gaslessOptions = tx.getGaslessOptions();\n  if (gaslessOptions && \"biconomy\" in gaslessOptions) {\n    const request = await biconomyPrepareRequest(gaslessTx, tx.getSigner, tx.getProvider, gaslessOptions);\n    return {\n      url: \"https://api.biconomy.io/api/v2/meta-tx/native\",\n      ...request\n    };\n  } else {\n    invariant(gaslessOptions && \"openzeppelin\" in gaslessOptions, \"calling openzeppelin gasless transaction without openzeppelin config in the SDK options\");\n    const request = await defenderPrepareRequest(gaslessTx, tx.getSigner, tx.getProvider, tx.getStorage, gaslessOptions);\n    return {\n      url: gaslessOptions.openzeppelin.relayerUrl,\n      ...request\n    };\n  }\n}\nasync function biconomyPrepareRequest(transaction, signer, provider, gaslessOptions) {\n  invariant(gaslessOptions && \"biconomy\" in gaslessOptions, \"calling biconomySendFunction without biconomy\");\n  invariant(signer && provider, \"signer and provider must be set\");\n  const forwarder = new Contract(getContractAddressByChainId(transaction.chainId, \"biconomyForwarder\"), BiconomyForwarderAbi, provider);\n  const batchId = 0;\n  const batchNonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from, batchId]);\n  const request = {\n    from: transaction.from,\n    to: transaction.to,\n    token: constants.AddressZero,\n    txGas: transaction.gasLimit.toNumber(),\n    tokenGasPrice: \"0\",\n    batchId,\n    batchNonce: batchNonce.toNumber(),\n    deadline: Math.floor(Date.now() / 1000 + (gaslessOptions && \"biconomy\" in gaslessOptions && gaslessOptions.biconomy?.deadlineSeconds || 3600)),\n    data: transaction.data\n  };\n  const hashToSign = utils.arrayify(utils.solidityKeccak256([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, utils.keccak256(request.data)]));\n  const signature = await signer.signMessage(hashToSign);\n  return {\n    method: \"POST\",\n    body: JSON.stringify({\n      from: transaction.from,\n      apiId: gaslessOptions.biconomy.apiId,\n      params: [request, signature],\n      to: transaction.to,\n      gasLimit: transaction.gasLimit.toHexString()\n    }),\n    headers: {\n      \"x-api-key\": gaslessOptions.biconomy.apiKey,\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  };\n}\n\nexport { DeployTransaction as D, Transaction as T, buildDeployTransactionFunction as a, buildTransactionFunction as b, engineSendFunction as e, prepareGaslessRequest as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10222, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/contract-publisher-69217d59.esm.js"],"sourcesContent":["import ContractPublisherAbi from '@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json';\nimport { utils, constants } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { ae as fetchPreDeployMetadata, a6 as extractConstructorParamsFromAbi, a7 as extractFunctionsFromAbi, cw as RPCConnectionHandler, cx as ContractWrapper, aV as getContractPublisherAddress, aQ as resolveAddress, K as fetchContractMetadataFromAddress, af as fetchExtendedReleaseMetadata, a9 as resolveContractUriFromAddress, bD as ProfileSchemaOutput, bE as PublishedContractSchema, ad as fetchRawPredeployMetadata, a1 as fetchContractMetadata, ag as detectFeatures, am as isFeatureEnabled, aN as fetchPublishedContractFromPolygon, aO as fetchAndCacheDeployMetadata, ao as joinABIs, bo as AbiSchema, ar as isIncrementalVersion, bA as FullPublishMetadataSchemaInput } from './index-6d283666.esm.js';\nimport { f as fetchSourceFilesFromMetadata } from './fetchSourceFilesFromMetadata-f1d39e93.esm.js';\nimport { b as buildTransactionFunction, T as Transaction } from './transactions-89262635.esm.js';\n\n/**\n * @internal\n */\nasync function extractConstructorParams(predeployMetadataUri, storage) {\n  const meta = await fetchPreDeployMetadata(predeployMetadataUri, storage);\n  return extractConstructorParamsFromAbi(meta.abi);\n}\n\n/**\n * @internal\n * @param predeployMetadataUri - The predeploy metadata URI to fetch\n * @param storage - The storage to use\n */\nasync function extractFunctions(predeployMetadataUri, storage) {\n  const metadata = await fetchPreDeployMetadata(predeployMetadataUri, storage);\n  return extractFunctionsFromAbi(metadata.abi, metadata.metadata);\n}\n\n/**\n * Handles publishing contracts (EXPERIMENTAL)\n * @internal\n */\nclass ContractPublisher extends RPCConnectionHandler {\n  constructor(network, options, storage) {\n    super(network, options);\n    this.storage = storage;\n    this.publisher = new ContractWrapper(network, getContractPublisherAddress(), ContractPublisherAbi, options, storage);\n  }\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.publisher.updateSignerOrProvider(network);\n  }\n\n  /**\n   * @internal\n   * @param metadataUri - URI of the contract metadata\n   */\n  async extractConstructorParams(metadataUri) {\n    return extractConstructorParams(metadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param predeployMetadataUri - URI of the predeploy metadata\n   */\n  async extractFunctions(predeployMetadataUri) {\n    return extractFunctions(predeployMetadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param predeployUri - URI of the predeploy metadata\n   */\n  async fetchCompilerMetadataFromPredeployURI(predeployUri) {\n    return fetchPreDeployMetadata(predeployUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param prepublishUri - URI of the prepublish metadata\n   * @param publisherAddress - Address of the publisher\n   */\n  async fetchPrePublishMetadata(prepublishUri, publisherAddress) {\n    const preDeployMetadataFetched = await fetchPreDeployMetadata(prepublishUri, this.storage);\n    const latestPublishedContract = publisherAddress ? await this.getLatest(publisherAddress, preDeployMetadataFetched.name) : undefined;\n    const latestPublishedContractMetadata = latestPublishedContract ? await this.fetchPublishedContractInfo(latestPublishedContract) : undefined;\n    return {\n      preDeployMetadata: preDeployMetadataFetched,\n      latestPublishedContractMetadata\n    };\n  }\n\n  /**\n   * @param address - Address of the contract\n   */\n  async fetchCompilerMetadataFromAddress(address) {\n    const resolvedAddress = await resolveAddress(address);\n    return fetchContractMetadataFromAddress(resolvedAddress, this.getProvider(), this.storage, this.options);\n  }\n\n  /**\n   * @internal\n   * Get the full information about a published contract\n   * @param contract - Published contract\n   */\n  async fetchPublishedContractInfo(contract) {\n    return {\n      name: contract.id,\n      publishedTimestamp: contract.timestamp,\n      publishedMetadata: await this.fetchFullPublishMetadata(contract.metadataUri)\n    };\n  }\n\n  /**\n   * @internal\n   * @param publishedMetadataUri - URI of the published metadata\n   */\n  async fetchFullPublishMetadata(publishedMetadataUri) {\n    return fetchExtendedReleaseMetadata(publishedMetadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * // TODO expose a resolvePublishMetadata(contractAddress, chainId) that handles the dual chain case\n   * // TODO will be easy to do with the multichain pattern of 3.0\n   * @param compilerMetadataUri - URI of the compiler metadata\n   */\n  async resolvePublishMetadataFromCompilerMetadata(compilerMetadataUri) {\n    const publishedMetadataUri = await this.publisher.read(\"getPublishedUriFromCompilerUri\", [compilerMetadataUri]);\n    if (publishedMetadataUri.length === 0) {\n      throw Error(`Could not resolve published metadata URI from ${compilerMetadataUri}`);\n    }\n    return await Promise.all(publishedMetadataUri.filter(uri => uri.length > 0).map(uri => this.fetchFullPublishMetadata(uri)));\n  }\n\n  /**\n   * @internal\n   * TODO clean this up (see method above, too)\n   */\n  async resolveContractUriFromAddress(address) {\n    const resolvedAddress = await resolveAddress(address);\n    const contractUri = await resolveContractUriFromAddress(resolvedAddress, this.getProvider());\n    invariant(contractUri, \"Could not resolve contract URI from address\");\n    return contractUri;\n  }\n\n  /**\n   * Fetch all sources for a contract from its address\n   * @param address - Address of the contract\n   */\n  async fetchContractSourcesFromAddress(address) {\n    const resolvedAddress = await resolveAddress(address);\n    const metadata = await this.fetchCompilerMetadataFromAddress(resolvedAddress);\n    return await fetchSourceFilesFromMetadata(metadata, this.storage);\n  }\n\n  /**\n   * Fetch ABI from a contract, or undefined if not found\n   * @param address - Address of the contract\n   */\n  async fetchContractAbiFromAddress(address) {\n    const resolvedAddress = await resolveAddress(address);\n    const meta = await fetchContractMetadataFromAddress(resolvedAddress, this.getProvider(), this.storage);\n    return meta.abi;\n  }\n\n  /**\n   * @internal\n   * @param profileMetadata - Profile metadata\n   */\n  updatePublisherProfile = /* @__PURE__ */buildTransactionFunction(async profileMetadata => {\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const publisher = await signer.getAddress();\n    const profileUri = await this.storage.upload(profileMetadata);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.publisher,\n      method: \"setPublisherProfileUri\",\n      args: [publisher, profileUri]\n    });\n  });\n\n  /**\n   * @internal\n   * @param publisherAddress - Address of the publisher\n   */\n  async getPublisherProfile(publisherAddress) {\n    const resolvedPublisherAddress = await resolveAddress(publisherAddress);\n    const profileUri = await this.publisher.read(\"getPublisherProfileUri\", [resolvedPublisherAddress]);\n    if (!profileUri || profileUri.length === 0) {\n      return {};\n    }\n    return ProfileSchemaOutput.parse(await this.storage.downloadJSON(profileUri));\n  }\n\n  /**\n   * @internal\n   * @param publisherAddress - Address of the publisher\n   */\n  async getAll(publisherAddress) {\n    const resolvedPublisherAddress = await resolveAddress(publisherAddress);\n    const data = await this.publisher.read(\"getAllPublishedContracts\", [resolvedPublisherAddress]);\n    // since we can fetch from multiple publisher contracts, just keep the latest one in the list\n    const map = data.reduce((acc, curr) => {\n      // replaces the previous contract with the latest one\n      acc[curr.contractId] = curr;\n      return acc;\n    }, {});\n    return Object.entries(map).map(_ref => {\n      let [, struct] = _ref;\n      return this.toPublishedContract(struct);\n    });\n  }\n\n  /**\n   * @internal\n   * @param publisherAddress - Address of the publisher\n   * @param contractId - ID of the contract\n   */\n  async getAllVersions(publisherAddress, contractId) {\n    const resolvedPublisherAddress = await resolveAddress(publisherAddress);\n    const contractStructs = await this.publisher.read(\"getPublishedContractVersions\", [resolvedPublisherAddress, contractId]);\n    if (contractStructs.length === 0) {\n      throw Error(\"Not found\");\n    }\n    return contractStructs.map(d => this.toPublishedContract(d));\n  }\n  async getVersion(publisherAddress, contractId) {\n    let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n    const resolvedPublisherAddress = await resolveAddress(publisherAddress);\n    if (version === \"latest\") {\n      return this.getLatest(resolvedPublisherAddress, contractId);\n    }\n    const allVersions = await this.getAllVersions(resolvedPublisherAddress, contractId);\n    // get the metadata for each version\n    const versionMetadata = await Promise.all(allVersions.map(contract => this.fetchPublishedContractInfo(contract)));\n    // find the version that matches the version string\n    const versionMatch = versionMetadata.find(metadata => metadata.publishedMetadata.version === version);\n    invariant(versionMatch, \"Contract version not found\");\n    // match the version back to the contract based on the published timestamp\n    return allVersions.find(contract => contract.timestamp === versionMatch.publishedTimestamp);\n  }\n  async getLatest(publisherAddress, contractId) {\n    const resolvedPublisherAddress = await resolveAddress(publisherAddress);\n    const model = await this.publisher.read(\"getPublishedContract\", [resolvedPublisherAddress, contractId]);\n    if (model && model.publishMetadataUri) {\n      return this.toPublishedContract(model);\n    }\n    return undefined;\n  }\n  publish = /* @__PURE__ */buildTransactionFunction(async (predeployUri, extraMetadata) => {\n    const extraMetadataCleaned = this.cleanupOldPublishFlowData(extraMetadata);\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const publisher = await signer.getAddress();\n    const predeployMetadata = await fetchRawPredeployMetadata(predeployUri, this.storage);\n    const compilerMetadata = await fetchContractMetadata(predeployMetadata.metadataUri, this.storage);\n    const features = detectFeatures(compilerMetadata.abi);\n    const isPlugin = isFeatureEnabled(compilerMetadata.abi, \"PluginRouter\", features);\n    const isDynamic = isFeatureEnabled(compilerMetadata.abi, \"DynamicContract\", features);\n    const isModular = isFeatureEnabled(compilerMetadata.abi, \"ModularCore\", features);\n    extraMetadataCleaned.routerType = isPlugin ? \"plugin\" : isDynamic ? \"dynamic\" : isModular ? \"modular\" : \"none\";\n\n    // For a dynamic contract Router, try to fetch plugin/extension metadata\n    if (isDynamic || isPlugin) {\n      const defaultExtensions = extraMetadataCleaned.defaultExtensions;\n      if (defaultExtensions && defaultExtensions.length > 0) {\n        try {\n          const publishedExtensions = await Promise.all(defaultExtensions.map(e => {\n            return fetchPublishedContractFromPolygon(e.publisherAddress, e.extensionName, e.extensionVersion, this.storage, this.options.clientId, this.options.secretKey);\n          }));\n          const publishedExtensionUris = publishedExtensions.map(ext => ext.metadataUri);\n          const extensionABIs = (await Promise.all(publishedExtensionUris.map(async uri => {\n            return fetchAndCacheDeployMetadata(uri, this.storage);\n          }))).map(fetchedMetadata => fetchedMetadata.compilerMetadata.abi);\n          const composite = joinABIs([compilerMetadata.abi, ...extensionABIs]);\n          extraMetadataCleaned.compositeAbi = AbiSchema.parse(composite);\n        } catch {}\n      }\n    }\n\n    // ensure version is incremental\n    const latestContract = await this.getLatest(publisher, predeployMetadata.name);\n    if (latestContract && latestContract.metadataUri) {\n      const latestMetadata = await this.fetchPublishedContractInfo(latestContract);\n      const latestVersion = latestMetadata.publishedMetadata.version;\n      if (!isIncrementalVersion(latestVersion, extraMetadataCleaned.version)) {\n        throw Error(`Version ${extraMetadataCleaned.version} is not greater than ${latestVersion}`);\n      }\n    }\n    const fetchedBytecode = await (await this.storage.download(predeployMetadata.bytecodeUri)).text();\n    const bytecode = fetchedBytecode.startsWith(\"0x\") ? fetchedBytecode : `0x${fetchedBytecode}`;\n    const bytecodeHash = utils.solidityKeccak256([\"bytes\"], [bytecode]);\n    const contractId = predeployMetadata.name;\n    const fullMetadata = await FullPublishMetadataSchemaInput.parseAsync({\n      ...extraMetadataCleaned,\n      metadataUri: predeployMetadata.metadataUri,\n      bytecodeUri: predeployMetadata.bytecodeUri,\n      name: predeployMetadata.name,\n      analytics: predeployMetadata.analytics,\n      compilers: predeployMetadata.compilers,\n      publisher\n    });\n    const fullMetadataUri = await this.storage.upload(fullMetadata);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.publisher,\n      method: \"publishContract\",\n      args: [publisher, contractId, fullMetadataUri, predeployMetadata.metadataUri, bytecodeHash, constants.AddressZero],\n      parse: receipt => {\n        const events = this.publisher.parseLogs(\"ContractPublished\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ContractPublished event found\");\n        }\n        const contract = events[0].args.publishedContract;\n        return {\n          receipt,\n          data: async () => this.toPublishedContract(contract)\n        };\n      }\n    });\n  });\n  unpublish = /* @__PURE__ */buildTransactionFunction(async (publisher, contractId) => {\n    const resolvedPublisher = await resolveAddress(publisher);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.publisher,\n      method: \"unpublishContract\",\n      args: [resolvedPublisher, contractId]\n    });\n  });\n  toPublishedContract(contractModel) {\n    return PublishedContractSchema.parse({\n      id: contractModel.contractId,\n      timestamp: contractModel.publishTimestamp,\n      metadataUri: contractModel.publishMetadataUri\n    });\n  }\n  cleanupOldPublishFlowData(extraMetadata) {\n    if (extraMetadata.compositeAbi) {\n      delete extraMetadata.compositeAbi;\n    }\n    return {\n      ...extraMetadata,\n      isDeployableViaFactory: false,\n      isDeployableViaProxy: false,\n      factoryDeploymentData: {\n        ...extraMetadata.factoryDeploymentData,\n        implementationAddresses: {},\n        factoryAddresses: {}\n      }\n    };\n  }\n}\n\nvar contractPublisher = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ContractPublisher: ContractPublisher\n});\n\nexport { ContractPublisher as C, extractFunctions as a, contractPublisher as c, extractConstructorParams as e };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10579, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/fetchCurrencyValue-473fae98.esm.js"],"sourcesContent":["import { constants, Contract, BigNumber, utils } from 'ethers';\nimport { a_ as NATIVE_TOKEN_ADDRESS, b0 as getNativeTokenByChainId } from './index-6d283666.esm.js';\n\n/**\n * Encodes and decodes Contract functions\n * @contract\n * @public\n */\nclass ContractEncoder {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Encodes the given contract function with argument\n   * @returns The encoded data\n   */\n  encode(fn, args) {\n    return this.contractWrapper.readContract.interface.encodeFunctionData(fn, args);\n  }\n\n  /**\n   * Decode encoded call data for a given function\n   * @param fn - the function to decode\n   * @param encodedArgs - the encoded arguments\n   */\n  decode(fn, encodedArgs) {\n    return this.contractWrapper.readContract.interface.decodeFunctionData(fn, encodedArgs);\n  }\n  decodeResult(fn, encodedArgs) {\n    return this.contractWrapper.readContract.interface.decodeFunctionResult(fn, encodedArgs);\n  }\n}\n\nfunction isNativeToken(tokenAddress) {\n  return tokenAddress.toLowerCase() === NATIVE_TOKEN_ADDRESS || tokenAddress.toLowerCase() === constants.AddressZero;\n}\n\n/**\n *\n * @param provider - The provider to use\n * @param asset - The asset to fetch the metadata for\n * @returns\n * @internal\n */\nasync function fetchCurrencyMetadata(provider, asset) {\n  if (isNativeToken(asset)) {\n    const network = await provider.getNetwork();\n    const nativeToken = getNativeTokenByChainId(network.chainId);\n    return {\n      name: nativeToken.name,\n      symbol: nativeToken.symbol,\n      decimals: nativeToken.decimals\n    };\n  } else {\n    const ERC20MetadataAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json')).default;\n    const erc20 = new Contract(asset, ERC20MetadataAbi, provider);\n    const [name, symbol, decimals] = await Promise.all([erc20.name(), erc20.symbol(), erc20.decimals()]);\n    return {\n      name,\n      symbol,\n      decimals\n    };\n  }\n}\n\n/**\n *\n * @param providerOrSigner - The provider or signer to use\n * @param asset - The asset to fetch the value for\n * @param price - The price to fetch the value for\n * @returns\n * @internal\n */\nasync function fetchCurrencyValue(providerOrSigner, asset, price) {\n  const metadata = await fetchCurrencyMetadata(providerOrSigner, asset);\n  return {\n    ...metadata,\n    value: BigNumber.from(price),\n    displayValue: utils.formatUnits(price, metadata.decimals)\n  };\n}\n\nexport { ContractEncoder as C, fetchCurrencyValue as a, fetchCurrencyMetadata as f, isNativeToken as i };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;;;;CAIC,GACD,MAAM;IACJ,YAAY,eAAe,CAAE;QAC3B,IAAI,CAAC,eAAe,GAAG;IACzB;IAEA;;;GAGC,GACD,OAAO,EAAE,EAAE,IAAI,EAAE;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI;IAC5E;IAEA;;;;GAIC,GACD,OAAO,EAAE,EAAE,WAAW,EAAE;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI;IAC5E;IACA,aAAa,EAAE,EAAE,WAAW,EAAE;QAC5B,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI;IAC9E;AACF;AAEA,SAAS,cAAc,YAAY;IACjC,OAAO,aAAa,WAAW,OAAO,4KAAA,CAAA,KAAoB,IAAI,aAAa,WAAW,OAAO,wMAAA,CAAA,YAAS,CAAC,WAAW;AACpH;AAEA;;;;;;CAMC,GACD,eAAe,sBAAsB,QAAQ,EAAE,KAAK;IAClD,IAAI,cAAc,QAAQ;QACxB,MAAM,UAAU,MAAM,SAAS,UAAU;QACzC,MAAM,cAAc,CAAA,GAAA,4KAAA,CAAA,KAAuB,AAAD,EAAE,QAAQ,OAAO;QAC3D,OAAO;YACL,MAAM,YAAY,IAAI;YACtB,QAAQ,YAAY,MAAM;YAC1B,UAAU,YAAY,QAAQ;QAChC;IACF,OAAO;QACL,MAAM,mBAAmB,CAAC,8JAAwE,EAAE,OAAO;QAC3G,MAAM,QAAQ,IAAI,mKAAA,CAAA,WAAQ,CAAC,OAAO,kBAAkB;QACpD,MAAM,CAAC,MAAM,QAAQ,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;YAAC,MAAM,IAAI;YAAI,MAAM,MAAM;YAAI,MAAM,QAAQ;SAAG;QACnG,OAAO;YACL;YACA;YACA;QACF;IACF;AACF;AAEA;;;;;;;CAOC,GACD,eAAe,mBAAmB,gBAAgB,EAAE,KAAK,EAAE,KAAK;IAC9D,MAAM,WAAW,MAAM,sBAAsB,kBAAkB;IAC/D,OAAO;QACL,GAAG,QAAQ;QACX,OAAO,uKAAA,CAAA,YAAS,CAAC,IAAI,CAAC;QACtB,cAAc,8KAAA,CAAA,QAAK,CAAC,WAAW,CAAC,OAAO,SAAS,QAAQ;IAC1D;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10672, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/normalizePriceValue-c41e4879.esm.js"],"sourcesContent":["import { cB as AmountSchema } from './index-6d283666.esm.js';\nimport { utils } from 'ethers';\nimport { f as fetchCurrencyMetadata } from './fetchCurrencyValue-473fae98.esm.js';\n\n/**\n *\n * @param provider - The provider to use\n * @param inputPrice - The input price to normalize\n * @param currencyAddress - The currency address to normalize the price for\n * @returns\n * @internal\n */\nasync function normalizePriceValue(provider, inputPrice, currencyAddress) {\n  const metadata = await fetchCurrencyMetadata(provider, currencyAddress);\n  return utils.parseUnits(AmountSchema.parse(inputPrice), metadata.decimals);\n}\n\nexport { normalizePriceValue as n };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA;;;;;;;CAOC,GACD,eAAe,oBAAoB,QAAQ,EAAE,UAAU,EAAE,eAAe;IACtE,MAAM,WAAW,MAAM,CAAA,GAAA,yLAAA,CAAA,IAAqB,AAAD,EAAE,UAAU;IACvD,OAAO,8KAAA,CAAA,QAAK,CAAC,UAAU,CAAC,4KAAA,CAAA,KAAY,CAAC,KAAK,CAAC,aAAa,SAAS,QAAQ;AAC3E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10699, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/deployContractDeterministic-86dc79b9.esm.js"],"sourcesContent":["import { dI as caches, aB as getCreate2FactoryAddress, aO as fetchAndCacheDeployMetadata, aN as fetchPublishedContractFromPolygon, aJ as computeDeploymentInfo, aw as GAS_LIMIT_FOR_DEPLOYER, ay as DEPLOYER_ABI, ax as DEPLOYER_BYTECODE, az as isContractDeployed } from './index-6d283666.esm.js';\nimport { utils, ContractFactory, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\n\nfunction getFunctionSignature(fnInputs) {\n  return \"(\" + fnInputs.map(i => {\n    return i.type === \"tuple\" ? getFunctionSignature(i.components) : i.type === \"tuple[]\" ? getFunctionSignature(i.components) + `[]` : i.type;\n  }).join(\",\") + \")\";\n}\nfunction generatePluginFunctions(pluginAddress, pluginAbi) {\n  const pluginInterface = new utils.Interface(pluginAbi);\n  const pluginFunctions = [];\n  // TODO - filter out common functions like _msgSender(), contractType(), etc.\n  for (const fnFragment of Object.values(pluginInterface.functions)) {\n    const fn = pluginInterface.getFunction(pluginInterface.getSighash(fnFragment));\n    if (fn.name.includes(\"_\")) {\n      continue;\n    }\n    pluginFunctions.push({\n      functionSelector: pluginInterface.getSighash(fn),\n      functionSignature: fn.name + getFunctionSignature(fn.inputs),\n      pluginAddress: pluginAddress\n    });\n  }\n  return pluginFunctions;\n}\nfunction generateExtensionFunctions(extensionAbi) {\n  const extensionInterface = new utils.Interface(extensionAbi);\n  const extensionFunctions = [];\n  // TODO - filter out common functions like _msgSender(), contractType(), etc.\n\n  for (const fnFragment of Object.values(extensionInterface.functions)) {\n    const fn = extensionInterface.getFunction(extensionInterface.getSighash(fnFragment));\n    if (fn.name.startsWith(\"_\")) {\n      continue;\n    }\n    extensionFunctions.push({\n      functionSelector: extensionInterface.getSighash(fn),\n      functionSignature: fn.name + getFunctionSignature(fn.inputs)\n    });\n  }\n  return extensionFunctions;\n}\n\n/**\n *\n * Returns txn data for keyless deploys as well as signer deploys.\n * Also provides a list of infra contracts to deploy.\n *\n * @internal\n *\n * @param metadataUri - The metadata uri to use\n * @param storage - The storage to use\n * @param provider - The provider to use\n * @param create2Factory - The create2 factory to use\n */\nasync function getDeploymentInfo(metadataUri, storage, provider, create2Factory, clientId, secretKey) {\n  caches.deploymentPresets = {};\n  const [create2FactoryAddress, {\n    compilerMetadata,\n    extendedMetadata\n  }] = await Promise.all([create2Factory ? create2Factory : getCreate2FactoryAddress(provider), fetchAndCacheDeployMetadata(metadataUri, storage)]);\n  const customParams = {};\n  const finalDeploymentInfo = [];\n  const defaultExtensions = extendedMetadata?.defaultExtensions;\n  if (extendedMetadata?.routerType === \"plugin\" && defaultExtensions) {\n    invariant(clientId || secretKey, \"Require Client Id / Secret Key\");\n    const publishedExtensions = await Promise.all(defaultExtensions.map(e => {\n      return fetchPublishedContractFromPolygon(e.publisherAddress, e.extensionName, e.extensionVersion, storage, clientId, secretKey);\n    }));\n    const pluginMetadata = (await Promise.all(publishedExtensions.map(c => fetchAndCacheDeployMetadata(c.metadataUri, storage)))).map(fetchedMetadata => fetchedMetadata.compilerMetadata);\n\n    // get deployment info for all plugins\n    const pluginDeploymentInfo = await Promise.all(pluginMetadata.map(metadata => computeDeploymentInfo(\"plugin\", provider, storage, create2FactoryAddress, {\n      metadata: metadata\n    }, clientId, secretKey)));\n\n    // create constructor param input for PluginMap\n    const mapInput = [];\n    pluginMetadata.forEach((metadata, index) => {\n      const input = generatePluginFunctions(pluginDeploymentInfo[index].transaction.predictedAddress, metadata.abi);\n      mapInput.push(...input);\n    });\n\n    // get PluginMap deployment transaction\n    const pluginMapTransaction = await computeDeploymentInfo(\"plugin\", provider, storage, create2FactoryAddress, {\n      contractName: \"PluginMap\",\n      constructorParams: {\n        _pluginsToAdd: {\n          value: mapInput\n        }\n      }\n    }, clientId, secretKey);\n\n    // address of PluginMap is input for MarketplaceV3's constructor\n    customParams[\"_pluginMap\"] = {\n      value: pluginMapTransaction.transaction.predictedAddress\n    };\n    finalDeploymentInfo.push(...pluginDeploymentInfo, pluginMapTransaction);\n  } else if (extendedMetadata?.routerType === \"dynamic\" && defaultExtensions) {\n    invariant(clientId || secretKey, \"Require Client Id / Secret Key\");\n    const publishedExtensions = await Promise.all(defaultExtensions.map(e => {\n      return fetchPublishedContractFromPolygon(e.publisherAddress, e.extensionName, e.extensionVersion, storage, clientId, secretKey);\n    }));\n    const extensionMetadata = (await Promise.all(publishedExtensions.map(async c => {\n      return fetchAndCacheDeployMetadata(c.metadataUri, storage);\n    }))).map(fetchedMetadata => fetchedMetadata.compilerMetadata);\n\n    // get deployment info for all extensions\n    const extensionDeploymentInfo = await Promise.all(extensionMetadata.map(metadata => computeDeploymentInfo(\"extension\", provider, storage, create2FactoryAddress, {\n      metadata: metadata\n    }, clientId, secretKey)));\n\n    // create constructor param input for BaseRouter\n    const routerInput = [];\n    extensionMetadata.forEach((metadata, index) => {\n      const extensionFunctions = generateExtensionFunctions(metadata.abi);\n      routerInput.push({\n        metadata: {\n          name: metadata.name,\n          metadataURI: \"\",\n          implementation: extensionDeploymentInfo[index].transaction.predictedAddress\n        },\n        functions: extensionFunctions\n      });\n    });\n\n    // routerInput as constructor param for BaseRouter\n    customParams[\"_extensions\"] = {\n      value: routerInput\n    };\n    finalDeploymentInfo.push(...extensionDeploymentInfo);\n  }\n  const [implementationDeployInfo, factoryInfo] = await Promise.all([computeDeploymentInfo(\"implementation\", provider, storage, create2FactoryAddress, {\n    metadata: compilerMetadata,\n    constructorParams: customParams\n  }, clientId, secretKey),\n  // get clone factory\n  computeDeploymentInfo(\"infra\", provider, storage, create2FactoryAddress, {\n    contractName: \"TWCloneFactory\"\n  }, clientId, secretKey)]);\n  finalDeploymentInfo.push(factoryInfo);\n  finalDeploymentInfo.push(...Object.values(caches.deploymentPresets));\n  finalDeploymentInfo.push(implementationDeployInfo);\n  return finalDeploymentInfo;\n}\n\n/**\n * @internal\n */\nfunction estimateGasForDeploy(initCode) {\n  let gasLimit = utils.arrayify(initCode).map(x => x === 0 ? 4 : 16).reduce((sum, x) => sum + x) + 200 * initCode.length / 2 + 6 * Math.ceil(initCode.length / 64) + 32000 + 21000;\n  gasLimit = Math.floor(gasLimit * 64 / 63);\n  return gasLimit;\n}\n\n/**\n * @internal\n */\nfunction createTransactionBatches(transactions) {\n  let upperGasLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : GAS_LIMIT_FOR_DEPLOYER;\n  transactions = transactions.filter(tx => {\n    return tx.data.length > 0;\n  });\n  if (transactions.length === 0) {\n    return [];\n  }\n  const transactionBatches = [];\n  let sum = 0;\n  let batch = [];\n  transactions.forEach(tx => {\n    const gas = estimateGasForDeploy(tx.data);\n    if (sum + gas > upperGasLimit) {\n      if (batch.length === 0) {\n        transactionBatches.push([tx]);\n      } else {\n        transactionBatches.push(batch);\n        sum = gas;\n        batch = [tx];\n      }\n    } else {\n      sum += gas;\n      batch.push(tx);\n    }\n  });\n  if (batch.length > 0) {\n    transactionBatches.push(batch);\n  }\n  return transactionBatches;\n}\n\n/**\n * @internal\n */\nasync function deployWithThrowawayDeployer(signer, transactions, options) {\n  const transactionBatches = createTransactionBatches(transactions);\n  if (transactionBatches.length === 0) {\n    return;\n  }\n  options?.notifier?.(\"deploying\", \"infra\");\n  const deployTxns = await Promise.all(transactionBatches.map(txBatch => {\n    // Using the deployer contract, send the deploy transactions to common factory with a signer\n    const deployer = new ContractFactory(DEPLOYER_ABI, DEPLOYER_BYTECODE).connect(signer).deploy(txBatch);\n    return deployer;\n  }));\n  await Promise.all(deployTxns.map(tx => {\n    return tx.deployed();\n  }));\n  options?.notifier?.(\"deployed\", \"infra\");\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @internal\n *\n * @param signer - The signer to use\n * @param bytecode - The bytecode to deploy\n * @param encodedArgs - The encoded constructor args to use\n * @param create2FactoryAddress - The create2 factory address to use\n */\nasync function deployContractDeterministic(signer, transaction, options) {\n  let gasLimit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = await isContractDeployed(transaction.predictedAddress, signer.provider);\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${transaction.predictedAddress}`);\n    const tx = {\n      to: transaction.to,\n      data: transaction.data\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    options?.notifier?.(\"deploying\", \"preset\");\n    await (await signer.sendTransaction(tx)).wait();\n    options?.notifier?.(\"deployed\", \"preset\");\n  }\n}\n\nexport { deployWithThrowawayDeployer as a, generateExtensionFunctions as b, createTransactionBatches as c, deployContractDeterministic as d, estimateGasForDeploy as e, getDeploymentInfo as g };\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;;;;AAEA,SAAS,qBAAqB,QAAQ;IACpC,OAAO,MAAM,SAAS,GAAG,CAAC,CAAA;QACxB,OAAO,EAAE,IAAI,KAAK,UAAU,qBAAqB,EAAE,UAAU,IAAI,EAAE,IAAI,KAAK,YAAY,qBAAqB,EAAE,UAAU,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI;IAC5I,GAAG,IAAI,CAAC,OAAO;AACjB;AACA,SAAS,wBAAwB,aAAa,EAAE,SAAS;IACvD,MAAM,kBAAkB,IAAI,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC;IAC5C,MAAM,kBAAkB,EAAE;IAC1B,6EAA6E;IAC7E,KAAK,MAAM,cAAc,OAAO,MAAM,CAAC,gBAAgB,SAAS,EAAG;QACjE,MAAM,KAAK,gBAAgB,WAAW,CAAC,gBAAgB,UAAU,CAAC;QAClE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;YACzB;QACF;QACA,gBAAgB,IAAI,CAAC;YACnB,kBAAkB,gBAAgB,UAAU,CAAC;YAC7C,mBAAmB,GAAG,IAAI,GAAG,qBAAqB,GAAG,MAAM;YAC3D,eAAe;QACjB;IACF;IACA,OAAO;AACT;AACA,SAAS,2BAA2B,YAAY;IAC9C,MAAM,qBAAqB,IAAI,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC;IAC/C,MAAM,qBAAqB,EAAE;IAC7B,6EAA6E;IAE7E,KAAK,MAAM,cAAc,OAAO,MAAM,CAAC,mBAAmB,SAAS,EAAG;QACpE,MAAM,KAAK,mBAAmB,WAAW,CAAC,mBAAmB,UAAU,CAAC;QACxE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;YAC3B;QACF;QACA,mBAAmB,IAAI,CAAC;YACtB,kBAAkB,mBAAmB,UAAU,CAAC;YAChD,mBAAmB,GAAG,IAAI,GAAG,qBAAqB,GAAG,MAAM;QAC7D;IACF;IACA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,eAAe,kBAAkB,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS;IAClG,4KAAA,CAAA,KAAM,CAAC,iBAAiB,GAAG,CAAC;IAC5B,MAAM,CAAC,uBAAuB,EAC5B,gBAAgB,EAChB,gBAAgB,EACjB,CAAC,GAAG,MAAM,QAAQ,GAAG,CAAC;QAAC,iBAAiB,iBAAiB,CAAA,GAAA,4KAAA,CAAA,KAAwB,AAAD,EAAE;QAAW,CAAA,GAAA,4KAAA,CAAA,KAA2B,AAAD,EAAE,aAAa;KAAS;IAChJ,MAAM,eAAe,CAAC;IACtB,MAAM,sBAAsB,EAAE;IAC9B,MAAM,oBAAoB,kBAAkB;IAC5C,IAAI,kBAAkB,eAAe,YAAY,mBAAmB;QAClE,CAAA,GAAA,qKAAA,CAAA,UAAS,AAAD,EAAE,YAAY,WAAW;QACjC,MAAM,sBAAsB,MAAM,QAAQ,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAA;YAClE,OAAO,CAAA,GAAA,4KAAA,CAAA,KAAiC,AAAD,EAAE,EAAE,gBAAgB,EAAE,EAAE,aAAa,EAAE,EAAE,gBAAgB,EAAE,SAAS,UAAU;QACvH;QACA,MAAM,iBAAiB,CAAC,MAAM,QAAQ,GAAG,CAAC,oBAAoB,GAAG,CAAC,CAAA,IAAK,CAAA,GAAA,4KAAA,CAAA,KAA2B,AAAD,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAC,CAAA,kBAAmB,gBAAgB,gBAAgB;QAErL,sCAAsC;QACtC,MAAM,uBAAuB,MAAM,QAAQ,GAAG,CAAC,eAAe,GAAG,CAAC,CAAA,WAAY,CAAA,GAAA,4KAAA,CAAA,KAAqB,AAAD,EAAE,UAAU,UAAU,SAAS,uBAAuB;gBACtJ,UAAU;YACZ,GAAG,UAAU;QAEb,+CAA+C;QAC/C,MAAM,WAAW,EAAE;QACnB,eAAe,OAAO,CAAC,CAAC,UAAU;YAChC,MAAM,QAAQ,wBAAwB,oBAAoB,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,SAAS,GAAG;YAC5G,SAAS,IAAI,IAAI;QACnB;QAEA,uCAAuC;QACvC,MAAM,uBAAuB,MAAM,CAAA,GAAA,4KAAA,CAAA,KAAqB,AAAD,EAAE,UAAU,UAAU,SAAS,uBAAuB;YAC3G,cAAc;YACd,mBAAmB;gBACjB,eAAe;oBACb,OAAO;gBACT;YACF;QACF,GAAG,UAAU;QAEb,gEAAgE;QAChE,YAAY,CAAC,aAAa,GAAG;YAC3B,OAAO,qBAAqB,WAAW,CAAC,gBAAgB;QAC1D;QACA,oBAAoB,IAAI,IAAI,sBAAsB;IACpD,OAAO,IAAI,kBAAkB,eAAe,aAAa,mBAAmB;QAC1E,CAAA,GAAA,qKAAA,CAAA,UAAS,AAAD,EAAE,YAAY,WAAW;QACjC,MAAM,sBAAsB,MAAM,QAAQ,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAA;YAClE,OAAO,CAAA,GAAA,4KAAA,CAAA,KAAiC,AAAD,EAAE,EAAE,gBAAgB,EAAE,EAAE,aAAa,EAAE,EAAE,gBAAgB,EAAE,SAAS,UAAU;QACvH;QACA,MAAM,oBAAoB,CAAC,MAAM,QAAQ,GAAG,CAAC,oBAAoB,GAAG,CAAC,OAAM;YACzE,OAAO,CAAA,GAAA,4KAAA,CAAA,KAA2B,AAAD,EAAE,EAAE,WAAW,EAAE;QACpD,GAAG,EAAE,GAAG,CAAC,CAAA,kBAAmB,gBAAgB,gBAAgB;QAE5D,yCAAyC;QACzC,MAAM,0BAA0B,MAAM,QAAQ,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAA,WAAY,CAAA,GAAA,4KAAA,CAAA,KAAqB,AAAD,EAAE,aAAa,UAAU,SAAS,uBAAuB;gBAC/J,UAAU;YACZ,GAAG,UAAU;QAEb,gDAAgD;QAChD,MAAM,cAAc,EAAE;QACtB,kBAAkB,OAAO,CAAC,CAAC,UAAU;YACnC,MAAM,qBAAqB,2BAA2B,SAAS,GAAG;YAClE,YAAY,IAAI,CAAC;gBACf,UAAU;oBACR,MAAM,SAAS,IAAI;oBACnB,aAAa;oBACb,gBAAgB,uBAAuB,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB;gBAC7E;gBACA,WAAW;YACb;QACF;QAEA,kDAAkD;QAClD,YAAY,CAAC,cAAc,GAAG;YAC5B,OAAO;QACT;QACA,oBAAoB,IAAI,IAAI;IAC9B;IACA,MAAM,CAAC,0BAA0B,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;QAAC,CAAA,GAAA,4KAAA,CAAA,KAAqB,AAAD,EAAE,kBAAkB,UAAU,SAAS,uBAAuB;YACnJ,UAAU;YACV,mBAAmB;QACrB,GAAG,UAAU;QACb,oBAAoB;QACpB,CAAA,GAAA,4KAAA,CAAA,KAAqB,AAAD,EAAE,SAAS,UAAU,SAAS,uBAAuB;YACvE,cAAc;QAChB,GAAG,UAAU;KAAW;IACxB,oBAAoB,IAAI,CAAC;IACzB,oBAAoB,IAAI,IAAI,OAAO,MAAM,CAAC,4KAAA,CAAA,KAAM,CAAC,iBAAiB;IAClE,oBAAoB,IAAI,CAAC;IACzB,OAAO;AACT;AAEA;;CAEC,GACD,SAAS,qBAAqB,QAAQ;IACpC,IAAI,WAAW,8KAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAA,IAAK,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,KAAK,MAAM,SAAS,MAAM,GAAG,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,MAAM,GAAG,MAAM,QAAQ;IAC3K,WAAW,KAAK,KAAK,CAAC,WAAW,KAAK;IACtC,OAAO;AACT;AAEA;;CAEC,GACD,SAAS,yBAAyB,YAAY;IAC5C,IAAI,gBAAgB,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG,4KAAA,CAAA,KAAsB;IAC9G,eAAe,aAAa,MAAM,CAAC,CAAA;QACjC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG;IAC1B;IACA,IAAI,aAAa,MAAM,KAAK,GAAG;QAC7B,OAAO,EAAE;IACX;IACA,MAAM,qBAAqB,EAAE;IAC7B,IAAI,MAAM;IACV,IAAI,QAAQ,EAAE;IACd,aAAa,OAAO,CAAC,CAAA;QACnB,MAAM,MAAM,qBAAqB,GAAG,IAAI;QACxC,IAAI,MAAM,MAAM,eAAe;YAC7B,IAAI,MAAM,MAAM,KAAK,GAAG;gBACtB,mBAAmB,IAAI,CAAC;oBAAC;iBAAG;YAC9B,OAAO;gBACL,mBAAmB,IAAI,CAAC;gBACxB,MAAM;gBACN,QAAQ;oBAAC;iBAAG;YACd;QACF,OAAO;YACL,OAAO;YACP,MAAM,IAAI,CAAC;QACb;IACF;IACA,IAAI,MAAM,MAAM,GAAG,GAAG;QACpB,mBAAmB,IAAI,CAAC;IAC1B;IACA,OAAO;AACT;AAEA;;CAEC,GACD,eAAe,4BAA4B,MAAM,EAAE,YAAY,EAAE,OAAO;IACtE,MAAM,qBAAqB,yBAAyB;IACpD,IAAI,mBAAmB,MAAM,KAAK,GAAG;QACnC;IACF;IACA,SAAS,WAAW,aAAa;IACjC,MAAM,aAAa,MAAM,QAAQ,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAA;QAC1D,4FAA4F;QAC5F,MAAM,WAAW,IAAI,mKAAA,CAAA,kBAAe,CAAC,4KAAA,CAAA,KAAY,EAAE,4KAAA,CAAA,KAAiB,EAAE,OAAO,CAAC,QAAQ,MAAM,CAAC;QAC7F,OAAO;IACT;IACA,MAAM,QAAQ,GAAG,CAAC,WAAW,GAAG,CAAC,CAAA;QAC/B,OAAO,GAAG,QAAQ;IACpB;IACA,SAAS,WAAW,YAAY;AAClC;AAEA;;;;;;;;;;CAUC,GACD,eAAe,4BAA4B,MAAM,EAAE,WAAW,EAAE,OAAO;IACrE,IAAI,WAAW,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IACnF,2DAA2D;IAC3D,CAAA,GAAA,qKAAA,CAAA,UAAS,AAAD,EAAE,OAAO,QAAQ,EAAE;IAC3B,MAAM,mBAAmB,MAAM,CAAA,GAAA,4KAAA,CAAA,KAAkB,AAAD,EAAE,YAAY,gBAAgB,EAAE,OAAO,QAAQ;IAC/F,IAAI,CAAC,kBAAkB;QACrB,QAAQ,KAAK,CAAC,CAAC,2CAA2C,EAAE,YAAY,gBAAgB,EAAE;QAC1F,MAAM,KAAK;YACT,IAAI,YAAY,EAAE;YAClB,MAAM,YAAY,IAAI;QACxB;QACA,IAAI;YACF,MAAM,OAAO,WAAW,CAAC;QAC3B,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,mDAAmD;YACjE,GAAG,QAAQ,GAAG,uKAAA,CAAA,YAAS,CAAC,IAAI,CAAC;QAC/B;QACA,SAAS,WAAW,aAAa;QACjC,MAAM,CAAC,MAAM,OAAO,eAAe,CAAC,GAAG,EAAE,IAAI;QAC7C,SAAS,WAAW,YAAY;IAClC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10950, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/sdk-c725ec97.esm.js"],"sourcesContent":["import { b3 as getChainProvider, aN as fetchPublishedContractFromPolygon, aM as THIRDWEB_DEPLOYER$1, aO as fetchAndCacheDeployMetadata, aB as getCreate2FactoryAddress, aK as encodeConstructorParamsForImplementation, aJ as computeDeploymentInfo, az as isContractDeployed, ab as resolveImplementation, K as fetchContractMetadataFromAddress, a6 as extractConstructorParamsFromAbi, a9 as resolveContractUriFromAddress, aV as getContractPublisherAddress, af as fetchExtendedReleaseMetadata, cw as RPCConnectionHandler, aQ as resolveAddress, Y as getDefaultGasOverrides, aR as signTypedDataInternal, aX as ChainId, cx as ContractWrapper, a_ as NATIVE_TOKEN_ADDRESS, cy as extractFeatures, ag as detectFeatures, aW as getMultichainRegistryAddress, bo as AbiSchema, aC as computeCreate2FactoryTransaction, aT as CONTRACT_ADDRESSES, cz as AddressZero, P as PackInitializer, b as MarketplaceV3Initializer, M as MarketplaceInitializer, f as SplitInitializer, V as VoteInitializer, g as TokenInitializer, T as TokenDropInitializer, a as EditionInitializer, E as EditionDropInitializer, c as MultiwrapInitializer, e as SignatureDropInitializer, N as NFTCollectionInitializer, d as NFTDropInitializer, aH as computeForwarderAddress, h as PREBUILT_CONTRACTS_MAP, k as getContractName, bM as CommonPlatformFeeSchema, bL as CommonPrimarySaleSchema, bN as CommonTrustedForwarderSchema, bI as CommonContractSchema, bK as CommonRoyaltySchema, bO as CommonSymbolSchema, aF as computeDeploymentAddress, aE as getInitBytecodeWithSalt, aY as setSupportedChains, ap as getCompositeABI, j as getContractTypeForRemoteName, b8 as getSignerAndProvider, b6 as isChainConfig, aU as getContractAddressByChainId, cA as getProcessEnv, bY as DropErc721ContractSchema, i as PREBUILT_CONTRACTS_APPURI_MAP, b2 as EventType } from './index-6d283666.esm.js';\nimport { isBrowser, ThirdwebStorage } from '@thirdweb-dev/storage';\nimport { C as ContractPublisher } from './contract-publisher-69217d59.esm.js';\nimport TWRegistryABI from '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json';\nimport TWRegistryRouterABI from '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json';\nimport { utils, Contract, Wallet, constants, BigNumber, ContractFactory as ContractFactory$1 } from 'ethers';\nimport { b as buildTransactionFunction, T as Transaction, a as buildDeployTransactionFunction, D as DeployTransaction } from './transactions-89262635.esm.js';\nimport { i as isNativeToken, a as fetchCurrencyValue, C as ContractEncoder } from './fetchCurrencyValue-473fae98.esm.js';\nimport EventEmitter from 'eventemitter3';\nimport invariant from 'tiny-invariant';\nimport { n as normalizePriceValue } from './normalizePriceValue-c41e4879.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nimport { g as getDeploymentInfo, c as createTransactionBatches, a as deployWithThrowawayDeployer, d as deployContractDeterministic } from './deployContractDeterministic-86dc79b9.esm.js';\nimport { f as fetchSourceFilesFromMetadata } from './fetchSourceFilesFromMetadata-f1d39e93.esm.js';\nimport TWFactoryAbi from '@thirdweb-dev/contracts-js/dist/abis/TWFactory.json';\n\nlet alreadyChecked = false;\n\n/**\n * @internal\n */\nfunction checkClientIdOrSecretKey(message, clientId, secretKey) {\n  if (alreadyChecked) {\n    return;\n  }\n  alreadyChecked = true;\n  if (clientId || secretKey) {\n    return;\n  }\n  console.warn(message);\n}\n\n/**\n *\n * @internal\n * @param contractName - The name of the contract to predict the address for\n * @param chainId - The chain id to use\n * @param storage - The storage to use\n */\nasync function getEncodedConstructorParamsForThirdwebContract(contractName, chainId, storage) {\n  let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n  let clientId = arguments.length > 4 ? arguments[4] : undefined;\n  let secretKey = arguments.length > 5 ? arguments[5] : undefined;\n  let constructorParamMap = arguments.length > 6 ? arguments[6] : undefined;\n  const provider = getChainProvider(chainId, {\n    clientId,\n    secretKey\n  });\n  const publishedContract = await fetchPublishedContractFromPolygon(THIRDWEB_DEPLOYER$1, contractName, contractVersion, storage, clientId, secretKey);\n  const publishUri = publishedContract.metadataUri;\n  const metadata = await fetchAndCacheDeployMetadata(publishUri, storage);\n  const create2Factory = await getCreate2FactoryAddress(provider);\n  invariant(create2Factory, \"Thirdweb stack not found\");\n  const {\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishUri, storage);\n  let encodedArgs;\n\n  // if pluginMetadata is not empty, then it's a plugin-pattern router contract\n  if (extendedMetadata?.routerType === \"plugin\" || extendedMetadata?.routerType === \"dynamic\") {\n    const deploymentInfo = await getDeploymentInfo(publishUri, storage, provider, create2Factory, clientId, secretKey);\n    encodedArgs = deploymentInfo.find(contract => contract.type === \"implementation\")?.encodedArgs;\n  } else {\n    encodedArgs = await encodeConstructorParamsForImplementation(metadata.compilerMetadata, provider, storage, create2Factory, constructorParamMap, clientId, secretKey);\n  }\n  return encodedArgs;\n}\n\n/**\n * @deploy\n * @public\n * @param contractName - The name of the contract to predict the address for\n * @param chainId - The chain id to use\n * @param storage - The storage to use\n */\nasync function predictThirdwebContractAddress(contractName, chainId, storage) {\n  let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n  let clientId = arguments.length > 4 ? arguments[4] : undefined;\n  let secretKey = arguments.length > 5 ? arguments[5] : undefined;\n  const provider = getChainProvider(chainId, {\n    clientId,\n    secretKey\n  });\n  const publishedContract = await fetchPublishedContractFromPolygon(THIRDWEB_DEPLOYER$1, contractName, contractVersion, storage, clientId, secretKey);\n  const publishUri = publishedContract.metadataUri;\n  const create2Factory = await getCreate2FactoryAddress(provider);\n  invariant(create2Factory, \"Thirdweb stack not found\");\n  const {\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishUri, storage);\n  if (extendedMetadata?.routerType === \"plugin\" || extendedMetadata?.routerType === \"dynamic\") {\n    const deploymentInfo = await getDeploymentInfo(publishUri, storage, provider, create2Factory, clientId, secretKey);\n    const implementation = deploymentInfo.find(contract => contract.type === \"implementation\")?.transaction.predictedAddress;\n    invariant(implementation, \"Error computing address for plugin router\");\n    return implementation;\n  }\n  const implementation = await computeDeploymentInfo(\"implementation\", provider, storage, create2Factory, {\n    contractName: contractName\n  }, clientId, secretKey);\n  return implementation.transaction.predictedAddress;\n}\n\n/**\n * @deploy\n * @public\n * @param contractName - The name of the contract to predict the address for\n * @param chainId - The chain id to use\n * @param storage - The storage to use\n * @param clientId - The client id to use\n */\nasync function getThirdwebContractAddress(contractName, chainId, storage) {\n  let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n  let clientId = arguments.length > 4 ? arguments[4] : undefined;\n  let secretKey = arguments.length > 5 ? arguments[5] : undefined;\n  const provider = getChainProvider(chainId, {\n    clientId: clientId,\n    secretKey: secretKey\n  });\n  const contractAddress = await predictThirdwebContractAddress(contractName, chainId, storage, contractVersion, clientId, secretKey);\n  const isDeployed = await isContractDeployed(contractAddress, provider);\n  invariant(isDeployed, \"Contract not deployed yet\");\n  return contractAddress;\n}\n\nconst VerificationStatus = {\n  FAILED: \"Fail - Unable to verify\",\n  SUCCESS: \"Pass - Verified\",\n  PENDING: \"Pending in queue\",\n  IN_PROGRESS: \"In progress\",\n  ALREADY_VERIFIED: \"Contract source code already verified\",\n  AUTOMATICALLY_VERIFIED: \"Already Verified\"\n};\n\nconst RequestStatus = {\n  OK: \"1\",\n  NOTOK: \"0\"\n};\n\n//\n// ==================================\n// ======== Core Functions ==========\n// ==================================\n//\n\n/**\n * @public\n *\n * Verifies a Thirdweb Prebuilt Contract, e.g. Marketplace, DropERC721, etc\n *\n * @example\n * ```javascript\n *\n * const explorerAPIUrl = \"\" // e.g. https://api.etherscan.io/api\n * const explorerAPIKey = \"\" // Generate API key on the explorer\n * const chainId = 1 // Change according to the network\n *\n * await sdk.verifier.verifyThirdwebPrebuiltImplementation(\n *   \"DropERC721\",\n *   chainId,\n *   explorerAPIUrl,\n *   explorerAPIKey,\n *   storage // this could be used from the SDK instance, e.g. sdk.storage\n * );\n * ```\n * @param contractName - Name of the contract to verify\n * @param chainId - Chain ID of the network\n * @param explorerAPIUrl - Explorer API URL\n * @param explorerAPIKey - Explorer API Key\n * @param storage - Storage instance\n */\nasync function verifyThirdwebPrebuiltImplementation(contractName, chainId, explorerAPIUrl, explorerAPIKey, storage) {\n  let contractVersion = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"latest\";\n  let clientId = arguments.length > 6 ? arguments[6] : undefined;\n  let secretKey = arguments.length > 7 ? arguments[7] : undefined;\n  let constructorArgs = arguments.length > 8 ? arguments[8] : undefined;\n  const contractAddress = await getThirdwebContractAddress(contractName, chainId, storage, contractVersion, clientId, secretKey);\n  const encodedArgs = await getEncodedConstructorParamsForThirdwebContract(contractName, chainId, storage, contractVersion, clientId, secretKey, constructorArgs);\n  console.info(`Verifying ${contractName} at address ${contractAddress}`);\n  const guid = await verify(contractAddress, chainId, explorerAPIUrl, explorerAPIKey, storage, encodedArgs?.toString().replace(\"0x\", \"\"));\n  return guid;\n}\n\n/**\n * @public\n *\n * Verifies any contract\n *\n * @example\n * ```javascript\n *\n * const contractAddress = \"\"\n * const explorerAPIUrl = \"\" // e.g. https://api.etherscan.io/api\n * const explorerAPIKey = \"\" // Generate API key on the explorer\n * const chainId = 1 // Change according to the network\n *\n * await sdk.verifier.verify(\n *   contractAddress,\n *   chainId,\n *   explorerAPIUrl,\n *   explorerAPIKey,\n *   storage // this could be used from the SDK instance, e.g. sdk.storage\n * );\n * ```\n * @param contractAddress - Address of the contract to verify\n * @param chainId - Chain ID of the network\n * @param explorerAPIUrl - Explorer API URL\n * @param explorerAPIKey - Explorer API Key\n * @param storage - Storage instance\n */\nasync function verify(contractAddress, chainId, explorerAPIUrl, explorerAPIKey, storage, encodedConstructorArgs) {\n  try {\n    const provider = getChainProvider(chainId, {});\n    contractAddress = (await resolveImplementation(contractAddress, provider)).address;\n    const compilerMetadata = await fetchContractMetadataFromAddress(contractAddress, provider, storage);\n    const compilerVersion = compilerMetadata.metadata.compiler.version;\n    const sources = await fetchSourceFilesFromMetadata(compilerMetadata, storage);\n    const sourcesWithUrl = compilerMetadata.metadata.sources;\n    const sourcesWithContents = {};\n    for (const path of Object.keys(sourcesWithUrl)) {\n      const sourceCode = sources.find(source => path === source.filename);\n      if (!sourceCode) {\n        throw new Error(`Could not find source file for ${path}`);\n      }\n      sourcesWithContents[path] = {\n        content: sourceCode.source\n      };\n    }\n    const compilerInput = {\n      language: \"Solidity\",\n      sources: sourcesWithContents,\n      settings: {\n        optimizer: compilerMetadata.metadata.settings.optimizer,\n        evmVersion: compilerMetadata.metadata.settings.evmVersion,\n        remappings: compilerMetadata.metadata.settings.remappings,\n        outputSelection: {\n          \"*\": {\n            \"*\": [\"abi\", \"evm.bytecode\", \"evm.deployedBytecode\", \"evm.methodIdentifiers\", \"metadata\"],\n            \"\": [\"ast\"]\n          }\n        }\n      }\n    };\n    const compilationTarget = compilerMetadata.metadata.settings.compilationTarget;\n    const targets = Object.keys(compilationTarget);\n    const contractPath = targets[0];\n    const encodedArgs = encodedConstructorArgs ? encodedConstructorArgs : await fetchConstructorParams(explorerAPIUrl, explorerAPIKey, contractAddress, compilerMetadata.abi, provider, storage);\n    const requestBody = {\n      apikey: explorerAPIKey,\n      module: \"contract\",\n      action: \"verifysourcecode\",\n      contractaddress: contractAddress,\n      sourceCode: JSON.stringify(compilerInput),\n      codeformat: \"solidity-standard-json-input\",\n      contractname: `${contractPath}:${compilerMetadata.name}`,\n      compilerversion: `v${compilerVersion}`,\n      constructorArguements: encodedArgs\n    };\n    const parameters = new URLSearchParams({\n      ...requestBody\n    });\n    const result = await fetch(explorerAPIUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: parameters.toString()\n    });\n    const data = await result.json();\n    if (data.status === RequestStatus.OK) {\n      return data.result;\n    } else {\n      throw new Error(`${data.result}`);\n    }\n  } catch (e) {\n    throw new Error(e.toString());\n  }\n}\n\n//\n// ==================================\n// ======== Helper Functions ========\n// ==================================\n//\n\n/**\n * @internal\n *\n * Check status of the contract submitted for verification to the explorer\n * @param explorerAPIUrl - Explorer API URL\n * @param explorerAPIKey - Explorer API Key\n * @param guid - GUID of the contract verification\n */\nasync function checkVerificationStatus(explorerAPIUrl, explorerAPIKey, guid) {\n  const endpoint = `${explorerAPIUrl}?module=contract&action=checkverifystatus&guid=${guid}&apikey=${explorerAPIKey}\"`;\n  return new Promise((resolve, reject) => {\n    const intervalId = setInterval(async () => {\n      try {\n        const result = await fetch(endpoint, {\n          method: \"GET\"\n        });\n        const data = await result.json();\n        if (data?.result !== VerificationStatus.PENDING && data?.result !== VerificationStatus.IN_PROGRESS) {\n          clearInterval(intervalId);\n          resolve(data);\n        }\n      } catch (e) {\n        clearInterval(intervalId);\n        reject(e);\n      }\n    }, 3000);\n  });\n}\n\n/**\n * @internal\n *\n * Check if the contract is already verified on etherscan\n * @param contractAddress - Address of the contract to verify\n * @param chainId - Chain ID of the network\n * @param explorerAPIUrl - Explorer API URL\n * @param explorerAPIKey - Explorer API Key\n *\n * @param clientId - Client ID: Get from https://thirdweb.com/create-api-key\n */\nasync function isVerifiedOnEtherscan(contractAddress, chainId, explorerAPIUrl, explorerAPIKey, clientId) {\n  const provider = getChainProvider(chainId, {\n    clientId\n  });\n  invariant(await isContractDeployed(contractAddress, provider), \"Contract not deployed yet.\");\n  const endpoint = `${explorerAPIUrl}?module=contract&action=getsourcecode&address=${contractAddress}&apikey=${explorerAPIKey}\"`;\n  try {\n    const result = await fetch(endpoint, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n      }\n    });\n    const data = await result.json();\n    const etherscanResult = data.result[0];\n    if (etherscanResult.ABI === \"Contract source code not verified\") {\n      return false;\n    }\n    return true;\n  } catch (e) {\n    throw new Error(`Error checking verification for contract ${contractAddress}: ${e}`);\n  }\n}\n\n/**\n * @internal\n *\n * Fetch the deploy transaction from the given contract address and extract the encoded constructor parameters\n * @param explorerAPIUrl - Explorer API URL\n * @param explorerAPIKey - Explorer API Key\n * @param contractAddress - Address of the contract to verify\n * @param abi - ABI of the contract to verify\n * @param provider - Provider instance\n * @param storage - Storage instance\n */\nasync function fetchConstructorParams(explorerAPIUrl, explorerAPIKey, contractAddress, abi, provider, storage) {\n  const constructorParamTypes = extractConstructorParamsFromAbi(abi);\n  if (constructorParamTypes.length === 0) {\n    return \"\";\n  }\n  const result = await fetch(`${explorerAPIUrl}?module=contract&action=getcontractcreation&contractaddresses=${contractAddress}&apikey=${explorerAPIKey}`);\n  const data = await result.json();\n  if (data && data.status === RequestStatus.OK && data.result[0] !== undefined) {\n    const contract = new utils.Interface(abi);\n    const txHash = data.result[0].txHash;\n    let constructorArgs = \"\";\n    if (contract.deploy.inputs.length === 0) {\n      return \"\";\n    }\n    const tx = await provider.getTransaction(txHash);\n    const txDeployBytecode = tx.data;\n\n    // first: attempt to get it from Publish\n    try {\n      const bytecode = await fetchDeployBytecodeFromPublishedContractMetadata(contractAddress, provider, storage);\n      if (bytecode) {\n        // contract was realeased, use the deployable bytecode method (proper solution)\n        const bytecodeHex = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n        let create2FactoryAddress;\n        try {\n          create2FactoryAddress = await getCreate2FactoryAddress(provider);\n        } catch (error) {}\n\n        // if deterministic deploy through create2factory, remove salt length too\n        const create2SaltLength = tx.to === create2FactoryAddress ? 64 : 0;\n        constructorArgs = txDeployBytecode.substring(bytecodeHex.length + create2SaltLength);\n      }\n    } catch (e) {\n      // contracts not published through thirdweb\n    }\n\n    // second: attempt to decode it from solc metadata bytecode\n    if (!constructorArgs) {\n      // couldn't find bytecode from Publish, using regex to locate consturctor args thruogh solc metadata\n      // https://docs.soliditylang.org/en/v0.8.17/metadata.html#encoding-of-the-metadata-hash-in-the-bytecode\n      // {6} = solc version\n      // {4} = 0033, but noticed some contracts have values other than 00 33. (uniswap)\n      const matches = [...txDeployBytecode.matchAll(/(64736f6c6343[\\w]{6}[\\w]{4})(?!.*\\1)(.*)$/g)];\n\n      // regex finds the LAST occurence of solc metadata bytes, result always in same position\n      if (matches.length > 0) {\n        // TODO: we currently don't handle error string embedded in the bytecode, need to strip ascii (upgradeableProxy) in patterns[2]\n        // https://etherscan.io/address/0xee6a57ec80ea46401049e92587e52f5ec1c24785#code\n        constructorArgs = matches[0][2];\n      }\n    }\n\n    // third: attempt to guess it from the ABI inputs\n    if (!constructorArgs) {\n      // TODO: need to guess array / struct properly\n      const constructorParamByteLength = constructorParamTypes.length * 64;\n      constructorArgs = txDeployBytecode.substring(txDeployBytecode.length - constructorParamByteLength);\n    }\n    try {\n      // sanity check that the constructor params are valid\n      // TODO: should we sanity check after each attempt?\n      utils.defaultAbiCoder.decode(contract.deploy.inputs, `0x${constructorArgs}`);\n    } catch (e) {\n      throw new Error(\"Verifying this contract requires it to be published. Run `npx thirdweb publish` to publish this contract, then try again.\");\n    }\n    return constructorArgs;\n  } else {\n    // Could not retrieve constructor parameters, using empty parameters as fallback\n    return \"\";\n  }\n}\n\n/**\n * @internal\n *\n * Fetches the Publish metadata on the ContractPublisher registry (on polygon) for the given contract address (on any chain)\n * @param contractAddress - Address of the contract to verify\n * @param provider - Provider instance\n * @param storage - Storage instance\n * @returns\n */\nasync function fetchDeployBytecodeFromPublishedContractMetadata(contractAddress, provider, storage) {\n  const compilerMetaUri = await resolveContractUriFromAddress(contractAddress, provider);\n  if (compilerMetaUri) {\n    const ContractPublisherAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json')).default;\n    const contract = new Contract(getContractPublisherAddress(), ContractPublisherAbi, getChainProvider(\"polygon\", {}));\n    const publishedMetadataUri = await contract.getPublishedUriFromCompilerUri(compilerMetaUri);\n    if (publishedMetadataUri.length === 0) {\n      throw Error(`Could not resolve published metadata URI from ${compilerMetaUri}`);\n    }\n    const pubmeta = await Promise.all(publishedMetadataUri.filter(uri => uri.length > 0).map(uri => fetchExtendedReleaseMetadata(uri, storage)));\n    return pubmeta.length > 0 ? await (await storage.download(pubmeta[0].bytecodeUri)).text() : undefined;\n  }\n  return undefined;\n}\n\n/**\n * Handles verification of new contracts on any EVM\n * @public\n */\nclass ContractVerifier extends RPCConnectionHandler {\n  constructor(network, options, storage) {\n    super(network, options);\n    this.storage = storage;\n  }\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n  }\n\n  /**\n   * Verifies a Thirdweb contract\n   *\n   * @example\n   * ```javascript\n   *\n   * // Note: If verifying on a network different from the SDK instance's network,\n   * //       update the verifier's chain/network as below:\n   * //\n   * //       sdk.verifier.updateSignerOrProvider(chainId);\n   *\n   * const explorerAPIUrl = \"\" // e.g. https://api.etherscan.io/api\n   * const explorerAPIKey = \"\" // Generate API key on the explorer\n   *\n   * await sdk.verifier.verifyThirdwebContract(\n   *   \"DropERC721\",\n   *   explorerAPIUrl,\n   *   explorerAPIKey,\n   * );\n   * ```\n   * @param contractName - Name of the contract to verify\n   * @param explorerAPIUrl - Explorer API URL\n   * @param explorerAPIKey - Explorer API key\n   */\n  async verifyThirdwebContract(contractName, explorerAPIUrl, explorerAPIKey) {\n    let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n    let constructorArgs = arguments.length > 4 ? arguments[4] : undefined;\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    const guid = await verifyThirdwebPrebuiltImplementation(contractName, chainId, explorerAPIUrl, explorerAPIKey, this.storage, contractVersion, this.options.clientId, this.options.secretKey, constructorArgs);\n    console.info(\"Checking verification status...\");\n    const verificationStatus = await checkVerificationStatus(explorerAPIUrl, explorerAPIKey, guid);\n    console.info(verificationStatus);\n  }\n\n  /**\n   * Verifies any contract\n   *\n   * @example\n   * ```javascript\n   *\n   * // Note: If verifying on a network different from the SDK instance's network,\n   * //       update the verifier's chain/network as below:\n   * //\n   * //       sdk.verifier.updateSignerOrProvider(chainId);\n   *\n   * const contractAddress = \"\"\n   * const explorerAPIUrl = \"\" // e.g. https://api.etherscan.io/api\n   * const explorerAPIKey = \"\" // Generate API key on the explorer\n   *\n   * await sdk.verifier.verifyContract(\n   *   contractAddress,\n   *   explorerAPIUrl,\n   *   explorerAPIKey,\n   * );\n   * ```\n   * @param contractAddress - Address of the contract to verify\n   * @param explorerAPIUrl - Explorer API URL\n   * @param explorerAPIKey - Explorer API key\n   */\n  async verifyContract(contractAddress, explorerAPIUrl, explorerAPIKey, constructorArgs) {\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    let encodedArgs;\n    if (constructorArgs) {\n      const paramTypes = Object.values(constructorArgs).map(arg => {\n        invariant(arg.type, \"Param type is required\");\n        return arg.type;\n      });\n      const paramValues = Object.values(constructorArgs).map(arg => {\n        return arg.value;\n      });\n      encodedArgs = utils.defaultAbiCoder.encode(paramTypes, paramValues);\n    }\n    const guid = await verify(contractAddress, chainId, explorerAPIUrl, explorerAPIKey, this.storage, encodedArgs);\n    console.info(\"Checking verification status...\");\n    const verificationStatus = await checkVerificationStatus(explorerAPIUrl, explorerAPIKey, guid);\n    console.info(verificationStatus);\n  }\n}\n\n/**\n * publicly available wallet for local nodes\n */\nconst LOCAL_NODE_PKEY = \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\";\n\n/**\n *\n * {@link UserWallet} events that you can subscribe to using `sdk.wallet.events`.\n *\n * @public\n */\n\n/**\n * Connect and Interact with a user wallet\n * @example\n * ```javascript\n * const balance = await sdk.wallet.balance();\n * ```\n * @public\n */\nclass UserWallet {\n  events = new EventEmitter();\n  constructor(network, options, storage) {\n    this.connection = new RPCConnectionHandler(network, options);\n    this.options = options;\n    this.events = new EventEmitter();\n    this.storage = storage;\n  }\n\n  // TODO disconnect()\n  // TODO switchChain()\n  // TODO tokens()\n  // TODO NFTs()\n\n  // TODO this will become the source of truth of the signer and have every contract read from it\n  // TODO separate signer and provider logics\n  connect(network) {\n    this.connection.updateSignerOrProvider(network);\n    this.events.emit(\"signerChanged\", this.connection.getSigner());\n  }\n\n  /**\n   * Transfer native or ERC20 tokens from this wallet to another wallet\n   * @example\n   * ```javascript\n   *  // transfer 0.8 ETH\n   * await sdk.wallet.transfer(\"0x...\", 0.8);\n   *  // transfer 0.8 tokens of `tokenContractAddress`\n   * await sdk.wallet.transfer(\"0x...\", 0.8, tokenContractAddress);\n   * ```\n   * @param to - the account to send funds to\n   * @param amount - the amount in tokens\n   * @param currencyAddress - Optional - ERC20 contract address of the token to transfer\n   */\n  async transfer(to, amount) {\n    let currencyAddress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NATIVE_TOKEN_ADDRESS;\n    const [resolvedTo, resolvedCurrency, amountInWei] = await Promise.all([resolveAddress(to), resolveAddress(currencyAddress), normalizePriceValue(this.connection.getProvider(), amount, currencyAddress)]);\n    const signer = this.requireWallet();\n    if (isNativeToken(resolvedCurrency)) {\n      // native token transfer\n      const from = await signer.getAddress();\n      const gasOverrides = isBrowser() ? {} : await getDefaultGasOverrides(this.connection.getProvider());\n      const tx = await signer.sendTransaction({\n        from,\n        to: resolvedTo,\n        value: amountInWei,\n        ...gasOverrides\n      });\n      return {\n        receipt: await tx.wait()\n      };\n    } else {\n      // ERC20 token transfer\n      const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n      return {\n        receipt: await this.createErc20(resolvedCurrency, ERC20Abi).sendTransaction(\"transfer\", [resolvedTo, amountInWei])\n      };\n    }\n  }\n\n  /**\n   * Fetch the native or ERC20 token balance of this wallet\n   * @example\n   * ```javascript\n   * // native currency balance\n   * const balance = await sdk.wallet.balance();\n   * // ERC20 token balance\n   * const erc20balance = await sdk.wallet.balance(tokenContractAddress);\n   *\n   * ```\n   */\n  async balance() {\n    let currencyAddress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NATIVE_TOKEN_ADDRESS;\n    this.requireWallet();\n    const resolvedCurrency = await resolveAddress(currencyAddress);\n    const provider = this.connection.getProvider();\n    let balance;\n    if (isNativeToken(resolvedCurrency)) {\n      balance = await provider.getBalance(await this.getAddress());\n    } else {\n      const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n      balance = await this.createErc20(resolvedCurrency, ERC20Abi).read(\"balanceOf\", [await this.getAddress()]);\n    }\n    return await fetchCurrencyValue(provider, resolvedCurrency, balance);\n  }\n\n  /**\n   * Get the currently connected address\n   * @example\n   * ```javascript\n   * const address = await sdk.wallet.getAddress();\n   * ```\n   */\n  async getAddress() {\n    return await this.requireWallet().getAddress();\n  }\n\n  /**\n   * Get the currently connected wallet's chainId\n   * @internal\n   */\n  async getChainId() {\n    return await this.requireWallet().getChainId();\n  }\n\n  /**\n   * Get the number of transactions sent from this address.\n   * @param blockTag - Optional - the block tag to read the nonce from\n   */\n  async getNonce(blockTag) {\n    const txCount = await this.connection.getProvider().getTransactionCount(await this.getAddress(), blockTag);\n    return txCount;\n  }\n\n  /**\n   * Checks whether there's a signer connected with the SDK\n   * @internal\n   */\n  isConnected() {\n    try {\n      this.requireWallet();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Sign any message with the connected wallet private key\n   * @param message - the message to sign\n   * @returns The signed message\n   *\n   * @example\n   * ```javascript\n   * // This is the message to be signed\n   * const message = \"Sign this message...\";\n   *\n   * // Now we can sign the message with the connected wallet\n   * const signature = await sdk.wallet.sign(message);\n   * ```\n   */\n  async sign(message) {\n    const signer = this.requireWallet();\n    return await signer.signMessage(message);\n  }\n\n  /**\n   * Sign a typed data structure (EIP712) with the connected wallet private key\n   * @param domain - the domain as EIP712 standard\n   * @param types - the structure and data types as defined by the EIP712 standard\n   * @param message - the data to sign\n   * @returns The payload and its associated signature\n   *\n   * @example\n   * ```javascript\n   * // This is the message to be signed\n   * // Now we can sign the message with the connected wallet\n   * const { payload, signature } = await sdk.wallet.signTypedData(\n   *   {\n          name: \"MyEIP721Domain\",\n          version: \"1\",\n          chainId: 1,\n          verifyingContract: \"0x...\",\n        },\n        { MyStruct: [ { name: \"to\", type: \"address\" }, { name: \"quantity\", type: \"uint256\" } ] },\n        { to: \"0x...\", quantity: 1 },\n   * );\n   * ```\n   */\n  async signTypedData(domain, types, message) {\n    return await signTypedDataInternal(this.requireWallet(), domain, types, message);\n  }\n\n  /**\n   * Recover the signing address from a signed message\n   * @param message - the original message that was signed\n   * @param signature - the signature to recover the address from\n   * @returns The address that signed the message\n   *\n   * @example\n   * ```javascript\n   * const message = \"Sign this message...\";\n   * const signature = await sdk.wallet.sign(message);\n   *\n   * // Now we can recover the signing address\n   * const address = sdk.wallet.recoverAddress(message, signature);\n   * ```\n   */\n  recoverAddress(message, signature) {\n    const messageHash = utils.hashMessage(message);\n    const messageHashBytes = utils.arrayify(messageHash);\n    return utils.recoverAddress(messageHashBytes, signature);\n  }\n\n  /**\n   * Send a raw transaction to the blockchain from the connected wallet\n   * @param transactionRequest - raw transaction data to send to the blockchain\n   */\n  async sendRawTransaction(transactionRequest) {\n    const signer = this.requireWallet();\n    // set default gas values\n    const gasOverrides = isBrowser() ? {} : await getDefaultGasOverrides(this.connection.getProvider());\n    transactionRequest = {\n      ...gasOverrides,\n      ...transactionRequest\n    };\n    return signer.sendTransaction(transactionRequest);\n  }\n\n  /**\n   * Execute a raw transaction to the blockchain from the connected wallet and wait for it to be mined\n   * @param transactionRequest - raw transaction data to send to the blockchain\n   */\n  async executeRawTransaction(transactionRequest) {\n    const tx = await this.sendRawTransaction(transactionRequest);\n    return {\n      receipt: await tx.wait()\n    };\n  }\n\n  /**\n   * Request funds from a running local node to the currently connected wallet\n   * @param amount - the amount in native currency (in ETH) to request\n   */\n  async requestFunds(amount) {\n    const chainId = await this.getChainId();\n    if (chainId === ChainId.Localhost || chainId === ChainId.Hardhat) {\n      const localWallet = new UserWallet(new Wallet(LOCAL_NODE_PKEY, getChainProvider(chainId, this.options)), this.options, this.storage);\n      return localWallet.transfer(await this.getAddress(), amount);\n    } else {\n      throw new Error(`Requesting funds is not supported on chain: '${chainId}'.`);\n    }\n  }\n\n  /** ***********************\n   * PRIVATE FUNCTIONS\n   * ***********************/\n\n  requireWallet() {\n    const signer = this.connection.getSigner();\n    invariant(signer, \"This action requires a connected wallet. Please pass a valid signer to the SDK.\");\n    return signer;\n  }\n  createErc20(currencyAddress, ERC20Abi) {\n    return new ContractWrapper(this.connection.getSignerOrProvider(), currencyAddress, ERC20Abi, this.options, this.storage);\n  }\n}\n\n/**\n * Return all the detected features names in the abi\n * @param abi - parsed array of abi entries\n * @returns Array of all detected features names\n * @internal\n * @deprecated use getAllExtensionNames instead\n */\nfunction getAllDetectedFeatureNames(abi) {\n  const features = [];\n  extractFeatures(detectFeatures(abi), features);\n  return features.map(f => f.name);\n}\n\n/**\n * Return all the detected extension names in the abi\n * @param abi - parsed array of abi entries\n * @returns Array of all detected features names\n * @public\n */\nfunction getAllDetectedExtensionNames(abi) {\n  return getAllDetectedFeatureNames(abi);\n}\n\nfunction createStorage(storage, options) {\n  if (storage) {\n    return storage;\n  } else if (options?.gatewayUrls) {\n    return new ThirdwebStorage({\n      gatewayUrls: options.gatewayUrls,\n      clientId: options.clientId,\n      secretKey: options.secretKey\n    });\n  } else {\n    return new ThirdwebStorage({\n      clientId: options?.clientId,\n      secretKey: options?.secretKey\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass MultichainRegistry {\n  constructor(network, storage) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.storage = storage;\n    this.registryLogic = new ContractWrapper(network, getMultichainRegistryAddress(), TWRegistryABI, options, storage);\n    this.registryRouter = new ContractWrapper(network, getMultichainRegistryAddress(), TWRegistryRouterABI, options, storage);\n  }\n  async updateSigner(signer) {\n    this.registryLogic.updateSignerOrProvider(signer);\n    this.registryRouter.updateSignerOrProvider(signer);\n  }\n  async getContractMetadataURI(chainId, address) {\n    return await this.registryLogic.read(\"getMetadataUri\", [chainId, await resolveAddress(address)]);\n  }\n  async getContractMetadata(chainId, address) {\n    const uri = await this.getContractMetadataURI(chainId, address);\n    if (!uri) {\n      throw new Error(`No metadata URI found for contract ${address} on chain ${chainId}`);\n    }\n    // TODO define the metadata JSON schema\n    return await this.storage.downloadJSON(uri);\n  }\n  async getContractAddresses(walletAddress) {\n    return (await this.registryLogic.read(\"getAll\", [await resolveAddress(walletAddress)])).filter(result => utils.isAddress(result.deploymentAddress) && result.deploymentAddress.toLowerCase() !== constants.AddressZero).map(result => ({\n      address: result.deploymentAddress,\n      chainId: result.chainId.toNumber()\n    }));\n  }\n  addContract = /* @__PURE__ */buildTransactionFunction(async contract => {\n    const deployerAddress = await this.registryRouter.getSignerAddress();\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.registryLogic,\n      method: \"add\",\n      args: [deployerAddress, contract.address, contract.chainId, contract.metadataURI || \"\"]\n    });\n  });\n  addContracts = /* @__PURE__ */buildTransactionFunction(async contracts => {\n    const deployerAddress = await this.registryRouter.getSignerAddress();\n    const encoded = [];\n    const contractEncoder = new ContractEncoder(this.registryLogic);\n    contracts.forEach(contact => {\n      encoded.push(contractEncoder.encode(\"add\", [deployerAddress, contact.address, contact.chainId, contact.metadataURI || \"\"]));\n    });\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.registryRouter,\n      method: \"multicall\",\n      args: [encoded]\n    });\n  });\n  removeContract = /* @__PURE__ */buildTransactionFunction(async contract => {\n    const deployerAddress = await this.registryRouter.getSignerAddress();\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.registryLogic,\n      method: \"remove\",\n      args: [deployerAddress, await resolveAddress(contract.address), contract.chainId]\n    });\n  });\n  removeContracts = /* @__PURE__ */buildTransactionFunction(async contracts => {\n    const deployerAddress = await this.registryRouter.getSignerAddress();\n    const contractEncoder = new ContractEncoder(this.registryLogic);\n    const encoded = await Promise.all(contracts.map(async contract => contractEncoder.encode(\"remove\", [deployerAddress, await resolveAddress(contract.address), contract.chainId])));\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.registryRouter,\n      method: \"multicall\",\n      args: [encoded]\n    });\n  });\n}\n\n/**\n *\n * @param abi - The abi to extract params from\n * @param functionName - The function name to extract params from\n * @returns\n * @internal\n */\nfunction extractFunctionParamsFromAbi(abi, functionName) {\n  const parsedAbi = AbiSchema.parse(abi || []);\n  for (const input of parsedAbi) {\n    if (input.type === \"function\" && input.name === functionName) {\n      return input.inputs || [];\n    }\n  }\n  return [];\n}\n\n/**\n *\n * @internal\n * @param provider - The provider to use\n * @param storage - The storage to use\n * @param create2Factory - The create2 factory to use\n */\nasync function computeCloneFactoryAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory) {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"TWCloneFactory\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * @internal\n */\nfunction convertParamValues(constructorParamTypes, constructorParamValues) {\n  // check that both arrays are same length\n  if (constructorParamTypes.length !== constructorParamValues.length) {\n    throw Error(`Passed the wrong number of constructor arguments: ${constructorParamValues.length}, expected ${constructorParamTypes.length}`);\n  }\n  return constructorParamTypes.map((p, index) => {\n    if (p === \"tuple\" || p.endsWith(\"[]\")) {\n      if (typeof constructorParamValues[index] === \"string\") {\n        return JSON.parse(constructorParamValues[index]);\n      } else {\n        return constructorParamValues[index];\n      }\n    }\n    if (p === \"bytes32\") {\n      invariant(utils.isHexString(constructorParamValues[index]), `Could not parse bytes32 value. Expected valid hex string but got \"${constructorParamValues[index]}\".`);\n      return utils.hexZeroPad(constructorParamValues[index], 32);\n    }\n    if (p.startsWith(\"bytes\")) {\n      invariant(utils.isHexString(constructorParamValues[index]), `Could not parse bytes value. Expected valid hex string but got \"${constructorParamValues[index]}\".`);\n      return constructorParamValues[index];\n    }\n    if (p.startsWith(\"uint\") || p.startsWith(\"int\")) {\n      return BigNumber.from(constructorParamValues[index].toString());\n    }\n    return constructorParamValues[index];\n  });\n}\n\n/**\n * Deploy Nick's Create2 factory on a given network.\n * Deployment is keyless. Signer is needed to fund the keyless signer address.\n * Ref: https://github.com/Arachnid/deterministic-deployment-proxy\n *\n * @deploy\n * @public\n * @param signer - The signer to use\n */\nasync function deployCreate2Factory(signer, options) {\n  invariant(signer.provider, \"No provider\");\n  const deploymentInfo = await computeCreate2FactoryTransaction(signer.provider);\n  if (deploymentInfo.transaction.length > 0) {\n    // send balance to the keyless signer\n    if ((await signer.provider.getBalance(deploymentInfo.signer)).lt(deploymentInfo.valueToSend)) {\n      await (await signer.sendTransaction({\n        to: deploymentInfo.signer,\n        value: deploymentInfo.valueToSend\n      })).wait();\n    }\n\n    // deploy\n    try {\n      console.debug(`deploying CREATE2 factory at: ${deploymentInfo.deployment}`);\n      options?.notifier?.(\"deploying\", \"create2Factory\");\n      await (await signer.provider.sendTransaction(deploymentInfo.transaction)).wait();\n      options?.notifier?.(\"deployed\", \"create2Factory\");\n    } catch (err) {\n      throw new Error(`Couldn't deploy CREATE2 factory: ${JSON.stringify(err)}`);\n    }\n  }\n  return deploymentInfo.deployment;\n}\n\n/**\n * @public\n */\nconst SUPPORTED_CHAIN_IDS = [ChainId.Mainnet, ChainId.Goerli, ChainId.Polygon, ChainId.Mumbai, ChainId.Fantom, ChainId.FantomTestnet, ChainId.Avalanche, ChainId.AvalancheFujiTestnet, ChainId.Optimism, ChainId.OptimismGoerli, ChainId.Arbitrum, ChainId.ArbitrumGoerli, ChainId.BinanceSmartChainMainnet, ChainId.BinanceSmartChainTestnet, ChainId.Hardhat, ChainId.Localhost];\n\n/**\n *\n * @param chainId - chain id\n * @returns The array of trusted forwarders for the given chain id\n * @internal\n */\nfunction getDefaultTrustedForwarders(chainId) {\n  const chainEnum = SUPPORTED_CHAIN_IDS.find(c => c === chainId);\n  const biconomyForwarder = chainEnum ? CONTRACT_ADDRESSES[chainEnum]?.biconomyForwarder : AddressZero;\n  const openzeppelinForwarder = chainEnum ? CONTRACT_ADDRESSES[chainEnum]?.openzeppelinForwarder : AddressZero;\n  return [openzeppelinForwarder, biconomyForwarder].filter(a => a !== AddressZero);\n}\n\n/**\n * In the past we default `platform_fee_recipient` and `primary_sale_recipient` to AddressZero.\n * However due to a recent change in our smart contract extensions (PrimarySale & PlatformFee), AddressZero is no longer an accepted value for those fields.\n * So now we set the default value to the signer address.\n * https://github.com/thirdweb-dev/contracts/pull/530\n *\n * @param signerAddress - The address of the contract deployer\n * @param recipient - The address that will receive the platform fees and/or sale fees\n * @returns `signerAddress` if the `recipient` is AddressZero, otherwise returns `recipient`\n * @internal\n */\nfunction overrideRecipientAddress(signerAddress, recipient) {\n  if (recipient === constants.AddressZero) {\n    return signerAddress;\n  }\n  return recipient;\n}\n\n/**\n *\n * @param contractType - The contract type to get deploy arguments for\n * @param metadata - The metadata to get deploy arguments for\n * @param contractURI - The contract URI to get deploy arguments for\n * @returns\n * @internal\n */\nasync function getDeployArguments(contractType, metadata, contractURI, signer) {\n  const signerAddress = metadata.defaultAdmin || (await signer.getAddress());\n  const trustedForwarders = [];\n\n  // add any custom forwarders passed in\n  if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n    trustedForwarders.push(...metadata.trusted_forwarders);\n  }\n  switch (contractType) {\n    case NFTDropInitializer.contractType:\n    case NFTCollectionInitializer.contractType:\n      const erc721metadata = await NFTDropInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, erc721metadata.name, erc721metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc721metadata.primary_sale_recipient), erc721metadata.fee_recipient, erc721metadata.seller_fee_basis_points, erc721metadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, erc721metadata.platform_fee_recipient)];\n    case SignatureDropInitializer.contractType:\n      const signatureDropmetadata = await SignatureDropInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, signatureDropmetadata.name, signatureDropmetadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, signatureDropmetadata.primary_sale_recipient), signatureDropmetadata.fee_recipient, signatureDropmetadata.seller_fee_basis_points, signatureDropmetadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, signatureDropmetadata.platform_fee_recipient)];\n    case MultiwrapInitializer.contractType:\n      const multiwrapMetadata = await MultiwrapInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, multiwrapMetadata.name, multiwrapMetadata.symbol, contractURI, trustedForwarders, multiwrapMetadata.fee_recipient, multiwrapMetadata.seller_fee_basis_points];\n    case EditionDropInitializer.contractType:\n    case EditionInitializer.contractType:\n      const erc1155metadata = await EditionDropInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, erc1155metadata.name, erc1155metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc1155metadata.primary_sale_recipient), erc1155metadata.fee_recipient, erc1155metadata.seller_fee_basis_points, erc1155metadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, erc1155metadata.platform_fee_recipient)];\n    case TokenDropInitializer.contractType:\n    case TokenInitializer.contractType:\n      const erc20metadata = await TokenInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, erc20metadata.name, erc20metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc20metadata.primary_sale_recipient), overrideRecipientAddress(signerAddress, erc20metadata.platform_fee_recipient), erc20metadata.platform_fee_basis_points];\n    case VoteInitializer.contractType:\n      const voteMetadata = await VoteInitializer.schema.deploy.parseAsync(metadata);\n      return [voteMetadata.name, contractURI, trustedForwarders, voteMetadata.voting_token_address, voteMetadata.voting_delay_in_blocks, voteMetadata.voting_period_in_blocks, BigNumber.from(voteMetadata.proposal_token_threshold), voteMetadata.voting_quorum_fraction];\n    case SplitInitializer.contractType:\n      const splitsMetadata = await SplitInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, contractURI, trustedForwarders, splitsMetadata.recipients.map(s => s.address), splitsMetadata.recipients.map(s => BigNumber.from(s.sharesBps))];\n    case MarketplaceInitializer.contractType:\n    case MarketplaceV3Initializer.contractType:\n      const marketplaceMetadata = await MarketplaceInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, marketplaceMetadata.platform_fee_recipient), marketplaceMetadata.platform_fee_basis_points];\n    case PackInitializer.contractType:\n      const packsMetadata = await PackInitializer.schema.deploy.parseAsync(metadata);\n      return [signerAddress, packsMetadata.name, packsMetadata.symbol, contractURI, trustedForwarders, packsMetadata.fee_recipient, packsMetadata.seller_fee_basis_points];\n    default:\n      return [];\n  }\n}\n\n/**\n * Get the default trusted forwarders for gasless relaying\n * @deploy\n * @public\n */\nasync function getTrustedForwarders(provider, storage, contractName) {\n  const chainId = (await provider.getNetwork()).chainId;\n  const chainEnum = SUPPORTED_CHAIN_IDS.find(c => c === chainId);\n  const trustedForwarders = contractName && contractName === PackInitializer.name ? [] : chainEnum ? getDefaultTrustedForwarders(chainId) : [await computeForwarderAddress(provider, storage)]; // TODO: make this default for all chains (standard + others)\n\n  return trustedForwarders;\n}\n\n// @deprecated - should not be needed anymore, rely on the publish data instead\nconst APPROVED_IMPLEMENTATIONS = {\n  [ChainId.Mainnet]: {\n    \"nft-drop\": \"0x60fF9952e0084A6DEac44203838cDC91ABeC8736\",\n    \"edition-drop\": \"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550\",\n    \"token-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\",\n    \"signature-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\"\n  },\n  [ChainId.Polygon]: {\n    \"nft-drop\": \"0xB96508050Ba0925256184103560EBADA912Fcc69\",\n    \"edition-drop\": \"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550\",\n    \"token-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\",\n    \"signature-drop\": \"0xBE2fDc35410E268e41Bec62DBb01AEb43245c7d5\"\n  },\n  [ChainId.Fantom]: {\n    \"nft-drop\": \"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2\",\n    \"edition-drop\": \"0x06395FCF9AC6ED827f9dD6e776809cEF1Be0d21B\",\n    \"token-drop\": \"0x0148b28a38efaaC31b6aa0a6D9FEb70FE7C91FFa\",\n    \"signature-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\"\n  },\n  [ChainId.Avalanche]: {\n    \"nft-drop\": \"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6\",\n    \"edition-drop\": \"0x135fC9D26E5eC51260ece1DF4ED424E2f55c7766\",\n    \"token-drop\": \"0xca0B071899E575BA86495D46c5066971b6f3A901\",\n    \"signature-drop\": \"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3\"\n  },\n  [ChainId.Optimism]: {\n    \"nft-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\",\n    \"edition-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\",\n    \"token-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"signature-drop\": \"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD\"\n  },\n  [ChainId.Arbitrum]: {\n    \"nft-drop\": \"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a\",\n    \"edition-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"token-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\",\n    \"signature-drop\": \"0x2dF9851af45dd41C8584ac55D983C604da985Bc7\"\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    \"nft-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"edition-drop\": \"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2\",\n    \"token-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\",\n    \"signature-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\"\n  },\n  [ChainId.Goerli]: {\n    \"nft-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"edition-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\",\n    \"token-drop\": \"0x5680933221B752EB443654a014f88B101F868d50\",\n    \"signature-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\"\n  },\n  [ChainId.Mumbai]: {\n    \"nft-drop\": \"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a\",\n    \"edition-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"token-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\",\n    \"signature-drop\": \"0x2dF9851af45dd41C8584ac55D983C604da985Bc7\"\n  },\n  [ChainId.FantomTestnet]: {\n    \"nft-drop\": \"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD\",\n    \"edition-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"token-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\",\n    \"signature-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\"\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    \"nft-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"edition-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\",\n    \"token-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\",\n    \"signature-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\"\n  },\n  [ChainId.OptimismGoerli]: {\n    \"nft-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"edition-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\",\n    \"token-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"signature-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\"\n  },\n  [ChainId.ArbitrumGoerli]: {\n    \"nft-drop\": \"0x9CfE807a5b124b962064Fa8F7FD823Cc701255b6\",\n    \"edition-drop\": \"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6\",\n    \"token-drop\": \"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3\",\n    \"signature-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\"\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    \"nft-drop\": \"\",\n    \"edition-drop\": \"\",\n    \"token-drop\": \"\",\n    \"signature-drop\": \"\" // TODO\n  },\n  [ChainId.Hardhat]: {\n    \"nft-drop\": \"\",\n    \"edition-drop\": \"\",\n    \"token-drop\": \"\",\n    \"signature-drop\": \"\" // TODO\n  },\n  [ChainId.Localhost]: {\n    \"nft-drop\": \"\",\n    \"edition-drop\": \"\",\n    \"token-drop\": \"\",\n    \"signature-drop\": \"\" // TODO\n  }\n};\n\n/**\n * @internal\n * @param chainId - The chainId to get the approved implementation for\n * @param contractType - The contract type to get the approved implementation for\n */\nfunction getApprovedImplementation(chainId,\n// TODO use SupportedChainId once we deploy to all chains\ncontractType) {\n  if (chainId in APPROVED_IMPLEMENTATIONS) {\n    const approvedImpls = APPROVED_IMPLEMENTATIONS[chainId];\n    if (contractType in approvedImpls) {\n      return approvedImpls[contractType];\n    }\n  }\n  return null;\n}\n\n/**\n * @internal\n */\nclass ContractFactory extends ContractWrapper {\n  // Map from contract type to version to deploy specific versions by default\n  DEFAULT_VERSION_MAP = {\n    [NFTDropInitializer.contractType]: 3,\n    [NFTCollectionInitializer.contractType]: 1,\n    [SignatureDropInitializer.contractType]: 4,\n    [MultiwrapInitializer.contractType]: 1,\n    [EditionDropInitializer.contractType]: 2,\n    [EditionInitializer.contractType]: 1,\n    [TokenDropInitializer.contractType]: 2,\n    [TokenInitializer.contractType]: 1,\n    [VoteInitializer.contractType]: 1,\n    [SplitInitializer.contractType]: 1,\n    [MarketplaceInitializer.contractType]: 2,\n    [MarketplaceV3Initializer.contractType]: 3,\n    [PackInitializer.contractType]: 2\n  };\n  constructor(factoryAddr, network, storage, options) {\n    super(network, factoryAddr, TWFactoryAbi, options, storage);\n    this.storage = storage;\n  }\n  deploy = /* @__PURE__ */buildTransactionFunction(async (contractType, contractMetadata, eventEmitter, version, options, onExecute) => {\n    const contract = PREBUILT_CONTRACTS_MAP[contractType];\n    const metadata = await contract.schema.deploy.parseAsync(contractMetadata);\n\n    // TODO: is there any special pre-processing we need to do before uploading?\n    const contractURI = await this.storage.upload(metadata);\n    const implementationAddress = (await this.getImplementation(contract, version)) || undefined;\n    if (!implementationAddress || implementationAddress === constants.AddressZero) {\n      throw new Error(`No implementation found for ${contractType}`);\n    }\n    const ABI = await contract.getAbi(implementationAddress, this.getProvider(), this.storage);\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required to deploy contracts\");\n    const args = await getDeployArguments(contractType, metadata, contractURI, signer);\n    const encodedFunc = Contract.getInterface(ABI).encodeFunctionData(\"initialize\", args);\n    const blockNumber = await this.getProvider().getBlockNumber();\n    const salt = options?.saltForProxyDeploy ? utils.id(options.saltForProxyDeploy) : utils.formatBytes32String(blockNumber.toString());\n    return Transaction.fromContractWrapper({\n      contractWrapper: this,\n      method: \"deployProxyByImplementation\",\n      args: [implementationAddress, encodedFunc, salt],\n      parse: receipt => {\n        if (onExecute) {\n          onExecute();\n        }\n        const events = this.parseLogs(\"ProxyDeployed\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ProxyDeployed event found\");\n        }\n        const contractAddress = events[0].args.proxy;\n        eventEmitter.emit(\"contractDeployed\", {\n          status: \"completed\",\n          contractAddress,\n          transactionHash: receipt.transactionHash\n        });\n        return contractAddress;\n      }\n    });\n  });\n\n  // TODO once IContractFactory is implemented, this can be probably be moved to its own class\n  deployProxyByImplementation = /* @__PURE__ */buildTransactionFunction(async (implementationAddress, implementationAbi, initializerFunction, initializerArgs, eventEmitter, saltForProxyDeploy, onExecute) => {\n    const encodedFunc = Contract.getInterface(implementationAbi).encodeFunctionData(initializerFunction, initializerArgs);\n    const blockNumber = await this.getProvider().getBlockNumber();\n    const salt = saltForProxyDeploy ? utils.id(saltForProxyDeploy) : utils.formatBytes32String(blockNumber.toString());\n    return Transaction.fromContractWrapper({\n      contractWrapper: this,\n      method: \"deployProxyByImplementation\",\n      args: [implementationAddress, encodedFunc, salt],\n      parse: receipt => {\n        if (onExecute) {\n          onExecute();\n        }\n        const events = this.parseLogs(\"ProxyDeployed\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ProxyDeployed event found\");\n        }\n        const contractAddress = events[0].args.proxy;\n        eventEmitter.emit(\"contractDeployed\", {\n          status: \"completed\",\n          contractAddress,\n          transactionHash: receipt.transactionHash\n        });\n        return contractAddress;\n      }\n    });\n  });\n\n  /**\n   *\n   * @param contractType - the contract type to deploy\n   * @param metadata - the metadata for the contract\n   * @param contractURI - the contract URI\n   * @returns\n   * @internal\n   */\n  async getDeployArguments(contractType, metadata, contractURI) {\n    let trustedForwarders = [];\n    // override default forwarders if custom ones are passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders = metadata.trusted_forwarders;\n    }\n    const signerAddress = await this.getSignerAddress();\n    switch (contractType) {\n      case NFTDropInitializer.contractType:\n      case NFTCollectionInitializer.contractType:\n        const erc721metadata = await NFTDropInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, erc721metadata.name, erc721metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc721metadata.primary_sale_recipient), erc721metadata.fee_recipient, erc721metadata.seller_fee_basis_points, erc721metadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, erc721metadata.platform_fee_recipient)];\n      case SignatureDropInitializer.contractType:\n        const signatureDropmetadata = await SignatureDropInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, signatureDropmetadata.name, signatureDropmetadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, signatureDropmetadata.primary_sale_recipient), signatureDropmetadata.fee_recipient, signatureDropmetadata.seller_fee_basis_points, signatureDropmetadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, signatureDropmetadata.platform_fee_recipient)];\n      case MultiwrapInitializer.contractType:\n        const multiwrapMetadata = await MultiwrapInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, multiwrapMetadata.name, multiwrapMetadata.symbol, contractURI, trustedForwarders, multiwrapMetadata.fee_recipient, multiwrapMetadata.seller_fee_basis_points];\n      case EditionDropInitializer.contractType:\n      case EditionInitializer.contractType:\n        const erc1155metadata = await EditionDropInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, erc1155metadata.name, erc1155metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc1155metadata.primary_sale_recipient), erc1155metadata.fee_recipient, erc1155metadata.seller_fee_basis_points, erc1155metadata.platform_fee_basis_points, overrideRecipientAddress(signerAddress, erc1155metadata.platform_fee_recipient)];\n      case TokenDropInitializer.contractType:\n      case TokenInitializer.contractType:\n        const erc20metadata = await TokenInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, erc20metadata.name, erc20metadata.symbol, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, erc20metadata.primary_sale_recipient), overrideRecipientAddress(signerAddress, erc20metadata.platform_fee_recipient), erc20metadata.platform_fee_basis_points];\n      case VoteInitializer.contractType:\n        const voteMetadata = await VoteInitializer.schema.deploy.parseAsync(metadata);\n        return [voteMetadata.name, contractURI, trustedForwarders, voteMetadata.voting_token_address, voteMetadata.voting_delay_in_blocks, voteMetadata.voting_period_in_blocks, BigNumber.from(voteMetadata.proposal_token_threshold), voteMetadata.voting_quorum_fraction];\n      case SplitInitializer.contractType:\n        const splitsMetadata = await SplitInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, contractURI, trustedForwarders, splitsMetadata.recipients.map(s => s.address), splitsMetadata.recipients.map(s => BigNumber.from(s.sharesBps))];\n      case MarketplaceInitializer.contractType:\n        const marketplaceMetadata = await MarketplaceInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, marketplaceMetadata.platform_fee_recipient), marketplaceMetadata.platform_fee_basis_points];\n      case MarketplaceV3Initializer.contractType:\n        const marketplaceV3Metadata = await MarketplaceV3Initializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, contractURI, trustedForwarders, overrideRecipientAddress(signerAddress, marketplaceV3Metadata.platform_fee_recipient), marketplaceV3Metadata.platform_fee_basis_points];\n      case PackInitializer.contractType:\n        const packsMetadata = await PackInitializer.schema.deploy.parseAsync(metadata);\n        return [signerAddress, packsMetadata.name, packsMetadata.symbol, contractURI, trustedForwarders, packsMetadata.fee_recipient, packsMetadata.seller_fee_basis_points];\n      default:\n        return [];\n    }\n  }\n  async getImplementation(contract, version) {\n    const encodedType = utils.formatBytes32String(contract.name);\n    const chainId = await this.getChainID();\n    const approvedImplementation = getApprovedImplementation(chainId, contract.contractType);\n    // return approved implementation if it exists and we're not overriding the version\n    if (approvedImplementation && approvedImplementation.length > 0 && version === undefined) {\n      return approvedImplementation;\n    }\n    return this.read(\"getImplementation\", [encodedType, version !== undefined ? version : this.DEFAULT_VERSION_MAP[contract.contractType]]);\n  }\n  async getLatestVersion(contractType) {\n    const name = getContractName(contractType);\n    if (!name) {\n      throw new Error(`Invalid contract type ${contractType}`);\n    }\n    const encodedType = utils.formatBytes32String(name);\n    return this.read(\"currentVersion\", [encodedType]);\n  }\n}\n\n/**\n * @internal\n */\nclass ContractRegistry extends ContractWrapper {\n  constructor(registryAddress, network, storage, TWRegistryABI, options) {\n    super(network, registryAddress, TWRegistryABI, options, storage);\n  }\n  async getContractAddresses(walletAddress) {\n    // TODO @fixme the filter here is necessary because for some reason getAll returns a 0x0 address for the first entry\n    return (await this.read(\"getAll\", [await resolveAddress(walletAddress)])).filter(adr => utils.isAddress(adr) && adr.toLowerCase() !== constants.AddressZero);\n  }\n  addContract = /* @__PURE__ */buildTransactionFunction(async contractAddress => {\n    return await this.addContracts.prepare([contractAddress]);\n  });\n  addContracts = /* @__PURE__ */buildTransactionFunction(async contractAddresses => {\n    const deployerAddress = await this.getSignerAddress();\n    const contractEncoder = new ContractEncoder(this);\n    const encoded = (await Promise.all(contractAddresses.map(addr => resolveAddress(addr)))).map(address => contractEncoder.encode(\"add\", [deployerAddress, address]));\n    return Transaction.fromContractWrapper({\n      contractWrapper: this,\n      method: \"multicall\",\n      args: [encoded]\n    });\n  });\n  removeContract = /* @__PURE__ */buildTransactionFunction(async contractAddress => {\n    return await this.removeContracts.prepare([contractAddress]);\n  });\n  removeContracts = /* @__PURE__ */buildTransactionFunction(async contractAddresses => {\n    const deployerAddress = await this.getSignerAddress();\n    const contractEncoder = new ContractEncoder(this);\n    const encoded = (await Promise.all(contractAddresses.map(addr => resolveAddress(addr)))).map(address => contractEncoder.encode(\"remove\", [deployerAddress, address]));\n    return Transaction.fromContractWrapper({\n      contractWrapper: this,\n      method: \"multicall\",\n      args: [encoded]\n    });\n  });\n}\n\nconst LoyaltyCardContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema))();\nconst LoyaltyCardContractDeploy = /* @__PURE__ */(() => LoyaltyCardContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema))();\n\nconst AirdropContractInput = /* @__PURE__ */(() => CommonContractSchema.merge(CommonSymbolSchema))();\nconst AirdropContractDeploy = /* @__PURE__ */(() => AirdropContractInput.merge(CommonTrustedForwarderSchema))();\n\n/**\n * Direct deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address and salt (if provided).\n *\n * @deploy\n * @public\n *\n * @param bytecode - The bytecode to deploy\n * @param abi - The abi to use\n * @param signer - The signer to use\n * @param constructorArgs - The constructor args to use\n * @param saltForCreate2 - The salt to use\n */\nasync function directDeployDeterministic(bytecode, abi, signer, constructorArgs, saltForCreate2) {\n  let gasLimit = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 7000000;\n  invariant(signer.provider, \"Provider is required\");\n  const bytecodePrefixed = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n\n  // 1. Deploy CREATE2 factory (if not already exists)\n  const create2Factory = await deployCreate2Factory(signer);\n\n  // 2. Encode constructor params\n  const constructorParams = extractConstructorParamsFromAbi(abi);\n  const constructorParamTypes = constructorParams.map(p => {\n    return p.type;\n  });\n  const paramValues = convertParamValues(constructorParamTypes, constructorArgs);\n  const paramTypesForEncoder = constructorParams.map(p => {\n    if (p.type === \"tuple[]\") {\n      return utils.ParamType.from(p);\n    } else {\n      return p.type;\n    }\n  });\n  const encodedArgs = utils.defaultAbiCoder.encode(paramTypesForEncoder, paramValues);\n\n  // 3. Construct deployment transaction\n  const address = computeDeploymentAddress(bytecodePrefixed, encodedArgs, create2Factory, saltForCreate2);\n  const contractDeployed = await isContractDeployed(address, signer.provider);\n  let initBytecodeWithSalt = \"\";\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${address}`);\n    initBytecodeWithSalt = getInitBytecodeWithSalt(bytecodePrefixed, encodedArgs, saltForCreate2);\n    const tx = {\n      to: create2Factory,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n\n    // 4. Deploy\n    await (await signer.sendTransaction(tx)).wait();\n  } else {\n    throw new Error(`Contract already deployed at ${address}`);\n  }\n  return address;\n}\n\n/**\n * Direct deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address and salt (if provided).\n *\n * @public\n *\n * @param publishMetadataUri - The metadata uri to use\n * @param signer - The signer to use\n * @param storage - The storage to use\n * @param constructorArgs - The constructor args to use\n * @param saltForCreate2 - The salt to use\n */\nasync function directDeployDeterministicWithUri(publishMetadataUri, signer, storage, constructorArgs, saltForCreate2) {\n  let gasLimit = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 7000000;\n  const {\n    compilerMetadata,\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishMetadataUri, storage);\n  invariant(extendedMetadata?.deployType === \"standard\", \"Must be direct deploy\");\n  return await directDeployDeterministic(compilerMetadata.bytecode, compilerMetadata.abi, signer, constructorArgs, saltForCreate2, gasLimit);\n}\n\n/**\n * Direct deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address and salt (if provided).\n *\n * @public\n *\n * @param contractName - The name of the contract to deploy\n * @param publisherAddress - The publisher address to use\n * @param contractVersion - The contract version to use\n * @param constructorArgs - The constructor args to use\n * @param signer - The signer to use\n * @param storage - The storage to use\n * @param clientId - The client id to use\n * @param secretKey - The secret key to use\n * @param constructorArgs - The constructor args to use\n * @param saltForCreate2 - The salt to use\n */\nasync function directDeployDeterministicPublished(contractName, publisherAddress) {\n  let contractVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n  let constructorArgs = arguments.length > 3 ? arguments[3] : undefined;\n  let signer = arguments.length > 4 ? arguments[4] : undefined;\n  let storage = arguments.length > 5 ? arguments[5] : undefined;\n  let clientId = arguments.length > 6 ? arguments[6] : undefined;\n  let secretKey = arguments.length > 7 ? arguments[7] : undefined;\n  let saltForCreate2 = arguments.length > 8 ? arguments[8] : undefined;\n  let gasLimit = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 7000000;\n  const publishMetadataUri = (await fetchPublishedContractFromPolygon(publisherAddress, contractName, contractVersion, storage, clientId, secretKey)).metadataUri;\n  const {\n    compilerMetadata,\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishMetadataUri, storage);\n  invariant(extendedMetadata?.deployType === \"standard\", \"Must be direct deploy\");\n  return await directDeployDeterministic(compilerMetadata.bytecode, compilerMetadata.abi, signer, constructorArgs, saltForCreate2, gasLimit);\n}\nasync function predictAddressDeterministic(bytecode, abi, provider, constructorArgs, saltForCreate2) {\n  const bytecodePrefixed = bytecode.startsWith(\"0x\") ? bytecode : `0x${bytecode}`;\n\n  // 1. Deploy CREATE2 factory (if not already exists)\n  const create2Factory = await getCreate2FactoryAddress(provider);\n\n  // 2. Encode constructor params\n  const constructorParams = extractConstructorParamsFromAbi(abi);\n  const constructorParamTypes = constructorParams.map(p => {\n    return p.type;\n  });\n  const paramValues = convertParamValues(constructorParamTypes, constructorArgs);\n  const paramTypesForEncoder = constructorParams.map(p => {\n    if (p.type === \"tuple[]\") {\n      return utils.ParamType.from(p);\n    } else {\n      return p.type;\n    }\n  });\n  const encodedArgs = utils.defaultAbiCoder.encode(paramTypesForEncoder, paramValues);\n\n  // 3. Construct deployment transaction\n  const address = computeDeploymentAddress(bytecodePrefixed, encodedArgs, create2Factory, saltForCreate2);\n  return address;\n}\nasync function predictAddressDeterministicWithUri(publishMetadataUri, provider, storage, constructorArgs, saltForCreate2) {\n  const {\n    compilerMetadata,\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishMetadataUri, storage);\n  invariant(extendedMetadata?.deployType === \"standard\", \"Must be direct deploy\");\n  return await predictAddressDeterministic(compilerMetadata.bytecode, compilerMetadata.abi, provider, constructorArgs, saltForCreate2);\n}\nasync function predictAddressDeterministicPublished(contractName, publisherAddress) {\n  let contractVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n  let constructorArgs = arguments.length > 3 ? arguments[3] : undefined;\n  let provider = arguments.length > 4 ? arguments[4] : undefined;\n  let storage = arguments.length > 5 ? arguments[5] : undefined;\n  let clientId = arguments.length > 6 ? arguments[6] : undefined;\n  let secretKey = arguments.length > 7 ? arguments[7] : undefined;\n  let saltForCreate2 = arguments.length > 8 ? arguments[8] : undefined;\n  const publishMetadataUri = (await fetchPublishedContractFromPolygon(publisherAddress, contractName, contractVersion, storage, clientId, secretKey)).metadataUri;\n  const {\n    compilerMetadata,\n    extendedMetadata\n  } = await fetchAndCacheDeployMetadata(publishMetadataUri, storage);\n  invariant(extendedMetadata?.deployType === \"standard\", \"Must be direct deploy\");\n  return await predictAddressDeterministic(compilerMetadata.bytecode, compilerMetadata.abi, provider, constructorArgs, saltForCreate2);\n}\n\n/**\n * The main entry point for the thirdweb SDK\n * @public\n */\nclass ThirdwebSDK extends RPCConnectionHandler {\n  /**\n   * Get an instance of the thirdweb SDK based on an AbstractWallet\n   *\n   * @example\n   * ```javascript\n   * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\"\n   *\n   * const wallet = new AbstractWalletImplementation();\n   * const sdk = await ThirdwebSDK.fromWallet(wallet, \"mainnet\");\n   * ```\n   *\n   * @param wallet - the implementation of the AbstractWallet class to use for signing\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns An instance of the SDK\n   *\n   * @beta\n   */\n  static async fromWallet(wallet, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 ? arguments[3] : undefined;\n    const signer = await wallet.getSigner();\n    return ThirdwebSDK.fromSigner(signer, network, options, storage);\n  }\n\n  /**\n   * Get an instance of the thirdweb SDK based on an existing ethers signer\n   *\n   * @example\n   * ```javascript\n   * // get a signer from somewhere (createRandom is being used purely for example purposes)\n   * const signer = Wallet.createRandom();\n   *\n   * // get an instance of the SDK with the signer already setup\n   * const sdk = ThirdwebSDK.fromSigner(signer, \"mainnet\");\n   * ```\n   *\n   * @param signer - a ethers Signer to be used for transactions\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns An instance of the SDK\n   *\n   * @beta\n   */\n  static fromSigner(signer, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 ? arguments[3] : undefined;\n    let signerWithProvider = signer;\n    if (network) {\n      try {\n        const provider = getChainProvider(network, options);\n        signerWithProvider = signer.connect(provider);\n      } catch {\n        // We have to catch here because browser wallets throw when trying to override provider\n      }\n    }\n    const sdk = new ThirdwebSDK(network || signerWithProvider, network ? addChainToSupportedChains(network, options) : options, storage);\n    sdk.updateSignerOrProvider(signerWithProvider);\n    return sdk;\n  }\n\n  /**\n   * Get an instance of the thirdweb SDK based on a private key.\n   *\n   * @remarks\n   * This should only be used for backend services or scripts, with the private key stored in a secure way.\n   * **NEVER** expose your private key to the public in any way.\n   *\n   * @example\n   * ```javascript\n   * const sdk = ThirdwebSDK.fromPrivateKey(\"SecretPrivateKey\", \"mainnet\");\n   * ```\n   *\n   * @param privateKey - the private key - **DO NOT EXPOSE THIS TO THE PUBLIC**\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns An instance of the SDK\n   *\n   * @public\n   */\n  static fromPrivateKey(privateKey, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 ? arguments[3] : undefined;\n    const provider = getChainProvider(network, options);\n    const signer = new Wallet(privateKey, provider);\n    return new ThirdwebSDK(signer, addChainToSupportedChains(network, options), storage);\n  }\n\n  /**\n   * @internal\n   * the cache of contracts that we have already seen\n   */\n  contractCache = new Map();\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ThirdwebSDK.getPublisher} instead\n   */\n\n  /**\n   * Internal handler for uploading and downloading files\n   */\n\n  /**\n   * New contract deployer\n   */\n\n  /**\n   * Contract verifier\n   */\n\n  /**\n   * The registry of deployed contracts\n   */\n\n  /**\n   * Interact with the connected wallet\n   */\n\n  /**\n   * Upload and download files from IPFS or from your own storage service\n   */\n\n  constructor(network) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let storage = arguments.length > 2 ? arguments[2] : undefined;\n    const apiKeyType = typeof window !== \"undefined\" ? \"clientId\" : \"secretKey\";\n    let warnMessage = `No API key. Please provide a ${apiKeyType}. It is required to access thirdweb's services. You can create a key at https://thirdweb.com/create-api-key`;\n    if (typeof window === \"undefined\" && !options.secretKey && options.clientId) {\n      warnMessage = `Please provide a secret key instead of the clientId. Create a new API Key at https://thirdweb.com/create-api-key`;\n    }\n    checkClientIdOrSecretKey(warnMessage, options.clientId, options.secretKey);\n    options = addChainToSupportedChains(network, options);\n    super(network, options);\n    setSupportedChains(options?.supportedChains);\n    const configuredStorage = createStorage(storage, options);\n    this.storage = configuredStorage;\n    this.storageHandler = configuredStorage;\n    this.wallet = new UserWallet(network, options, configuredStorage);\n    this.deployer = new ContractDeployer(network, options, configuredStorage);\n    this.verifier = new ContractVerifier(network, options, configuredStorage);\n    this.multiChainRegistry = new MultichainRegistry(network, this.storageHandler, this.options);\n    this._publisher = new ContractPublisher(network, this.options, this.storageHandler);\n  }\n  get auth() {\n    throw new Error(`The sdk.auth namespace has been moved to the @thirdweb-dev/auth package and is no longer available after @thirdweb-dev/sdk >= 3.7.0.\n      Please visit https://portal.thirdweb.com/wallets/auth for instructions on how to switch to using the new auth package (@thirdweb-dev/auth@3.0.0).\n\n      If you still want to use the old @thirdweb-dev/auth@2.0.0 package, you can downgrade the SDK to version 3.6.0.`);\n  }\n\n  /**\n   * Get an instance of a NFT Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const dropContract = await sdk.getDropContract(\"0x1234...\");\n   * + const dropContract = await sdk.getContract(\"0x1234...\", \"nft-drop\");\n   * ```\n   */\n  async getNFTDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"nft-drop\");\n  }\n\n  /**\n   * Get an instance of a Signature Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const signatureDrop = await sdk.getSignatureDrop(\"0x1234...\");\n   * + const signatureDrop = await sdk.getContract(\"0x1234...\", \"signature-drop\");\n   * ```\n   */\n  async getSignatureDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"signature-drop\");\n  }\n\n  /**\n   * Get an instance of a NFT Collection Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const signatureDrop = await sdk.getNFTCollection(\"0x1234...\");\n   * + const signatureDrop = await sdk.getContract(\"0x1234...\", \"nft-collection\");\n   * ```\n   */\n  async getNFTCollection(contractAddress) {\n    return await this.getContract(contractAddress, \"nft-collection\");\n  }\n\n  /**\n   * Get an instance of a Edition Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const editionDrop = await sdk.getEditionDrop(\"0x1234...\");\n   * + const editionDrop = await sdk.getContract(\"0x1234...\", \"edition-drop\");\n   * ```\n   */\n  async getEditionDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"edition-drop\");\n  }\n\n  /**\n   * Get an instance of a Edition contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const edition = await sdk.getEdition(\"0x1234...\");\n   * + const edition = await sdk.getContract(\"0x1234...\", \"edition\");\n   * ```\n   */\n  async getEdition(contractAddress) {\n    return await this.getContract(contractAddress, \"edition\");\n  }\n\n  /**\n   * Get an instance of a Token Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const tokenDrop = await sdk.getTokenDrop(\"0x1234...\");\n   * + const tokenDrop = await sdk.getContract(\"0x1234...\", \"token-drop\");\n   * ```\n   */\n  async getTokenDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"token-drop\");\n  }\n\n  /**\n   * Get an instance of a Token contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const token = await sdk.getToken(\"0x1234...\");\n   * + const token = await sdk.getContract(\"0x1234...\", \"token\");\n   * ```\n   */\n  async getToken(contractAddress) {\n    return await this.getContract(contractAddress, \"token\");\n  }\n\n  /**\n   * Get an instance of a Vote contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const vote = await sdk.getVote(\"0x1234...\");\n   * + const vote = await sdk.getContract(\"0x1234...\", \"vote\");\n   * ```\n   */\n  async getVote(contractAddress) {\n    return await this.getContract(contractAddress, \"vote\");\n  }\n\n  /**\n   * Get an instance of a Split contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const split = await sdk.getSplit(\"0x1234...\");\n   * + const split = await sdk.getContract(\"0x1234...\", \"split\");\n   * ```\n   */\n  async getSplit(contractAddress) {\n    return await this.getContract(contractAddress, \"split\");\n  }\n\n  /**\n   * Get an instance of a Marketplace contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const marketplace = await sdk.getMarketplace(\"0x1234...\");\n   * + const marketplace = await sdk.getContract(\"0x1234...\", \"marketplace\");\n   * ```\n   */\n  async getMarketplace(contractAddress) {\n    return await this.getContract(contractAddress, \"marketplace\");\n  }\n\n  /**\n   * Get an instance of a Marketplace contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const marketplace = await sdk.getMarketplaceV3(\"0x1234...\");\n   * + const marketplace = await sdk.getContract(\"0x1234...\", \"marketplace-v3\");\n   * ```\n   */\n  async getMarketplaceV3(contractAddress) {\n    return await this.getContract(contractAddress, \"marketplace-v3\");\n  }\n\n  /**\n   * Get an instance of a Pack contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const pack = await sdk.getPack(\"0x1234...\");\n   * + const pack = await sdk.getContract(\"0x1234...\", \"pack\");\n   * ```\n   */\n  async getPack(contractAddress) {\n    return await this.getContract(contractAddress, \"pack\");\n  }\n\n  /**\n   * Get an instance of a Pack contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const multiWrap = await sdk.getMultiwrap(\"0x1234...\");\n   * + const multiWrap = await sdk.getContract(\"0x1234...\", \"multiwrap\");\n   * ```\n   */\n  async getMultiwrap(contractAddress) {\n    return await this.getContract(contractAddress, \"multiwrap\");\n  }\n\n  /**\n   * Get an instance of a Custom ThirdwebContract\n   * @param address - the address of the deployed contract\n   * @returns The contract\n   * @public\n   * @example\n   * ```javascript\n   * const contract = await sdk.getContract(\"{{contract_address}}\");\n   * ```\n   */\n\n  /**\n   * Get an instance of a Custom ThirdwebContract\n   * @param address - the address of the deployed contract\n   * @param contractType - the {@link ContractType} of the contract to load\n   * @returns The contract\n   * @public\n   * @example\n   * ```javascript\n   * const contract = await sdk.getContract(\"{{contract_address}}\", \"nft-drop\");\n   * ```\n   */\n\n  /**\n   * Get an instance of a Custom ThirdwebContract\n   * @param address - the address of the deployed contract\n   * @param abi - the ABI ({@link ContractInterface}) of the contract to load\n   * @returns The contract\n   * @public\n   * @example\n   * ```javascript\n   * const contract = await sdk.getContract(\"{{contract_address}}\", ABI);\n   * ```\n   */\n\n  async getContract(address, contractTypeOrABI) {\n    const resolvedAddress = await resolveAddress(address);\n\n    // if we have a contract in the cache we will return it\n    // we will do this **without** checking any contract type things for simplicity, this may have to change in the future?\n    if (this.contractCache.has(resolvedAddress)) {\n      // we know this will be there since we check the has above\n      return this.contractCache.get(resolvedAddress);\n    }\n    if (resolvedAddress in GENERATED_ABI) {\n      return await this.getContractFromAbi(resolvedAddress, GENERATED_ABI[resolvedAddress]);\n    }\n    let newContract;\n\n    // if we don't have a contractType or ABI then we will have to resolve it regardless\n    // we also handle it being \"custom\" just in case...\n    if (!contractTypeOrABI || contractTypeOrABI === \"custom\") {\n      try {\n        const metadata = await this.getPublisher().fetchCompilerMetadataFromAddress(resolvedAddress);\n        newContract = await this.getContractFromAbi(resolvedAddress, await getCompositeABI(resolvedAddress, AbiSchema.parse(metadata.abi), this.getProvider(), this.options, this.storage));\n      } catch (e) {\n        // fallback to\n        // try resolving the contract type (legacy contracts)\n        const resolvedContractType = await this.resolveContractType(resolvedAddress);\n        if (resolvedContractType && resolvedContractType !== \"custom\") {\n          // otherwise if it's a prebuilt contract we can just use the contract type\n          const contractAbi = await PREBUILT_CONTRACTS_MAP[resolvedContractType].getAbi(resolvedAddress, this.getProvider(), this.storage);\n          newContract = await this.getContractFromAbi(resolvedAddress, await getCompositeABI(resolvedAddress, AbiSchema.parse(contractAbi), this.getProvider(), this.options, this.storage));\n        } else {\n          // we cant fetch the ABI, and we don't know the contract type, throw the original error\n          throw e;\n        }\n      }\n    }\n    // if it's a builtin contract type we can just use the contract type to initialize the contract instance\n    else if (typeof contractTypeOrABI === \"string\" && contractTypeOrABI in PREBUILT_CONTRACTS_MAP) {\n      newContract = await PREBUILT_CONTRACTS_MAP[contractTypeOrABI].initialize(this.getSignerOrProvider(), resolvedAddress, this.storage, this.options);\n    }\n    // otherwise it has to be an ABI\n    else {\n      newContract = await this.getContractFromAbi(resolvedAddress, contractTypeOrABI);\n    }\n\n    // set whatever we have on the cache\n    this.contractCache.set(resolvedAddress, newContract);\n    // return it\n    return newContract;\n  }\n\n  /**\n   * @internal\n   * @deprecated use {@link getContract} directly instead\n   */\n  async getBuiltInContract(address, contractType) {\n    return await this.getContract(address, contractType);\n  }\n\n  /**\n   * @param contractAddress - the address of the contract to attempt to resolve the contract type for\n   * @returns The {@link ContractType} for the given contract address\n   *\n   */\n  async resolveContractType(contractAddress) {\n    try {\n      const IThirdwebContractABI = (await import('@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json')).default;\n      const contract = new Contract(await resolveAddress(contractAddress), IThirdwebContractABI,\n      // !provider only! - signer can break things here!\n      this.getProvider());\n      const remoteContractType = utils.toUtf8String(await contract.contractType())\n      // eslint-disable-next-line no-control-regex\n      .replace(/\\x00/g, \"\");\n      return getContractTypeForRemoteName(remoteContractType);\n    } catch (err) {\n      return \"custom\";\n    }\n  }\n\n  /**\n   * Return all the contracts deployed by the specified address\n   * @param walletAddress - the deployed address\n   * @example\n   * ```javascript\n   * const contracts = sdk.getContractList(\"{{wallet_address}}\");\n   * ```\n   */\n  async getContractList(walletAddress) {\n    // TODO - this only reads from the current registry chain, not the multichain registry\n    const addresses = (await (await this.deployer.getRegistry())?.getContractAddresses(await resolveAddress(walletAddress))) || [];\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    return await Promise.all(addresses.map(async address => {\n      return {\n        address: address,\n        chainId,\n        contractType: () => this.resolveContractType(address),\n        metadata: async () => (await this.getContract(address)).metadata.get(),\n        extensions: async () => getAllDetectedExtensionNames((await this.getContract(address)).abi)\n      };\n    }));\n  }\n  async getMultichainContractList(walletAddress) {\n    let chains = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultChains;\n    const contracts = await this.multiChainRegistry.getContractAddresses(walletAddress);\n    const chainMap = chains.reduce((acc, chain) => {\n      acc[chain.chainId] = chain;\n      return acc;\n    }, {});\n    const sdkMap = {};\n    return contracts.map(_ref => {\n      let {\n        address,\n        chainId\n      } = _ref;\n      if (!chainMap[chainId]) {\n        // if we don't have the chain in our list of supported chains then we can't resolve the contract type regardless, don't even try to set up the SDK\n        return {\n          address,\n          chainId,\n          contractType: async () => \"custom\",\n          metadata: async () => ({\n            name: \"\"\n          }),\n          extensions: async () => []\n        };\n      }\n      try {\n        let chainSDK = sdkMap[chainId];\n        if (!chainSDK) {\n          chainSDK = new ThirdwebSDK(chainId, {\n            ...this.options,\n            // need to disable readonly settings for this to work\n            readonlySettings: undefined,\n            // @ts-expect-error - zod doesn't like this\n            supportedChains: chains\n          }, this.storage);\n          sdkMap[chainId] = chainSDK;\n        }\n        return {\n          address,\n          chainId,\n          contractType: () => chainSDK.resolveContractType(address),\n          metadata: async () => (await chainSDK.getContract(address)).metadata.get(),\n          extensions: async () => getAllDetectedExtensionNames((await chainSDK.getContract(address)).abi)\n        };\n      } catch (e) {\n        return {\n          address,\n          chainId,\n          contractType: async () => \"custom\",\n          metadata: async () => ({\n            name: \"\"\n          }),\n          extensions: async () => []\n        };\n      }\n    });\n  }\n\n  /**\n   * Update the active signer or provider for all contracts\n   * @param network - the new signer or provider\n   */\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n  updateContractSignerOrProvider() {\n    this.wallet.connect(this.getSignerOrProvider());\n    this.deployer.updateSignerOrProvider(this.getSignerOrProvider());\n    this._publisher.updateSignerOrProvider(this.getSignerOrProvider());\n    this.multiChainRegistry.updateSigner(this.getSignerOrProvider());\n    this.verifier.updateSignerOrProvider(this.getSignerOrProvider());\n    for (const [, contract] of this.contractCache) {\n      contract.onNetworkUpdated(this.getSignerOrProvider());\n    }\n  }\n\n  /**\n   * Get an instance of a Custom contract from a json ABI\n   * @param address - the address of the deployed contract\n   * @param abi - the JSON abi\n   * @returns The contract\n   * @beta\n   * @example\n   * ```javascript\n   * // Import your ABI from a JSON file\n   * import myABI from \"./path/to/myABI.json\";\n   *\n   * const contract = sdk.getContractFromAbi(\n   *   \"{{contract_address}}\",\n   *   // Pass in the \"abi\" field from the JSON file\n   *   myABI.abi\n   * );\n   * ```\n   */\n  async getContractFromAbi(address, abi) {\n    const [resolvedAddress, {\n      SmartContract\n    }] = await Promise.all([resolveAddress(address), import('./smart-contract-2e596ae6.esm.js')]);\n    if (this.contractCache.has(resolvedAddress)) {\n      return this.contractCache.get(resolvedAddress);\n    }\n    const [, provider] = getSignerAndProvider(this.getSignerOrProvider(), this.options);\n    const parsedABI = typeof abi === \"string\" ? JSON.parse(abi) : abi;\n    const contract = new SmartContract(this.getSignerOrProvider(), resolvedAddress, parsedABI, this.storageHandler, this.options, (await provider.getNetwork()).chainId);\n    this.contractCache.set(resolvedAddress, contract);\n    return contract;\n  }\n\n  /**\n   * Get the native balance of a given address (wallet or contract)\n   * @example\n   * ```javascript\n   * const balance = await sdk.getBalance(\"0x...\");\n   * console.log(balance.displayValue);\n   * ```\n   * @param address - the address to check the balance for\n   */\n  async getBalance(address) {\n    return fetchCurrencyValue(this.getProvider(), NATIVE_TOKEN_ADDRESS, await this.getProvider().getBalance(await resolveAddress(address)));\n  }\n\n  /**\n   * @internal\n   */\n  getPublisher() {\n    return this._publisher;\n  }\n}\nfunction addChainToSupportedChains(network, options) {\n  if (isChainConfig(network)) {\n    options = {\n      ...options,\n      // @ts-expect-error - we know that the network is assignable despite the readonly mismatch\n      supportedChains: [network, ...(options?.supportedChains || [])]\n    };\n  }\n  return options;\n}\nconst THIRDWEB_DEPLOYER = \"0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024\";\n\n/**\n * Handles deploying new contracts\n * @deploy\n * @public\n */\nclass ContractDeployer extends RPCConnectionHandler {\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getFactory} instead\n   */\n\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getRegistry} instead\n   */\n\n  transactionListener = event => {\n    if (event.status === \"submitted\") {\n      this.events.emit(\"contractDeployed\", {\n        status: \"submitted\",\n        transactionHash: event.transactionHash\n      });\n    }\n  };\n  constructor(network, options, storage) {\n    super(network, options);\n    this.storage = storage;\n    this.events = new EventEmitter();\n    // Initialize factory and registry (we don't need to make these calls async)\n    this.getFactory();\n    this.getRegistry();\n  }\n\n  /**\n   * Deploys an NFT Collection contract\n   *\n   * @remarks Deploys an NFT Collection contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployNFTCollection({\n   *   name: \"My Collection\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployNFTCollection = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(NFTCollectionInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new NFTDrop contract\n   *\n   * @remarks Deploys an NFT Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployNFTDrop({\n   *   name: \"My Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployNFTDrop = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(NFTDropInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new LoyaltyCard contract\n   *\n   * @remarks Deploys a LoyaltyCard contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployLoyaltyCard({\n   *   name: \"My Loyalty Program\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployLoyaltyCard = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    const parsedMetadata = await LoyaltyCardContractDeploy.parseAsync(metadata);\n    const contractURI = await this.storage.upload(parsedMetadata);\n    const trustedForwarders = [];\n    // add any custom forwarders passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders.push(...metadata.trusted_forwarders);\n    }\n    const signerAddress = await this.getSigner()?.getAddress();\n    const deployArgs = [signerAddress, parsedMetadata.name, parsedMetadata.symbol, contractURI, trustedForwarders, parsedMetadata.primary_sale_recipient, parsedMetadata.fee_recipient, parsedMetadata.seller_fee_basis_points, parsedMetadata.platform_fee_basis_points, parsedMetadata.platform_fee_recipient];\n    return await this.deployReleasedContract.prepare(THIRDWEB_DEPLOYER, \"LoyaltyCard\", deployArgs, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new OpenEditionERC721 contract\n   *\n   * @remarks Deploys a OpenEdition contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployOpenEdition({\n   *   name: \"My Open Edition\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployOpenEdition = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    const parsedMetadata = await DropErc721ContractSchema.deploy.parseAsync(metadata);\n    const contractURI = await this.storage.upload(parsedMetadata);\n    const trustedForwarders = [];\n    // add any custom forwarders passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders.push(...metadata.trusted_forwarders);\n    }\n    const signerAddress = await this.getSigner()?.getAddress();\n    const deployArgs = [signerAddress, parsedMetadata.name, parsedMetadata.symbol, contractURI, trustedForwarders, parsedMetadata.primary_sale_recipient, parsedMetadata.fee_recipient, parsedMetadata.seller_fee_basis_points];\n    return await this.deployPublishedContract.prepare(THIRDWEB_DEPLOYER, \"OpenEditionERC721\", deployArgs, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new SignatureDrop contract\n   *\n   * @remarks Deploys a SignatureDrop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deploySignatureDrop({\n   *   name: \"My Signature Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deploySignatureDrop = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(SignatureDropInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Multiwrap contract\n   *\n   * @remarks Deploys a Multiwrap contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployMultiwrap({\n   *   name: \"My Multiwrap\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   * @beta\n   */\n  deployMultiwrap = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(MultiwrapInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Edition contract\n   *\n   * @remarks Deploys an Edition contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployEdition({\n   *   name: \"My Edition\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployEdition = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(EditionInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new EditionDrop contract\n   *\n   * @remarks Deploys an Edition Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployEditionDrop({\n   *   name: \"My Edition Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployEditionDrop = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(EditionDropInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Token contract\n   *\n   * @remarks Deploys a Token contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployToken({\n   *   name: \"My Token\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployToken = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(TokenInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Token Drop contract\n   *\n   * @remarks Deploys a Token Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployTokenDrop({\n   *   name: \"My Token Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployTokenDrop = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(TokenDropInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Marketplace contract\n   *\n   * @remarks Deploys a Marketplace contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployMarketplace({\n   *   name: \"My Marketplace\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployMarketplace = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(MarketplaceInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Marketplace-V3 contract\n   *\n   * @remarks Deploys a Marketplace-V3 contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployMarketplaceV3({\n   *   name: \"My Marketplace\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployMarketplaceV3 = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(MarketplaceV3Initializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Pack contract\n   *\n   * @remarks Deploys a Pack contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployPack({\n   *   name: \"My Pack\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployPack = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(PackInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Split contract\n   *\n   * @remarks Deploys a Split contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deploySplit({\n   *   name: \"My Split\",\n   *   primary_sale_recipient: \"your-address\",\n   *   recipients: [\n   *    {\n   *      address: \"your-address\",\n   *      sharesBps: 80 * 100, // 80%\n   *    },\n   *    {\n   *      address: \"another-address\",\n   *      sharesBps: 20 * 100, // 20%\n   *    },\n   *   ],\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deploySplit = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(SplitInitializer.contractType, metadata, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new Vote contract\n   *\n   * @remarks Deploys an Vote contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployVote({\n   *   name: \"My Vote\",\n   *   primary_sale_recipient: \"your-address\",\n   *   voting_token_address: \"your-token-contract-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns The address of the deployed contract\n   */\n  deployVote = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    return await this.deployBuiltInContract.prepare(VoteInitializer.contractType, metadata, \"latest\", options);\n  });\n  deployAirdropERC20 = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    const parsedMetadata = await AirdropContractDeploy.parseAsync(metadata);\n    const contractURI = await this.storage.upload(parsedMetadata);\n    const trustedForwarders = [];\n    // add any custom forwarders passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders.push(...metadata.trusted_forwarders);\n    }\n    const signerAddress = await this.getSigner()?.getAddress();\n    const deployArgs = [signerAddress, contractURI, trustedForwarders];\n    return await this.deployReleasedContract.prepare(THIRDWEB_DEPLOYER, \"AirdropERC20\", deployArgs, \"latest\", options);\n  });\n  deployAirdropERC721 = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    const parsedMetadata = await AirdropContractDeploy.parseAsync(metadata);\n    const contractURI = await this.storage.upload(parsedMetadata);\n    const trustedForwarders = [];\n    // add any custom forwarders passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders.push(...metadata.trusted_forwarders);\n    }\n    const signerAddress = await this.getSigner()?.getAddress();\n    const deployArgs = [signerAddress, contractURI, trustedForwarders];\n    return await this.deployReleasedContract.prepare(THIRDWEB_DEPLOYER, \"AirdropERC721\", deployArgs, \"latest\", options);\n  });\n  deployAirdropERC1155 = /* @__PURE__ */buildDeployTransactionFunction(async (metadata, options) => {\n    const parsedMetadata = await AirdropContractDeploy.parseAsync(metadata);\n    const contractURI = await this.storage.upload(parsedMetadata);\n    const trustedForwarders = [];\n    // add any custom forwarders passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders.push(...metadata.trusted_forwarders);\n    }\n    const signerAddress = await this.getSigner()?.getAddress();\n    const deployArgs = [signerAddress, contractURI, trustedForwarders];\n    return await this.deployReleasedContract.prepare(THIRDWEB_DEPLOYER, \"AirdropERC1155\", deployArgs, \"latest\", options);\n  });\n\n  /**\n   * Deploys a new prebuilt contract\n   *\n   * @public\n   * @param contractType - the type of contract to deploy\n   * @param contractMetadata - the metadata to deploy the contract with\n   * @param version - the version of the contract to deploy\n   * @returns A promise of the address of the newly deployed contract\n   */\n  deployBuiltInContract = /* @__PURE__ */buildDeployTransactionFunction((() => {\n    var _this = this;\n    return async function (contractType, contractMetadata) {\n      let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n      let options = arguments.length > 3 ? arguments[3] : undefined;\n      const signer = _this.getSigner();\n      invariant(signer, \"A signer is required to deploy contracts\");\n      const parsedMetadata = {\n        app_uri: PREBUILT_CONTRACTS_APPURI_MAP[contractType],\n        ...(await PREBUILT_CONTRACTS_MAP[contractType].schema.deploy.parseAsync(contractMetadata))\n      };\n      if (_this.hasLocalFactory()) {\n        // old behavior for unit tests, deploy from local factory\n        // parse version into the first number of the version string (or undefined if unparseable)\n        let parsedVersion = undefined;\n        try {\n          parsedVersion = parseInt(version);\n          if (isNaN(parsedVersion)) {\n            parsedVersion = undefined;\n          }\n        } catch (e) {\n          parsedVersion = undefined;\n        }\n        const factory = await _this.getFactory();\n        if (!factory) {\n          throw new Error(\"Factory not found\");\n        }\n        factory.on(EventType.Transaction, _this.transactionListener);\n        return factory.deploy.prepare(contractType, parsedMetadata, _this.events, parsedVersion, options, () => {\n          factory.off(EventType.Transaction, _this.transactionListener);\n        });\n      }\n\n      // For all other chains, fetch from published contracts\n      // resolve contract name from type\n      const contractName = getContractName(contractType);\n      invariant(contractName, \"Contract name not found\");\n      // first upload the contract metadata\n      const contractURI = await _this.storage.upload(parsedMetadata);\n      // then get the deploy arguments\n      const constructorParams = await getDeployArguments(contractType, parsedMetadata, contractURI, signer);\n\n      // fetch the publish URI from the ContractPublisher contract\n      const publishedContract = await _this.fetchPublishedContractFromPolygon(THIRDWEB_DEPLOYER, contractName, version);\n      return _this.deployContractFromUri.prepare(publishedContract.metadataUri, constructorParams, options);\n    };\n  })());\n\n  /**\n   * @internal\n   * @param contractType - the type of contract to deploy\n   */\n  async getLatestBuiltInContractVersion(contractType) {\n    const factory = await this.getFactory();\n    if (!factory) {\n      throw new Error(\"Factory not found\");\n    }\n    return await factory.getLatestVersion(contractType);\n  }\n\n  /**\n   * Deploy any published contract by its name\n   * @param publisherAddress - the address of the publisher\n   * @param contractName - the name of the contract to deploy\n   * @param constructorParams - the constructor params to pass to the contract\n   *\n   * @deprecated use deployPublishedContract instead\n   * @internal\n   */\n  deployReleasedContract = /* @__PURE__ */buildDeployTransactionFunction((() => {\n    var _this2 = this;\n    return async function (publisherAddress, contractName, constructorParams) {\n      let version = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n      let options = arguments.length > 4 ? arguments[4] : undefined;\n      const publishedContract = await _this2.fetchPublishedContractFromPolygon(publisherAddress, contractName, version);\n      return await _this2.deployContractFromUri.prepare(publishedContract.metadataUri, constructorParams, options);\n    };\n  })());\n\n  /**\n   * Deploy any published contract by its name\n   * @param publisherAddress - the address of the publisher\n   * @param contractName - the name of the contract to deploy\n   * @param constructorParams - the constructor params to pass to the contract\n   * @param version - Optional: the version of the contract to deploy or \"latest\"\n   * @param options - Optional: the deploy options\n   */\n  deployPublishedContract = this.deployReleasedContract;\n\n  /**\n   * Deploy any published contract by its name\n   * @param contractName - the name of the contract to deploy\n   * @param constructorParams - the constructor params to pass to the contract\n   * @param publisherAddress - the address of the publisher\n   * @param version - Optional: the version of the contract to deploy or \"latest\"\n   * @param saltForCreate2 - Optional: salt for create2 deployment, will determine deployment address\n   */\n  async deployPublishedContractDeterministic(contractName, constructorParams) {\n    let publisherAddress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : THIRDWEB_DEPLOYER;\n    let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n    let saltForCreate2 = arguments.length > 4 ? arguments[4] : undefined;\n    const signer = this.getSigner();\n    invariant(signer, \"Signer is required\");\n    return directDeployDeterministicPublished(contractName, publisherAddress, contractVersion, constructorParams, signer, this.storage, this.options.clientId, this.options.secretKey, saltForCreate2);\n  }\n\n  /**\n   * Predict Create2 address of a contract\n   * @param contractName - the name of the contract\n   * @param constructorParams - the constructor params to pass to the contract\n   * @param publisherAddres -s the address of the publisher\n   * @param version - Optional: the version of the contract to deploy or \"latest\"\n   * @param saltForCreate2 - Optional: salt for create2 deployment, will determine deployment address\n   */\n  async predictAddressDeterministic(contractName, constructorParams) {\n    let publisherAddress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : THIRDWEB_DEPLOYER;\n    let contractVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n    let saltForCreate2 = arguments.length > 4 ? arguments[4] : undefined;\n    const provider = this.getProvider();\n    invariant(provider, \"Provider is required\");\n    return predictAddressDeterministicPublished(contractName, publisherAddress, contractVersion, constructorParams, provider, this.storage, this.options.clientId, this.options.secretKey, saltForCreate2);\n  }\n\n  /**\n   * Deploy a proxy contract of a given implementation via the given factory\n   * @param factoryAddress - the address of the factory\n   * @param implementationAddress - the address of the implementation\n   * @param implementationAbi - the abi of the implementation\n   * @param initializerFunction - the initializer function to call\n   * @param initializerArgs - the initializer args to pass to the initializer function\n   */\n  deployViaFactory = /* @__PURE__ */buildTransactionFunction(async (factoryAddress, implementationAddress, implementationAbi, initializerFunction, initializerArgs, saltForProxyDeploy) => {\n    const resolvedFactoryAddress = await resolveAddress(factoryAddress);\n    const resolvedImplementationAddress = await resolveAddress(implementationAddress);\n    const signer = this.getSigner();\n    invariant(signer, \"signer is required\");\n    // TODO only require factory interface here - IProxyFactory\n    const proxyFactory = new ContractFactory(resolvedFactoryAddress, this.getSignerOrProvider(), this.storage, this.options);\n    proxyFactory.on(EventType.Transaction, this.transactionListener);\n    return await proxyFactory.deployProxyByImplementation.prepare(resolvedImplementationAddress, implementationAbi, initializerFunction, initializerArgs, this.events, saltForProxyDeploy, () => {\n      proxyFactory.off(EventType.Transaction, this.transactionListener);\n    });\n  });\n\n  /**\n   * Deploy a proxy contract of a given implementation directly\n   * @param implementationAddress - the address of the implementation\n   * @param implementationAbi - the abi of the implementation\n   * @param initializerFunction - the initializer function to call\n   * @param initializerArgs - the initializer args to pass to the initializer function\n   */\n  deployProxy = /* @__PURE__ */buildDeployTransactionFunction(async (implementationAddress, implementationAbi, initializerFunction, initializerArgs) => {\n    const resolvedAddress = await resolveAddress(implementationAddress);\n    const encodedInitializer = Contract.getInterface(implementationAbi).encodeFunctionData(initializerFunction, initializerArgs);\n    const {\n      TWProxy__factory\n    } = await import('@thirdweb-dev/contracts-js/factories/TWProxy__factory');\n    return this.deployContractWithAbi.prepare(TWProxy__factory.abi, TWProxy__factory.bytecode, [resolvedAddress, encodedInitializer]);\n  });\n\n  /**\n   * Deploy a proxy contract of a given implementation via thirdweb's Clone factory\n   * @param publishMetadataUri - the uri of the publish metadata\n   * @param constructorParamValues - the constructor param values\n   * @param deployMetadata - the deploy metadata\n   * @param signer - the signer to use\n   * @param options - the deploy options\n   * @internal\n   */\n  deployViaAutoFactory = /* @__PURE__ */buildDeployTransactionFunction(async (publishMetadataUri, deployMetadata, signer, initializerFunction, paramValues, options) => {\n    // any evm deployment flow\n\n    // 1. Deploy CREATE2 factory (if not already exists)\n    const create2Factory = await deployCreate2Factory(signer, options);\n\n    // 2. get deployment info for any evm\n    const deploymentInfo = await getDeploymentInfo(publishMetadataUri, this.storage, this.getProvider(), create2Factory, this.options.clientId, this.options.secretKey);\n    const implementationAddress = deploymentInfo.find(i => i.type === \"implementation\")?.transaction.predictedAddress;\n\n    // 3. deploy infra + plugins + implementation using a throwaway Deployer contract\n\n    // filter out already deployed contracts (data is empty)\n    const transactionsToSend = deploymentInfo.filter(i => i.transaction.data && i.transaction.data.length > 0);\n    const transactionsforDirectDeploy = transactionsToSend.filter(i => {\n      return i.type !== \"infra\";\n    }).map(i => i.transaction);\n    const transactionsForThrowawayDeployer = transactionsToSend.filter(i => {\n      return i.type === \"infra\";\n    }).map(i => i.transaction);\n\n    // deploy via throwaway deployer, multiple infra contracts in one transaction\n    await deployWithThrowawayDeployer(signer, transactionsForThrowawayDeployer, options);\n\n    // send each transaction directly to Create2 factory\n    // process txns one at a time\n    for (const tx of transactionsforDirectDeploy) {\n      try {\n        await deployContractDeterministic(signer, tx, options);\n      } catch (e) {\n        console.debug(`Error deploying contract at ${tx.predictedAddress}`, e?.message);\n        throw e;\n      }\n    }\n    const resolvedImplementationAddress = await resolveAddress(implementationAddress);\n\n    // 4. deploy proxy with TWStatelessFactory (Clone factory) and return address\n    const cloneFactory = await computeCloneFactoryAddress(this.getProvider(), this.storage, create2Factory, this.options.clientId, this.options.secretKey);\n    options?.notifier?.(\"deploying\", \"proxy\");\n    const proxyDeployTransaction = await this.deployViaFactory.prepare(cloneFactory, resolvedImplementationAddress, deployMetadata.compilerMetadata.abi, initializerFunction, paramValues, options?.saltForProxyDeploy);\n    options?.notifier?.(\"deployed\", \"proxy\");\n    return proxyDeployTransaction;\n  });\n\n  /**\n   * Deploy a proxy contract of a given implementation via a custom factory\n   * @param constructorParamValues - the constructor param values\n   * @param deployMetadata - the deploy metadata\n   * @param signer - the signer to use\n   * @param chainId - the chain id to deploy to\n   * @internal\n   */\n  deployViaCustomFactory = /* @__PURE__ */buildDeployTransactionFunction(async (constructorParamValues, deployMetadata, signer, chainId) => {\n    const customFactoryAddress = deployMetadata.extendedMetadata?.factoryDeploymentData?.customFactoryInput?.customFactoryAddresses[chainId];\n    const resolvedCustomFactoryAddress = await resolveAddress(customFactoryAddress);\n    invariant(resolvedCustomFactoryAddress, `customFactoryAddress not found for chainId '${chainId}'`);\n    invariant(deployMetadata.extendedMetadata?.factoryDeploymentData?.customFactoryInput?.factoryFunction, `customFactoryFunction not set'`);\n    const customFactoryMetadata = await fetchContractMetadataFromAddress(resolvedCustomFactoryAddress, this.getProvider(), this.storage, this.options);\n    const factoryFunctionParamTypes = extractFunctionParamsFromAbi(customFactoryMetadata.abi, deployMetadata.extendedMetadata.factoryDeploymentData.customFactoryInput.factoryFunction).map(p => p.type);\n    const factoryFunctionparamValues = convertParamValues(factoryFunctionParamTypes, constructorParamValues);\n\n    // eslint-disable-next-line prefer-const\n    let deployedImplementationAddress;\n    const deployTransaction = await Transaction.fromContractInfo({\n      contractAddress: resolvedCustomFactoryAddress,\n      contractAbi: customFactoryMetadata.abi,\n      provider: this.getProvider(),\n      signer,\n      method: deployMetadata.extendedMetadata.factoryDeploymentData.customFactoryInput.factoryFunction,\n      args: factoryFunctionparamValues,\n      parse: () => {\n        return deployedImplementationAddress;\n      },\n      storage: this.storage\n    });\n    deployedImplementationAddress = await deployTransaction.simulate();\n    return deployTransaction;\n  });\n\n  /**\n   * @internal\n   */\n  async getRegistry() {\n    // if we already have a registry just return it back\n    if (this._registry) {\n      return this._registry;\n    }\n\n    // otherwise get the registry address for the active chain and get a new one\n\n    // have to do it like this otherwise we run it over and over and over\n    // \"this._registry\" has to be assigned to the promise upfront.\n    return this._registry = this.getProvider().getNetwork().then(async _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const registryAddress = getContractAddressByChainId(chainId, \"twRegistry\");\n      if (!registryAddress) {\n        return undefined;\n      }\n      const TWRegistryABI = (await import('@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json')).default;\n      return new ContractRegistry(registryAddress, this.getSignerOrProvider(), this.storage, TWRegistryABI, this.options);\n    });\n  }\n  async getFactory() {\n    // if we already have a factory just return it back\n    if (this._factory) {\n      return this._factory;\n    }\n\n    // otherwise get the factory address for the active chain and get a new one\n\n    // have to do it like this otherwise we run it over and over and over\n    // \"this._factory\" has to be assigned to the promise upfront.\n    return this._factory = this.getProvider().getNetwork().then(async _ref3 => {\n      let {\n        chainId\n      } = _ref3;\n      const factoryAddress = getContractAddressByChainId(chainId, \"twFactory\");\n      if (!factoryAddress) {\n        return undefined;\n      }\n      const factory = new ContractFactory(factoryAddress, this.getSignerOrProvider(), this.storage, this.options);\n      return factory;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n  updateContractSignerOrProvider() {\n    // has to be promises now\n    this._factory?.then(factory => {\n      factory?.updateSignerOrProvider(this.getSignerOrProvider());\n    }).catch(() => {\n      // ignore\n    });\n    // has to be promises now\n    this._registry?.then(registry => {\n      registry?.updateSignerOrProvider(this.getSignerOrProvider());\n    }).catch(() => {\n      // ignore\n    });\n  }\n\n  /**\n   * @internal\n   * @param publishMetadataUri - the uri of the publish metadata\n   * @param constructorParamValues - the constructor param values\n   * @param options - the deploy options\n   */\n  deployContractFromUri = /* @__PURE__ */buildDeployTransactionFunction(async (publishMetadataUri, constructorParamValues, options) => {\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const {\n      compilerMetadata,\n      extendedMetadata\n    } = await fetchAndCacheDeployMetadata(publishMetadataUri, this.storage);\n    const forceDirectDeploy = options?.forceDirectDeploy || false;\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    const isNetworkEnabled = extendedMetadata?.networksForDeployment?.networksEnabled.includes(chainId) || extendedMetadata?.networksForDeployment?.allNetworks;\n    if (extendedMetadata?.networksForDeployment && !isNetworkEnabled && compilerMetadata.name !== \"AccountFactory\" // ignore network restrictions for simple AccountFactory\n    ) {\n      throw new Error(`Deployments disabled on this network, with chainId: ${chainId}`);\n    }\n    if (extendedMetadata && extendedMetadata.factoryDeploymentData && (extendedMetadata.isDeployableViaProxy || extendedMetadata.isDeployableViaFactory || extendedMetadata.deployType && extendedMetadata.deployType !== \"standard\") && !forceDirectDeploy) {\n      if (extendedMetadata.deployType === \"customFactory\") {\n        return await this.deployViaCustomFactory.prepare(constructorParamValues, {\n          compilerMetadata,\n          extendedMetadata\n        }, signer, chainId);\n      } else {\n        invariant(extendedMetadata.factoryDeploymentData.implementationInitializerFunction, `implementationInitializerFunction not set'`);\n        const initializerParamTypes = extractFunctionParamsFromAbi(compilerMetadata.abi, extendedMetadata.factoryDeploymentData.implementationInitializerFunction).map(p => p.type);\n        const paramValues = convertParamValues(initializerParamTypes, constructorParamValues);\n        const implementationAddress = extendedMetadata.factoryDeploymentData.implementationAddresses[chainId];\n        if (!implementationAddress || extendedMetadata.deployType === \"autoFactory\") {\n          return await this.deployViaAutoFactory.prepare(publishMetadataUri, {\n            compilerMetadata,\n            extendedMetadata\n          }, signer, extendedMetadata.factoryDeploymentData.implementationInitializerFunction, paramValues, options);\n        }\n        const resolvedImplementationAddress = await resolveAddress(implementationAddress);\n        invariant(resolvedImplementationAddress, `implementationAddress not found for chainId '${chainId}'`);\n        if (extendedMetadata.isDeployableViaFactory) {\n          // deploy via a factory (prioritise factory)\n          invariant(extendedMetadata.factoryDeploymentData.factoryAddresses, \"isDeployableViaFactory is true so factoryAddresses is required\");\n          const factoryAddress = extendedMetadata.factoryDeploymentData.factoryAddresses[chainId];\n          invariant(factoryAddress, `isDeployableViaFactory is true and factoryAddress not found for chainId '${chainId}'`);\n          const resolvedFactoryAddress = await resolveAddress(factoryAddress);\n          return await this.deployViaFactory.prepare(resolvedFactoryAddress, resolvedImplementationAddress, compilerMetadata.abi, extendedMetadata.factoryDeploymentData.implementationInitializerFunction, paramValues, options?.saltForProxyDeploy);\n        } else if (extendedMetadata.isDeployableViaProxy) {\n          // deploy a proxy directly\n          return await this.deployProxy.prepare(resolvedImplementationAddress, compilerMetadata.abi, extendedMetadata.factoryDeploymentData.implementationInitializerFunction, paramValues);\n        }\n      }\n    }\n    const bytecode = compilerMetadata.bytecode.startsWith(\"0x\") ? compilerMetadata.bytecode : `0x${compilerMetadata.bytecode}`;\n    if (!utils.isHexString(bytecode)) {\n      throw new Error(`Contract bytecode is invalid.\\n\\n${bytecode}`);\n    }\n    const constructorParamTypes = extractConstructorParamsFromAbi(compilerMetadata.abi).map(p => p.type);\n    const paramValues = convertParamValues(constructorParamTypes, constructorParamValues);\n    return this.deployContractWithAbi.prepare(compilerMetadata.abi, bytecode, paramValues);\n  });\n\n  /**\n   * @public\n   * @param abi - the abi of the contract\n   * @param bytecode - the bytecode of the contract\n   * @param constructorParams - the constructor params to pass to the contract\n   */\n  deployContractWithAbi = /* @__PURE__ */buildDeployTransactionFunction(async (abi, bytecode, constructorParams) => {\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer, \"Signer is required to deploy contracts\");\n    const factory = new ContractFactory$1(abi, bytecode).connect(signer);\n    return new DeployTransaction({\n      args: constructorParams,\n      provider,\n      signer,\n      factory,\n      storage: this.storage,\n      events: this.events\n    });\n  });\n\n  /**\n   * @public\n   * @param publishMetadataUri - the uri of the publish metadata\n   * @param options - the deploy options\n   */\n  async getTransactionsForDeploy(publishMetadataUri, options) {\n    let transactions = [];\n    const provider = this.getProvider();\n    invariant(provider, \"A provider is required\");\n    const {\n      extendedMetadata\n    } = await fetchAndCacheDeployMetadata(publishMetadataUri, this.storage);\n    const forceDirectDeploy = options?.forceDirectDeploy || false;\n    if (extendedMetadata && extendedMetadata.factoryDeploymentData && (extendedMetadata.isDeployableViaProxy || extendedMetadata.isDeployableViaFactory || extendedMetadata.deployType === \"autoFactory\") && !forceDirectDeploy) {\n      const chainId = (await this.getProvider().getNetwork()).chainId;\n      const implementationAddress = extendedMetadata.factoryDeploymentData.implementationAddresses[chainId];\n      if (!implementationAddress || extendedMetadata.deployType === \"autoFactory\") {\n        const create2FactoryAddress = await getCreate2FactoryAddress(this.getProvider());\n        transactions.push({\n          contractType: \"create2Factory\",\n          addresses: [create2FactoryAddress]\n        });\n        const deploymentInfo = await getDeploymentInfo(publishMetadataUri, this.storage, this.getProvider(), create2FactoryAddress, this.options.clientId, this.options.secretKey);\n        const transactionsToSend = deploymentInfo.filter(i => i.transaction.data && i.transaction.data.length > 0);\n        const transactionsforDirectDeploy = transactionsToSend.filter(i => {\n          return i.type !== \"infra\";\n        }).map(i => i.transaction);\n        transactionsforDirectDeploy.forEach(tx => {\n          transactions.push({\n            contractType: \"preset\",\n            addresses: [tx.predictedAddress]\n          });\n        });\n        const transactionsForThrowawayDeployer = transactionsToSend.filter(i => {\n          return i.type === \"infra\";\n        }).map(i => i.transaction);\n        const transactionBatches = createTransactionBatches(transactionsForThrowawayDeployer);\n        transactionBatches.forEach(batch => {\n          const addresses = batch.map(tx => tx.predictedAddress);\n          transactions.push({\n            contractType: \"infra\",\n            addresses: addresses\n          });\n        });\n      }\n      transactions = (await Promise.all(transactions.map(async tx => {\n        const addresses = (await Promise.all(tx.addresses.map(async address => {\n          const isDeployed = await isContractDeployed(address, provider);\n          return isDeployed ? null : address;\n        }))).filter(Boolean);\n        return addresses.length > 0 ? tx : null;\n      }))).filter(Boolean);\n      transactions.push({\n        contractType: \"proxy\",\n        addresses: []\n      });\n    } else {\n      transactions.push({\n        contractType: \"custom\",\n        addresses: []\n      });\n    }\n    return transactions;\n  }\n\n  /**\n   * Listen to all deploy transactions from this deployer\n   * @param listener - the listener to add\n   */\n  addDeployListener(listener) {\n    this.events.on(\"contractDeployed\", listener);\n  }\n\n  /**\n   * Remove a deploy listener\n   * @param listener - the listener to remove\n   */\n  removeDeployListener(listener) {\n    this.events.off(\"contractDeployed\", listener);\n  }\n\n  /**\n   * Remove all deploy listeners\n   */\n  removeAllDeployListeners() {\n    this.events.removeAllListeners(\"contractDeployed\");\n  }\n\n  // PRIVATE METHODS\n\n  async fetchPublishedContractFromPolygon(publisherAddress, contractName, version) {\n    const address = await resolveAddress(publisherAddress);\n    // TODO don't create a new sdk instance here, instead read from contract directly with provider\n    // this will allow moving deployer out of this file and help with tree shaking\n    const publishedContract = await new ThirdwebSDK(\"polygon\", {\n      clientId: this.options.clientId,\n      secretKey: this.options.secretKey\n    }, this.storage).getPublisher().getVersion(address, contractName, version);\n    if (!publishedContract) {\n      throw new Error(`No published contract found for '${contractName}' at version '${version}' by '${address}'`);\n    }\n    return publishedContract;\n  }\n  hasLocalFactory() {\n    return !!getProcessEnv(\"factoryAddress\");\n  }\n}\n\nexport { APPROVED_IMPLEMENTATIONS as A, ContractVerifier as C, LOCAL_NODE_PKEY as L, SUPPORTED_CHAIN_IDS as S, ThirdwebSDK as T, UserWallet as U, ContractDeployer as a, getAllDetectedExtensionNames as b, checkClientIdOrSecretKey as c, verify as d, extractFunctionParamsFromAbi as e, checkVerificationStatus as f, getAllDetectedFeatureNames as g, computeCloneFactoryAddress as h, isVerifiedOnEtherscan as i, getThirdwebContractAddress as j, getEncodedConstructorParamsForThirdwebContract as k, deployCreate2Factory as l, directDeployDeterministic as m, directDeployDeterministicWithUri as n, directDeployDeterministicPublished as o, predictThirdwebContractAddress as p, predictAddressDeterministic as q, predictAddressDeterministicWithUri as r, predictAddressDeterministicPublished as s, convertParamValues as t, getDeployArguments as u, verifyThirdwebPrebuiltImplementation as v, getTrustedForwarders as w, getApprovedImplementation as x, getDefaultTrustedForwarders as y };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/setErc20Allowance-41394a37.esm.js"],"sourcesContent":["import { cC as BigNumberTransformSchema, cD as FileOrBufferOrStringSchema, cE as HexColor, cx as ContractWrapper } from './index-6d283666.esm.js';\nimport { z } from 'zod';\nimport { i as isNativeToken } from './fetchCurrencyValue-473fae98.esm.js';\n\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(z.array(PropertiesInput)).transform(i => i.flat()), z.array(PropertiesInput), PropertiesInput]).optional().nullable())();\n\n/**\n * @internal\n */\nconst BasicNFTInput = /* @__PURE__ */(() => z.object({\n  name: z.union([z.string(), z.number()]).optional().nullable(),\n  description: z.string().nullable().optional().nullable(),\n  image: FileOrBufferOrStringSchema.nullable().optional(),\n  animation_url: FileOrBufferOrStringSchema.optional().nullable()\n}))();\n\n/**\n * @internal\n */\nconst CommonNFTInput = /* @__PURE__ */(() => BasicNFTInput.extend({\n  external_url: FileOrBufferOrStringSchema.nullable().optional(),\n  background_color: HexColor.optional().nullable(),\n  properties: OptionalPropertiesInput,\n  attributes: OptionalPropertiesInput\n}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst NFTInputOrUriSchema = /* @__PURE__ */(() => z.union([CommonNFTInput, z.string()]))();\n\n/**\n * @internal\n */\nconst CommonNFTOutput = /* @__PURE__ */(() => CommonNFTInput.extend({\n  id: z.string(),\n  uri: z.string(),\n  image: z.string().nullable().optional(),\n  external_url: z.string().nullable().optional(),\n  animation_url: z.string().nullable().optional()\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nasync function setErc20Allowance(contractToApprove, value, currencyAddress, overrides) {\n  if (isNativeToken(currencyAddress)) {\n    overrides[\"value\"] = value;\n  } else {\n    const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n    const signer = contractToApprove.getSigner();\n    const provider = contractToApprove.getProvider();\n    const erc20 = new ContractWrapper(signer || provider, currencyAddress, ERC20Abi, contractToApprove.options, contractToApprove.storage);\n    const owner = await contractToApprove.getSignerAddress();\n    const spender = contractToApprove.address;\n    const allowance = await erc20.read(\"allowance\", [owner, spender]);\n    if (allowance.lt(value)) {\n      // approve overrides the previous allowance, set it to the minimum required for this tx\n      await erc20.sendTransaction(\"approve\", [spender, value]);\n    }\n    return overrides;\n  }\n}\n\nexport { BasicNFTInput as B, CommonNFTInput as C, NFTInputOrUriSchema as N, CommonNFTOutput as a, setErc20Allowance as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14293, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/getStatus-dd9c1043.esm.js"],"sourcesContent":["import { a3 as hasMatchingAbi, bo as AbiSchema, d5 as coreContractAbi, d6 as extensionContractAbi, d7 as hasDuplicates, cB as AmountSchema, aB as getCreate2FactoryAddress, aJ as computeDeploymentInfo, az as isContractDeployed, aE as getInitBytecodeWithSalt, bc as BigNumberTransformSchema, ba as BigNumberSchema, bb as BigNumberishSchema, be as AddressOrEnsSchema } from './index-6d283666.esm.js';\nimport { providers, utils, BigNumber } from 'ethers';\nimport { getChainByChainIdAsync, getChainRPC } from '@thirdweb-dev/chains';\nimport invariant from 'tiny-invariant';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nimport { z } from 'zod';\nimport { a as CommonNFTOutput, C as CommonNFTInput, N as NFTInputOrUriSchema } from './setErc20Allowance-41394a37.esm.js';\nimport { createThirdwebClient, getBuyWithCryptoQuote as getBuyWithCryptoQuote$1, prepareTransaction } from 'thirdweb';\nimport { getBuyWithCryptoHistory as getBuyWithCryptoHistory$1, getBuyWithCryptoStatus as getBuyWithCryptoStatus$1 } from 'thirdweb/pay';\nimport { resolvePromisedValue } from 'thirdweb/utils';\n\n/**\n * @internal\n * @param contractWrapper - The contract wrapper to check\n * @param abi - The abi to check\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(AbiSchema.parse(contractWrapper.abi || []), [abi]);\n}\n\nasync function compatibleExtensions(coreBytecode, extensionBytecodes, chainId) {\n  const chain = await getChainByChainIdAsync(chainId);\n  const rpcUrl = getChainRPC(chain);\n  const jsonRpcProvider = new providers.JsonRpcProvider(rpcUrl);\n  const addr = \"0x0000000000000000000000000000000000000124\"; // arbitrary address\n\n  /**\n   *  Here we use state override with eth_call.\n   *\n   *  This lets us call functions on a non-deployed contract, by using its deployed bytecode\n   *  to override code of an arbitrary address in eth_call.\n   *\n   *  Encode function calldata, and perform eth_call with bytecode override.\n   */\n\n  const coreIface = new utils.Interface(coreContractAbi);\n  const coreCalldata = coreIface.encodeFunctionData(\"getSupportedCallbackFunctions\", []);\n  if (!coreBytecode.startsWith(\"0x6080604052\")) {\n    const index = coreBytecode.indexOf(\"6080604052\");\n    coreBytecode = `0x${coreBytecode.substring(index)}`;\n  } else if (coreBytecode.lastIndexOf(\"6080604052\") > 0) {\n    const index = coreBytecode.lastIndexOf(\"6080604052\");\n    coreBytecode = `0x${coreBytecode.substring(index)}`;\n  }\n  const core = await jsonRpcProvider.send(\"eth_call\", [{\n    to: addr,\n    data: coreCalldata\n  }, \"latest\", {\n    [addr]: {\n      code: coreBytecode\n    }\n  } // eth_call with bytecode override\n  ]);\n  const extensionIface = new utils.Interface(extensionContractAbi);\n  const extensionCalldata = extensionIface.encodeFunctionData(\"getExtensionConfig\", []);\n  const extensions = await Promise.all(extensionBytecodes.map(b => {\n    // TODO: Upload deployed bytecode on publish metadata\n\n    if (!b.startsWith(\"0x6080604052\")) {\n      const index = b.indexOf(\"6080604052\");\n      b = `0x${b.substring(index)}`;\n    } else if (b.lastIndexOf(\"6080604052\") > 0) {\n      const index = b.lastIndexOf(\"6080604052\");\n      b = `0x${b.substring(index)}`;\n    }\n    return jsonRpcProvider.send(\"eth_call\", [{\n      to: addr,\n      data: extensionCalldata\n    }, \"latest\", {\n      [addr]: {\n        code: b\n      }\n    } // eth_call with bytecode override\n    ]);\n  }));\n  const decodedCore = coreIface.decodeFunctionResult(\"getSupportedCallbackFunctions\", core);\n  const coreCallbackSelectors = decodedCore.flat().map(c => c.selector);\n\n  // extract callback/fallback selectors and required interfaces from extension config\n  const requiredInterfaces = [];\n  const extensionFallbackSelectors = [];\n  const extensionCallbackSelectors = [];\n  const selectors = [];\n  extensions.forEach(e => {\n    const decodedExtensionConfig = extensionIface.decodeFunctionResult(\"getExtensionConfig\", e);\n    requiredInterfaces.push(...decodedExtensionConfig[0].requiredInterfaces);\n    const fallbackSelectors = decodedExtensionConfig[0].fallbackFunctions.map(a => a.selector);\n    const callbackSelectors = decodedExtensionConfig[0].callbackFunctions.map(a => a.selector);\n    extensionFallbackSelectors.push(...fallbackSelectors);\n    extensionCallbackSelectors.push(...callbackSelectors);\n  });\n\n  // check if callback selectors are supported\n  for (const callback of extensionCallbackSelectors) {\n    if (!coreCallbackSelectors.includes(callback)) {\n      return false;\n    }\n  }\n\n  // check if the core contract supports required interfaces by extensions above\n  if (requiredInterfaces.length > 0) {\n    const supportsInterfaceResult = await Promise.all(requiredInterfaces.map(r => {\n      const supportsInterfaceCalldata = coreIface.encodeFunctionData(\"supportsInterface\", [r]);\n      return jsonRpcProvider.send(\"eth_call\", [{\n        to: addr,\n        data: supportsInterfaceCalldata\n      }, \"latest\", {\n        [addr]: {\n          code: coreBytecode\n        }\n      }]);\n    }));\n    const supportsInterfaceDecoded = supportsInterfaceResult.map(r => {\n      return coreIface.decodeFunctionResult(\"supportsInterface\", r);\n    });\n    if (supportsInterfaceDecoded.flat().some(element => element === false)) {\n      return false;\n    }\n  }\n\n  // check duplicate callback/fallback signatures\n  selectors.push(...extensionFallbackSelectors, ...extensionCallbackSelectors);\n  return !hasDuplicates(selectors.flat(), (a, b) => a === b);\n}\n\nfunction toUnits(amount, decimals) {\n  return utils.parseUnits(AmountSchema.parse(amount), decimals);\n}\n\nfunction toDisplayValue(amount, decimals) {\n  return utils.formatUnits(amount, decimals);\n}\n\n/**\n *\n * @internal\n * @param provider - The provider to use\n * @param storage - The storage to use\n * @param create2Factory - The create2 factory to use\n */\nasync function computeNativeTokenAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"WETH9\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @internal\n *\n * @param signer - The signer to use\n * @param bytecode - The bytecode to deploy\n * @param encodedArgs - The encoded constructor args to use\n * @param create2FactoryAddress - The create2 factory address to use\n */\nasync function deployContractDeterministicRaw(signer, bytecode, encodedArgs, create2FactoryAddress, options, predictedAddress) {\n  let gasLimit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = predictedAddress ? await isContractDeployed(predictedAddress, signer.provider) : false;\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${predictedAddress}`);\n    const initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, encodedArgs);\n    const tx = {\n      to: create2FactoryAddress,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    await (await signer.sendTransaction(tx)).wait();\n  }\n}\n\n/**\n * @internal\n */\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n  return undefined;\n}\n\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\n\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(PropertiesInput), PropertiesInput]).optional())();\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = /* @__PURE__ */(() => EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = /* @__PURE__ */(() => z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n}))();\n\n/**\n * @public\n */\n\n/**\n * The parameters for [`getBuyWithCryptoHistory`](https://portal.thirdweb.com/references/typescript/v4/getBuyWithCryptoHistory) function\n * It takes the wallet history address and optional cursor and page size. for paginated results.\n */\n\n/**\n * Gets the History of purchases for a given wallet address\n * @param params - Object of type [`BuyWithCryptoHistoryParams`](https://portal.thirdweb.com/references/typescript/v4/BuyWithCryptoHistoryParams)\n * @example\n *\n * ```ts\n//  * import { BuyWithCryptoHistoryData } from \"@thirdweb-dev/sdk\";\n *\n * const walletAddress = \"0x...\";\n * const params = {\n *  clientId: \"YOUR_CLIENT_ID\",\n *  walletAddress,\n * };\n *\n * // grabs the history of purchase transactions for the wallet address\n * const status = await getBuyWithCryptoHistory(params)\n * ```\n * @returns Object of type [`BuyWithCryptoHistoryData`](https://portal.thirdweb.com/references/typescript/v5/BuyWithCryptoHistoryData)\n */\nasync function getBuyWithCryptoHistory(params) {\n  let client;\n  if (params.secretKey) {\n    client = createThirdwebClient({\n      secretKey: params.secretKey\n    });\n  }\n  if (params.clientId) {\n    client = createThirdwebClient({\n      clientId: params.clientId\n    });\n  }\n  if (!client) {\n    throw new Error(\"You must provide either a `clientId` or a `secretKey` to get a quote\");\n  }\n  return getBuyWithCryptoHistory$1({\n    ...params,\n    client: client\n  });\n}\n\n/**\n * The parameters for [`getBuyWithCryptoQuote`](https://portal.thirdweb.com/references/typescript/v4/getBuyWithCryptoQuote) function\n * It includes information about which tokens to swap, the amount of tokens to swap, slippage, etc.\n */\n\n/**\n * Get a quote of type [`BuyWithCryptoQuote`](https://portal.thirdweb.com/references/typescript/v5/BuyWithCryptoQuote) to buy any given token with crypto.\n * This quote contains the information about the swap such as token amounts, processing fees, estimated time etc.\n *\n * Once you have the quote, you can use `prepareTransaction` and prepare the transaction for submission.\n * @param params - object of type [`GetBuyWithCryptoQuoteParams`](https://portal.thirdweb.com/references/typescript/v5/GetBuyWithCryptoQuoteParams)\n * @returns Object of type [`BuyWithCryptoQuote`](https://portal.thirdweb.com/references/typescript/v5/BuyWithCryptoQuote) which contains the information about the quote such as processing fees, estimated time, converted token amounts, etc.\n * @example\n *\n * ```ts\n * import { getBuyWithCryptoQuote } from \"@thirdweb-dev/sdk\";\n *\n * const quote = await getBuyWithCryptoQuote({\n *  clientId: \"...\",\n *  fromAddress: \"0x...\", // wallet address\n *  fromChainId: 137, // chain id of the source token\n *  fromTokenAddress: \"0x...\", // token address of the source token\n *  fromAmount: \"10\", // amount of source token to swap\n *  // optionally, you can use `toAmount` instead if you only want a certain amount of destination token\n *  toChainId: 10, // chain id of the destination token\n *  toTokenAddress: \"0x...\", // token address of the destination token\n *  toAddress: \"0x...\", // optional: send the tokens to a different address\n *  maxSlippageBPS: 50, // optional: max 0.5% slippage\n * });\n * ```\n */\nasync function getBuyWithCryptoQuote(params) {\n  let client;\n  if (params.secretKey) {\n    client = createThirdwebClient({\n      secretKey: params.secretKey\n    });\n  }\n  if (params.clientId) {\n    client = createThirdwebClient({\n      clientId: params.clientId\n    });\n  }\n  if (!client) {\n    throw new Error(\"You must provide either a `clientId` or a `secretKey` to get a quote\");\n  }\n  const data = await getBuyWithCryptoQuote$1({\n    ...params,\n    client\n  });\n  const sendTxn = prepareTransaction(data.transactionRequest);\n  const approvalTxn = data.approval ? prepareTransaction(data.approval) : undefined;\n  const [sendTxnTo, sendTxnData, sendTxnGasPrice, sendTxnGasLimit, sendTxnNonce, sendTxnValue, approvalTxnTo, approvalTxnData, approvalTxnGasLimit, approvalTxnGasPrice, approvalTxnNonce, approvalTxnValue] = await Promise.all([resolvePromisedValue(sendTxn.to), resolvePromisedValue(sendTxn.data), resolvePromisedValue(sendTxn.gasPrice), resolvePromisedValue(sendTxn.gas), resolvePromisedValue(sendTxn.nonce), resolvePromisedValue(sendTxn.value), resolvePromisedValue(approvalTxn?.to), resolvePromisedValue(approvalTxn?.data), resolvePromisedValue(approvalTxn?.gas), resolvePromisedValue(approvalTxn?.gasPrice), resolvePromisedValue(approvalTxn?.nonce), resolvePromisedValue(approvalTxn?.value)]);\n  const swapRoute = {\n    transactionRequest: {\n      to: sendTxnTo,\n      data: sendTxnData,\n      gasPrice: sendTxnGasPrice,\n      gasLimit: sendTxnGasLimit,\n      nonce: sendTxnNonce,\n      value: sendTxnValue,\n      chainId: sendTxn.chain.id\n    },\n    approval: approvalTxn ? {\n      to: approvalTxnTo,\n      data: approvalTxnData,\n      gasLimit: approvalTxnGasLimit,\n      gasPrice: approvalTxnGasPrice,\n      nonce: approvalTxnNonce,\n      value: approvalTxnValue,\n      chainId: approvalTxn.chain.id\n    } : undefined,\n    swapDetails: data.swapDetails,\n    paymentTokens: data.paymentTokens,\n    processingFees: data.processingFees,\n    client\n  };\n  return swapRoute;\n}\n\n/**\n * Gets the status of a buy with crypto transaction\n * @param buyWithCryptoTransaction - Object of type [`BuyWithCryptoTransaction`](https://portal.thirdweb.com/references/typescript/v5/BuyWithCryptoTransaction)\n * @example\n *\n * ```ts\n * import { getBuyWithCryptoStatus, getBuyWithCryptoQuote } @thirdweb-dev/sdk\";\n *\n * // get a quote between two tokens\n * const quote = await getBuyWithCryptoQuote(quoteParams);\n * // if approval is required, send the approval transaction\n * if (quote.approval) {\n *   const response = await signer.sendTransaction(quote.approval);\n * }\n * // send the quoted transaction\n * const transactionResult = await signer.sendTransaction(\n *   quote.transactionRequest,\n * );\n * // keep polling the status of the quoted transaction until it * returns a success or failure status\n * const status = await getBuyWithCryptoStatus({\n *   clientId: \"YOUR_CLIENT_ID\",\n *   transactionHash: transactionResult.hash,\n * });\n * ```\n * @returns Object of type [`BuyWithCryptoStatus`](https://portal.thirdweb.com/references/typescript/v4/BuyWithCryptoStatus)\n */\nasync function getBuyWithCryptoStatus(buyWithCryptoTransaction) {\n  return getBuyWithCryptoStatus$1({\n    ...buyWithCryptoTransaction,\n    client: createThirdwebClient({\n      clientId: buyWithCryptoTransaction.clientId\n    })\n  });\n}\n\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, toDisplayValue as a, getBuyWithCryptoHistory as b, getBuyWithCryptoQuote as c, getBuyWithCryptoStatus as d, compatibleExtensions as e, computeNativeTokenAddress as f, getCachedAbiForContract as g, deployContractDeterministicRaw as h, EditionMetadataWithOwnerOutputSchema as i, EditionMetadataInputSchema as j, EditionMetadataInputOrUriSchema as k, matchesPrebuiltAbi as m, toUnits as t };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14751, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/ListingType-e0156743.esm.js"],"sourcesContent":["let ListingType = /*#__PURE__*/function (ListingType) {\n  ListingType[ListingType[\"Direct\"] = 0] = \"Direct\";\n  ListingType[ListingType[\"Auction\"] = 1] = \"Auction\";\n  return ListingType;\n}({});\n\nexport { ListingType as L };\n"],"names":[],"mappings":";;;AAAA,IAAI,cAAc,WAAW,GAAE,SAAU,WAAW;IAClD,WAAW,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,GAAG;IACzC,WAAW,CAAC,WAAW,CAAC,UAAU,GAAG,EAAE,GAAG;IAC1C,OAAO;AACT,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14876, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/evm/functions/dist/thirdweb-dev-sdk-evm-functions.esm.js"],"sourcesContent":["export { c as getBlock, d as getBlockNumber, e as getBlockWithTransactions, b as getChainId, g as getContract, a as getContractFromAbi, w as watchBlock, f as watchBlockNumber, h as watchBlockWithTransactions, i as watchTransactions } from '../../../dist/watchTransactions-82802e76.esm.js';\nexport { l as isProvider, m as isSigner } from '../../../dist/index-6d283666.esm.js';\nimport '@thirdweb-dev/storage';\nimport 'ethers';\nimport 'zod';\nimport '@thirdweb-dev/chains';\nimport '@thirdweb-dev/crypto';\nimport 'tiny-invariant';\nimport 'bn.js';\nimport 'bs58';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\n"],"names":[],"mappings":";AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15094, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/sdk/dist/watchTransactions-82802e76.esm.js"],"sourcesContent":["import { d8 as createLruCache, b8 as getSignerAndProvider, aQ as resolveAddress, ap as getCompositeABI, bo as AbiSchema, j as getContractTypeForRemoteName, h as PREBUILT_CONTRACTS_MAP } from './index-6d283666.esm.js';\nimport { ThirdwebStorage } from '@thirdweb-dev/storage';\nimport { Contract, utils } from 'ethers';\n\nlet STORAGE_CACHE = new ThirdwebStorage();\nconst CONTRACT_CACHE = /* @__PURE__ */createLruCache(10);\nfunction getContractCacheKey(address, chainId) {\n  return `${address}-${chainId}`;\n}\nfunction inContractCache(address, chainId) {\n  const cacheKey = getContractCacheKey(address, chainId);\n  return CONTRACT_CACHE.has(cacheKey);\n}\nfunction getCachedContract(address, chainId) {\n  if (!inContractCache(address, chainId)) {\n    throw new Error(`Contract ${address} was not found in cache`);\n  }\n  const cacheKey = getContractCacheKey(address, chainId);\n  return CONTRACT_CACHE.get(cacheKey);\n}\nfunction cacheContract(contract, address, chainId) {\n  const cacheKey = getContractCacheKey(address, chainId);\n  CONTRACT_CACHE.put(cacheKey, contract);\n}\nfunction getCachedStorage(storage) {\n  return storage || STORAGE_CACHE;\n}\n\nasync function getContractFromAbi(params) {\n  const [signer, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n  const [resolvedAddress, {\n    chainId\n  }, {\n    SmartContract\n  }] = await Promise.all([resolveAddress(params.address), provider.getNetwork(), import('./smart-contract-2e596ae6.esm.js')]);\n  if (inContractCache(resolvedAddress, chainId)) {\n    return getCachedContract(resolvedAddress, chainId);\n  }\n  const parsedAbi = typeof params.abi === \"string\" ? JSON.parse(params.abi) : params.abi;\n  const contract = new SmartContract(signer || provider, resolvedAddress, await getCompositeABI(resolvedAddress, AbiSchema.parse(parsedAbi), provider, params.sdkOptions, getCachedStorage(params.storage)), getCachedStorage(params.storage), params.sdkOptions, chainId);\n  cacheContract(contract, resolvedAddress, chainId);\n  return contract;\n}\n\nasync function resolveContractType(params) {\n  try {\n    const IThirdwebContractABI = (await import('@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json')).default;\n    const contract = new Contract(params.address, IThirdwebContractABI, params.provider);\n    const remoteContractType = utils.toUtf8String(await contract.contractType())\n    // eslint-disable-next-line no-control-regex\n    .replace(/\\x00/g, \"\");\n    return getContractTypeForRemoteName(remoteContractType);\n  } catch (err) {\n    return \"custom\";\n  }\n}\n\nasync function getContract(params) {\n  const [signer, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n  const [resolvedAddress, {\n    chainId\n  }, {\n    ContractPublisher\n  }] = await Promise.all([resolveAddress(params.address), provider.getNetwork(), import('./contract-publisher-69217d59.esm.js').then(function (n) { return n.c; })]);\n  if (inContractCache(resolvedAddress, chainId)) {\n    return getCachedContract(resolvedAddress, chainId);\n  }\n  if (!params.contractTypeOrAbi || params.contractTypeOrAbi === \"custom\") {\n    const contractType = await resolveContractType({\n      address: resolvedAddress,\n      provider\n    });\n    if (contractType === \"custom\") {\n      const publisher = new ContractPublisher(params.network, params.sdkOptions, getCachedStorage(params.storage));\n      try {\n        const metadata = await publisher.fetchCompilerMetadataFromAddress(resolvedAddress);\n        return getContractFromAbi({\n          ...params,\n          address: resolvedAddress,\n          abi: metadata.abi\n        });\n      } catch {\n        throw new Error(`No ABI found for this contract. Try importing it by visiting: https://thirdweb.com/${chainId}/${resolvedAddress}`);\n      }\n    } else {\n      const abi = await PREBUILT_CONTRACTS_MAP[contractType].getAbi(resolvedAddress, provider, getCachedStorage(params.storage));\n      return getContractFromAbi({\n        ...params,\n        address: resolvedAddress,\n        abi\n      });\n    }\n  } else if (typeof params.contractTypeOrAbi === \"string\" && params.contractTypeOrAbi in PREBUILT_CONTRACTS_MAP) {\n    const contract = await PREBUILT_CONTRACTS_MAP[params.contractTypeOrAbi].initialize(signer || provider, resolvedAddress, getCachedStorage(params.storage), params.sdkOptions);\n    cacheContract(contract, resolvedAddress, chainId);\n    return contract;\n  } else {\n    return getContractFromAbi({\n      ...params,\n      address: resolvedAddress,\n      abi: params.contractTypeOrAbi\n    });\n  }\n}\n\n// weakmap because if we GC the provider somewhere else we don't need to hold onto the promise anymore\nconst CHAIN_ID_CACHE = new WeakMap();\n\n/**\n * A function that returns the chainId for a given network input + sdk options combination.\n * This function will cache the promise for the chainId so that it can be reused.\n * You can call this function multiple times with the same params and it will only make one request to the provider.\n *\n * @returns The ChainId\n * @internal\n */\nasync function getChainId(params) {\n  const [, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n  let chainIdPromise;\n  // if we already have a promise for the chainId, use that\n  if (CHAIN_ID_CACHE.has(provider)) {\n    chainIdPromise = CHAIN_ID_CACHE.get(provider);\n  } else {\n    chainIdPromise = provider.getNetwork()\n    // we only want the chainId\n    .then(network => network.chainId).catch(err => {\n      // in the case where the provider fails we should remove the promise from the cache so we can try again\n      CHAIN_ID_CACHE.delete(provider);\n      // also re-throw the error so downstream can handle it\n      throw err;\n    });\n    CHAIN_ID_CACHE.set(provider, chainIdPromise);\n  }\n\n  // finally await the promise (will resolve immediately if already in cache and resolved)\n  return await chainIdPromise;\n}\n\n/**\n * Get the latest block number from a given network.\n *\n * @example\n * ```javascript\n * const block = await getBlockNumber({\n *  network: \"ethereum\"\n * });\n * ```\n * @returns The latest block number\n * @public\n */\nasync function getBlockNumber(params) {\n  const [, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n  return provider.getBlockNumber();\n}\nconst BLOCK_PROMISE_CACHE = new Map();\n/**\n * Get a specific block from a given network.\n *\n * @example\n * ```javascript\n * const block = await getBlock({\n *  network: \"ethereum\",\n *  block: 12345678\n * });\n * ```\n *\n * @returns The block for the given block number / block tag\n * @public\n */\nasync function getBlock(params) {\n  // first off get the chainId so we can check if we have something in cache for the blockNumber already\n  // this is 1 extra call once per possible provider\n  const chainId = await getChainId(params);\n  const blockTag = params.block;\n  const cacheKey = `${chainId}_${blockTag}`;\n  let blockPromise;\n  if (BLOCK_PROMISE_CACHE.has(cacheKey)) {\n    blockPromise = BLOCK_PROMISE_CACHE.get(cacheKey);\n  } else {\n    const [, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n    blockPromise = provider.getBlock(blockTag).catch(err => {\n      // in the case where the call fails we should remove the promise from the cache so we can try again\n      BLOCK_PROMISE_CACHE.delete(cacheKey);\n      // also re-throw the error so downstream can handle it\n      throw err;\n    });\n    BLOCK_PROMISE_CACHE.set(cacheKey, blockPromise);\n  }\n\n  // finally await the promise (will resolve immediately if already in cache and resolved)\n  return await blockPromise;\n}\nconst BLOCK_WITH_TRANSACTIONS_PROMISE_CACHE = new Map();\n/**\n * Get a specific block (with the transactions contained in it) from a given network.\n *\n * @example\n * ```javascript\n * const block = await getBlockWithTransactions({\n *  network: \"ethereum\",\n *  block: 12345678\n * });\n * ```\n *\n * @returns The block for the given block number / block tag\n * @public\n */\nasync function getBlockWithTransactions(params) {\n  // first off get the chainId so we can check if we have something in cache for the blockNumber already\n  // this is 1 extra call once per possible provider\n  const chainId = await getChainId(params);\n  const blockTag = params.block;\n  const cacheKey = `${chainId}_${blockTag}`;\n  let blockPromise;\n  if (BLOCK_PROMISE_CACHE.has(cacheKey)) {\n    blockPromise = BLOCK_WITH_TRANSACTIONS_PROMISE_CACHE.get(cacheKey);\n  } else {\n    const [, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n    blockPromise = provider.getBlockWithTransactions(blockTag).catch(err => {\n      // in the case where the call fails we should remove the promise from the cache so we can try again\n      BLOCK_WITH_TRANSACTIONS_PROMISE_CACHE.delete(cacheKey);\n      // also re-throw the error so downstream can handle it\n      throw err;\n    });\n    BLOCK_WITH_TRANSACTIONS_PROMISE_CACHE.set(cacheKey, blockPromise);\n  }\n\n  // finally await the promise (will resolve immediately if already in cache and resolved)\n  return await blockPromise;\n}\n\n/**\n * Watch for a new block number on a given network.\n *\n * @example\n * ```javascript\n * // this will log out the new block number every time a new block is finalized\n * const unsubscribe = watchBlockNumber({\n *   network: \"ethereum\",\n *   onBlockNumber: (blockNumber) => {\n *     console.log(\"new block number\", blockNumber);\n *   }\n * });\n * // later on you can call unsubscribe to stop listening for new blocks\n * unsubscribe();\n * ```\n *\n * @returns An unsubscribe function that will stop listening for new blocks when called\n * @public\n */\nfunction watchBlockNumber(params) {\n  const [, provider] = getSignerAndProvider(params.network, params.sdkOptions);\n  // start listening\n  provider.on(\"block\", params.onBlockNumber);\n  // return a function that unsubscribes the listener\n  return () => {\n    provider.off(\"block\", params.onBlockNumber);\n  };\n}\n/**\n * Watch for new blocks on a given network.\n *\n * @example\n * ```javascript\n * // this will log out the new block every time a new block is finalized\n * const unsubscribe = watchBlock({\n *   network: \"ethereum\",\n *   onBlock: (block) => {\n *     console.log(\"new block\", block);\n *   }\n * });\n * // later on you can call unsubscribe to stop listening for new blocks\n * unsubscribe();\n * ```\n *\n * @returns An unsubscribe function that will stop listening for new blocks when called\n * @public\n */\nfunction watchBlock(_ref) {\n  let {\n    onBlock,\n    ...sharedBlockParams\n  } = _ref;\n  async function onBlockNumber(blockNumber) {\n    try {\n      onBlock(await getBlock({\n        block: blockNumber,\n        ...sharedBlockParams\n      }));\n    } catch (err) {\n      // skip the block I guess?\n    }\n  }\n  // start listening and return the unsubscribe function from within watchBlockNumber\n  return watchBlockNumber({\n    ...sharedBlockParams,\n    onBlockNumber\n  });\n}\n/**\n * Watch for new blocks on a given network. (Includes parsed transactions)\n *\n * @example\n * ```javascript\n * // this will log out the new block every time a new block is finalized\n * const unsubscribe = watchBlockWithTransactions({\n *   network: \"ethereum\",\n *   onBlock: (block) => {\n *     console.log(\"new block\", block);\n *     console.log(\"new transactions\", block.transactions)\n *   }\n * });\n * // later on you can call unsubscribe to stop listening for new blocks\n * unsubscribe();\n * ```\n *\n * @returns An unsubscribe function that will stop listening for new blocks when called\n * @public\n */\nfunction watchBlockWithTransactions(_ref2) {\n  let {\n    onBlock,\n    ...sharedBlockParams\n  } = _ref2;\n  async function onBlockNumber(blockNumber) {\n    try {\n      onBlock(await getBlockWithTransactions({\n        block: blockNumber,\n        ...sharedBlockParams\n      }));\n    } catch (err) {\n      // skip the block I guess?\n    }\n  }\n  // start listening and return the unsubscribe function from within watchBlockNumber\n  return watchBlockNumber({\n    ...sharedBlockParams,\n    onBlockNumber\n  });\n}\n\n/**\n * Watch for transactions to or from a given address.\n *\n * @example\n * ```javascript\n * // this will log out the new transactions every time a new block is finalized\n * const unsubscribe = watchTransactions({\n *   network: \"ethereum\",\n *   address: \"0x1234\",\n *   onTransactions: (transactions) => {\n *     console.log(\"new transactions\", transactions);\n *   }\n * });\n * // later on you can call unsubscribe to stop listening for new transactions\n * unsubscribe();\n * ```\n *\n * @returns An unsubscribe function that will stop listening for new transactions when called\n * @public\n */\nfunction watchTransactions(_ref) {\n  let {\n    address,\n    onTransactions,\n    ...sharedBlockParams\n  } = _ref;\n  // compute the toLowerCase address once so we don't have to do it on every block / transaction\n  const lcAddress = address.toLowerCase();\n  function onBlock(block) {\n    const transactions = block.transactions.filter(tx => {\n      // match on from first because it's guaranteed to exist\n      if (tx.from.toLowerCase() === lcAddress) {\n        // if we have a from address match on that then return true and early exit\n        return true;\n      }\n      // if we have a to address match on that and if it doesn't match then we want to return false anyways :)\n      return tx.to?.toLowerCase() === lcAddress;\n    });\n    // only call the callback if we have transactions to report\n    if (transactions.length > 0) {\n      onTransactions(transactions);\n    }\n  }\n  return watchBlockWithTransactions({\n    ...sharedBlockParams,\n    onBlock\n  });\n}\n\nexport { getContractFromAbi as a, getChainId as b, getBlock as c, getBlockNumber as d, getBlockWithTransactions as e, watchBlockNumber as f, getContract as g, watchBlockWithTransactions as h, watchTransactions as i, watchBlock as w };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}