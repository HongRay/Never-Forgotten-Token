module.exports = {

"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.0.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Gnosis_safe__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        constant: false,
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "addOwnerWithThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "DOMAIN_SEPARATOR_TYPEHASH",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "owner",
                type: "address"
            }
        ],
        name: "isOwner",
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "value",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModule",
        outputs: [
            {
                name: "success",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        name: "signedMessages",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "module",
                type: "address"
            }
        ],
        name: "enableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "changeThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "",
                type: "address"
            },
            {
                name: "",
                type: "bytes32"
            }
        ],
        name: "approvedHashes",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_masterCopy",
                type: "address"
            }
        ],
        name: "changeMasterCopy",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "SENTINEL_MODULES",
        outputs: [
            {
                name: "",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "SENTINEL_OWNERS",
        outputs: [
            {
                name: "",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getOwners",
        outputs: [
            {
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "NAME",
        outputs: [
            {
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "nonce",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getModules",
        outputs: [
            {
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "SAFE_MSG_TYPEHASH",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "SAFE_TX_TYPEHASH",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "prevModule",
                type: "address"
            },
            {
                name: "module",
                type: "address"
            }
        ],
        name: "disableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "prevOwner",
                type: "address"
            },
            {
                name: "oldOwner",
                type: "address"
            },
            {
                name: "newOwner",
                type: "address"
            }
        ],
        name: "swapOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getThreshold",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "domainSeparator",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "prevOwner",
                type: "address"
            },
            {
                name: "owner",
                type: "address"
            },
            {
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "removeOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "VERSION",
        outputs: [
            {
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        payable: true,
        stateMutability: "payable",
        type: "fallback"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "txHash",
                type: "bytes32"
            }
        ],
        name: "ExecutionFailed",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "owner",
                type: "address"
            }
        ],
        name: "AddedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "owner",
                type: "address"
            }
        ],
        name: "RemovedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "threshold",
                type: "uint256"
            }
        ],
        name: "ChangedThreshold",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "module",
                type: "address"
            }
        ],
        name: "EnabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "module",
                type: "address"
            }
        ],
        name: "DisabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "newContract",
                type: "address"
            }
        ],
        name: "ContractCreation",
        type: "event"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_owners",
                type: "address[]"
            },
            {
                name: "_threshold",
                type: "uint256"
            },
            {
                name: "to",
                type: "address"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "paymentToken",
                type: "address"
            },
            {
                name: "payment",
                type: "uint256"
            },
            {
                name: "paymentReceiver",
                type: "address"
            }
        ],
        name: "setup",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "value",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "operation",
                type: "uint8"
            },
            {
                name: "safeTxGas",
                type: "uint256"
            },
            {
                name: "baseGas",
                type: "uint256"
            },
            {
                name: "gasPrice",
                type: "uint256"
            },
            {
                name: "gasToken",
                type: "address"
            },
            {
                name: "refundReceiver",
                type: "address"
            },
            {
                name: "signatures",
                type: "bytes"
            }
        ],
        name: "execTransaction",
        outputs: [
            {
                name: "success",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "value",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "operation",
                type: "uint8"
            }
        ],
        name: "requiredTxGas",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "hashToApprove",
                type: "bytes32"
            }
        ],
        name: "approveHash",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_data",
                type: "bytes"
            }
        ],
        name: "signMessage",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_data",
                type: "bytes"
            },
            {
                name: "_signature",
                type: "bytes"
            }
        ],
        name: "isValidSignature",
        outputs: [
            {
                name: "",
                type: "bytes4"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHash",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "value",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "operation",
                type: "uint8"
            },
            {
                name: "safeTxGas",
                type: "uint256"
            },
            {
                name: "baseGas",
                type: "uint256"
            },
            {
                name: "gasPrice",
                type: "uint256"
            },
            {
                name: "gasToken",
                type: "address"
            },
            {
                name: "refundReceiver",
                type: "address"
            },
            {
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "encodeTransactionData",
        outputs: [
            {
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "value",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            },
            {
                name: "operation",
                type: "uint8"
            },
            {
                name: "safeTxGas",
                type: "uint256"
            },
            {
                name: "baseGas",
                type: "uint256"
            },
            {
                name: "gasPrice",
                type: "uint256"
            },
            {
                name: "gasToken",
                type: "address"
            },
            {
                name: "refundReceiver",
                type: "address"
            },
            {
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "getTransactionHash",
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    }
];
class Gnosis_safe__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Gnosis_safe__factory = Gnosis_safe__factory;
Gnosis_safe__factory.abi = _abi; //# sourceMappingURL=Gnosis_safe__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.0.0/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Proxy_factory__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        constant: false,
        inputs: [
            {
                name: "_mastercopy",
                type: "address"
            },
            {
                name: "initializer",
                type: "bytes"
            },
            {
                name: "saltNonce",
                type: "uint256"
            }
        ],
        name: "createProxyWithNonce",
        outputs: [
            {
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "proxyCreationCode",
        outputs: [
            {
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "pure",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "masterCopy",
                type: "address"
            },
            {
                name: "data",
                type: "bytes"
            }
        ],
        name: "createProxy",
        outputs: [
            {
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "proxyRuntimeCode",
        outputs: [
            {
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "pure",
        type: "function"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                name: "proxy",
                type: "address"
            }
        ],
        name: "ProxyCreation",
        type: "event"
    }
];
class Proxy_factory__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Proxy_factory__factory = Proxy_factory__factory;
Proxy_factory__factory.abi = _abi; //# sourceMappingURL=Proxy_factory__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Gnosis_safe__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "AddedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "approvedHash",
                type: "bytes32"
            },
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "ApproveHash",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "masterCopy",
                type: "address"
            }
        ],
        name: "ChangedMasterCopy",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "threshold",
                type: "uint256"
            }
        ],
        name: "ChangedThreshold",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "DisabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "EnabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "RemovedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32"
            }
        ],
        name: "SignMsg",
        type: "event"
    },
    {
        payable: true,
        stateMutability: "payable",
        type: "fallback"
    },
    {
        constant: true,
        inputs: [],
        name: "NAME",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "addOwnerWithThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "approvedHashes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "_masterCopy",
                type: "address"
            }
        ],
        name: "changeMasterCopy",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "changeThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "contract Module",
                name: "prevModule",
                type: "address"
            },
            {
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "disableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "domainSeparator",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "enableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModule",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModuleReturnData",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            },
            {
                internalType: "bytes",
                name: "returnData",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getModules",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "start",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "pageSize",
                type: "uint256"
            }
        ],
        name: "getModulesPaginated",
        outputs: [
            {
                internalType: "address[]",
                name: "array",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "next",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getOwners",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getThreshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "isOwner",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "nonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "removeOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "handler",
                type: "address"
            }
        ],
        name: "setFallbackHandler",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "signedMessages",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "oldOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            }
        ],
        name: "swapOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address[]",
                name: "_owners",
                type: "address[]"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "address",
                name: "fallbackHandler",
                type: "address"
            },
            {
                internalType: "address",
                name: "paymentToken",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            },
            {
                internalType: "address payable",
                name: "paymentReceiver",
                type: "address"
            }
        ],
        name: "setup",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes"
            }
        ],
        name: "execTransaction",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "requiredTxGas",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes32",
                name: "hashToApprove",
                type: "bytes32"
            }
        ],
        name: "approveHash",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            }
        ],
        name: "signMessage",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            }
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "encodeTransactionData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "getTransactionHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    }
];
class Gnosis_safe__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Gnosis_safe__factory = Gnosis_safe__factory;
Gnosis_safe__factory.abi = _abi; //# sourceMappingURL=Gnosis_safe__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Multi_send__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Multi_send__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes",
                name: "transactions",
                type: "bytes"
            }
        ],
        name: "multiSend",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    }
];
class Multi_send__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Multi_send__factory = Multi_send__factory;
Multi_send__factory.abi = _abi; //# sourceMappingURL=Multi_send__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Proxy_factory__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        name: "ProxyCreation",
        type: "event"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "masterCopy",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            }
        ],
        name: "createProxy",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "proxyRuntimeCode",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "pure",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "proxyCreationCode",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "pure",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "_mastercopy",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            }
        ],
        name: "createProxyWithNonce",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "_mastercopy",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            },
            {
                internalType: "contract IProxyCreationCallback",
                name: "callback",
                type: "address"
            }
        ],
        name: "createProxyWithCallback",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "_mastercopy",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            }
        ],
        name: "calculateCreateProxyWithNonceAddress",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    }
];
class Proxy_factory__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Proxy_factory__factory = Proxy_factory__factory;
Proxy_factory__factory.abi = _abi; //# sourceMappingURL=Proxy_factory__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.2.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Gnosis_safe__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "AddedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "approvedHash",
                type: "bytes32"
            },
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "ApproveHash",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "masterCopy",
                type: "address"
            }
        ],
        name: "ChangedMasterCopy",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "threshold",
                type: "uint256"
            }
        ],
        name: "ChangedThreshold",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "DisabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "EnabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "RemovedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32"
            }
        ],
        name: "SignMsg",
        type: "event"
    },
    {
        payable: true,
        stateMutability: "payable",
        type: "fallback"
    },
    {
        constant: true,
        inputs: [],
        name: "NAME",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "addOwnerWithThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "approvedHashes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "_masterCopy",
                type: "address"
            }
        ],
        name: "changeMasterCopy",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "changeThreshold",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "contract Module",
                name: "prevModule",
                type: "address"
            },
            {
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "disableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "domainSeparator",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "enableModule",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModule",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModuleReturnData",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            },
            {
                internalType: "bytes",
                name: "returnData",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getModules",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "start",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "pageSize",
                type: "uint256"
            }
        ],
        name: "getModulesPaginated",
        outputs: [
            {
                internalType: "address[]",
                name: "array",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "next",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getOwners",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "getThreshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "contract Module",
                name: "module",
                type: "address"
            }
        ],
        name: "isModuleEnabled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "isOwner",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "nonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "removeOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "handler",
                type: "address"
            }
        ],
        name: "setFallbackHandler",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "signedMessages",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "oldOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            }
        ],
        name: "swapOwner",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address[]",
                name: "_owners",
                type: "address[]"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "address",
                name: "fallbackHandler",
                type: "address"
            },
            {
                internalType: "address",
                name: "paymentToken",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            },
            {
                internalType: "address payable",
                name: "paymentReceiver",
                type: "address"
            }
        ],
        name: "setup",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes"
            }
        ],
        name: "execTransaction",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        payable: true,
        stateMutability: "payable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "requiredTxGas",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes32",
                name: "hashToApprove",
                type: "bytes32"
            }
        ],
        name: "approveHash",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            }
        ],
        name: "signMessage",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            }
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "encodeTransactionData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "getTransactionHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    }
];
class Gnosis_safe__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Gnosis_safe__factory = Gnosis_safe__factory;
Gnosis_safe__factory.abi = _abi; //# sourceMappingURL=Gnosis_safe__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Compatibility_fallback_handler__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Compatibility_fallback_handler__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        name: "NAME",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract GnosisSafe",
                name: "safe",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHashForSafe",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "getModules",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_dataHash",
                type: "bytes32"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            }
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            }
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        name: "onERC1155BatchReceived",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        name: "onERC1155Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        name: "onERC721Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            }
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "targetContract",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "calldataPayload",
                type: "bytes"
            }
        ],
        name: "simulate",
        outputs: [
            {
                internalType: "bytes",
                name: "response",
                type: "bytes"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4"
            }
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        name: "tokensReceived",
        outputs: [],
        stateMutability: "pure",
        type: "function"
    }
];
class Compatibility_fallback_handler__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Compatibility_fallback_handler__factory = Compatibility_fallback_handler__factory;
Compatibility_fallback_handler__factory.abi = _abi; //# sourceMappingURL=Compatibility_fallback_handler__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Gnosis_safe__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "AddedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "approvedHash",
                type: "bytes32"
            },
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "ApproveHash",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "handler",
                type: "address"
            }
        ],
        name: "ChangedFallbackHandler",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "guard",
                type: "address"
            }
        ],
        name: "ChangedGuard",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "threshold",
                type: "uint256"
            }
        ],
        name: "ChangedThreshold",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "DisabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "EnabledModule",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleFailure",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "ExecutionFromModuleSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "txHash",
                type: "bytes32"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            }
        ],
        name: "ExecutionSuccess",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "RemovedOwner",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256"
            }
        ],
        name: "SafeReceived",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "initiator",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address[]",
                name: "owners",
                type: "address[]"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "threshold",
                type: "uint256"
            },
            {
                indexed: false,
                internalType: "address",
                name: "initializer",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address",
                name: "fallbackHandler",
                type: "address"
            }
        ],
        name: "SafeSetup",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32"
            }
        ],
        name: "SignMsg",
        type: "event"
    },
    {
        stateMutability: "nonpayable",
        type: "fallback"
    },
    {
        inputs: [],
        name: "VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "addOwnerWithThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hashToApprove",
                type: "bytes32"
            }
        ],
        name: "approveHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "approvedHashes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "changeThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataHash",
                type: "bytes32"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "requiredSignatures",
                type: "uint256"
            }
        ],
        name: "checkNSignatures",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataHash",
                type: "bytes32"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes"
            }
        ],
        name: "checkSignatures",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "prevModule",
                type: "address"
            },
            {
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "disableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "domainSeparator",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "enableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "encodeTransactionData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes"
            }
        ],
        name: "execTransaction",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModule",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "execTransactionFromModuleReturnData",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool"
            },
            {
                internalType: "bytes",
                name: "returnData",
                type: "bytes"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "getChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "start",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "pageSize",
                type: "uint256"
            }
        ],
        name: "getModulesPaginated",
        outputs: [
            {
                internalType: "address[]",
                name: "array",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "next",
                type: "address"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "getOwners",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "offset",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "length",
                type: "uint256"
            }
        ],
        name: "getStorageAt",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "getThreshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            },
            {
                internalType: "uint256",
                name: "safeTxGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "gasToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "refundReceiver",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "getTransactionHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "module",
                type: "address"
            }
        ],
        name: "isModuleEnabled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address"
            }
        ],
        name: "isOwner",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "nonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "owner",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            }
        ],
        name: "removeOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
            }
        ],
        name: "requiredTxGas",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "handler",
                type: "address"
            }
        ],
        name: "setFallbackHandler",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "guard",
                type: "address"
            }
        ],
        name: "setGuard",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_owners",
                type: "address[]"
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "address",
                name: "fallbackHandler",
                type: "address"
            },
            {
                internalType: "address",
                name: "paymentToken",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "payment",
                type: "uint256"
            },
            {
                internalType: "address payable",
                name: "paymentReceiver",
                type: "address"
            }
        ],
        name: "setup",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        name: "signedMessages",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "targetContract",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "calldataPayload",
                type: "bytes"
            }
        ],
        name: "simulateAndRevert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "prevOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "oldOwner",
                type: "address"
            },
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            }
        ],
        name: "swapOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        stateMutability: "payable",
        type: "receive"
    }
];
class Gnosis_safe__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Gnosis_safe__factory = Gnosis_safe__factory;
Gnosis_safe__factory.abi = _abi; //# sourceMappingURL=Gnosis_safe__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Multi_send_call_only__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Multi_send_call_only__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "transactions",
                type: "bytes"
            }
        ],
        name: "multiSend",
        outputs: [],
        stateMutability: "payable",
        type: "function"
    }
];
class Multi_send_call_only__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Multi_send_call_only__factory = Multi_send_call_only__factory;
Multi_send_call_only__factory.abi = _abi; //# sourceMappingURL=Multi_send_call_only__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Multi_send__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "transactions",
                type: "bytes"
            }
        ],
        name: "multiSend",
        outputs: [],
        stateMutability: "payable",
        type: "function"
    }
];
class Multi_send__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Multi_send__factory = Multi_send__factory;
Multi_send__factory.abi = _abi; //# sourceMappingURL=Multi_send__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Proxy_factory__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address",
                name: "singleton",
                type: "address"
            }
        ],
        name: "ProxyCreation",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_singleton",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            }
        ],
        name: "calculateCreateProxyWithNonceAddress",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "singleton",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            }
        ],
        name: "createProxy",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_singleton",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            },
            {
                internalType: "contract IProxyCreationCallback",
                name: "callback",
                type: "address"
            }
        ],
        name: "createProxyWithCallback",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_singleton",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "initializer",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256"
            }
        ],
        name: "createProxyWithNonce",
        outputs: [
            {
                internalType: "contract GnosisSafeProxy",
                name: "proxy",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "proxyCreationCode",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [],
        name: "proxyRuntimeCode",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }
        ],
        stateMutability: "pure",
        type: "function"
    }
];
class Proxy_factory__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Proxy_factory__factory = Proxy_factory__factory;
Proxy_factory__factory.abi = _abi; //# sourceMappingURL=Proxy_factory__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Sign_message_lib__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32"
            }
        ],
        name: "SignMsg",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "message",
                type: "bytes"
            }
        ],
        name: "getMessageHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            }
        ],
        name: "signMessage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    }
];
class Sign_message_lib__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Sign_message_lib__factory = Sign_message_lib__factory;
Sign_message_lib__factory.abi = _abi; //# sourceMappingURL=Sign_message_lib__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Create_call__factory.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Create_call__factory = void 0;
const ethers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/ethers/lib.esm/index.js [app-ssr] (ecmascript)");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "newContract",
                type: "address"
            }
        ],
        name: "ContractCreation",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "deploymentData",
                type: "bytes"
            }
        ],
        name: "performCreate",
        outputs: [
            {
                internalType: "address",
                name: "newContract",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "deploymentData",
                type: "bytes"
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32"
            }
        ],
        name: "performCreate2",
        outputs: [
            {
                internalType: "address",
                name: "newContract",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    }
];
class Create_call__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Create_call__factory = Create_call__factory;
Create_call__factory.abi = _abi; //# sourceMappingURL=Create_call__factory.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
class CompatibilityFallbackHandlerEthersContract {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    getAddress() {
        return this.contract.address;
    }
}
exports.default = CompatibilityFallbackHandlerEthersContract; //# sourceMappingURL=CompatibilityFallbackHandlerEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandler_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const CompatibilityFallbackHandlerEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerEthersContract.js [app-ssr] (ecmascript)"));
class CompatibilityFallbackHandler_V1_3_0_Ethers extends CompatibilityFallbackHandlerEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = CompatibilityFallbackHandler_V1_3_0_Ethers; //# sourceMappingURL=CompatibilityFallbackHandler_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isTypedDataSigner = exports.toTxResult = exports.sameString = void 0;
function sameString(str1, str2) {
    return str1.toLowerCase() === str2.toLowerCase();
}
exports.sameString = sameString;
function toTxResult(transactionResponse, options) {
    return {
        hash: transactionResponse.hash,
        options,
        transactionResponse
    };
}
exports.toTxResult = toTxResult;
function isTypedDataSigner(signer) {
    return signer._signTypedData !== undefined;
}
exports.isTypedDataSigner = isTypedDataSigner; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CreateCall/CreateCallEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
class CreateCallEthersContract {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    getAddress() {
        return this.contract.address;
    }
    async performCreate2(value, deploymentData, salt, options) {
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('performCreate2', [
                value,
                deploymentData,
                salt
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.performCreate2(value, deploymentData, salt, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async performCreate(value, deploymentData, options) {
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('performCreate', [
                value,
                deploymentData
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.performCreate(value, deploymentData, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async estimateGas(methodName, params, options) {
        return (await this.contract.estimateGas[methodName](...params, options)).toNumber();
    }
}
exports.default = CreateCallEthersContract; //# sourceMappingURL=CreateCallEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CreateCall/v1.3.0/CreateCallEthersContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const CreateCallEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CreateCall/CreateCallEthersContract.js [app-ssr] (ecmascript)"));
class CreateCallContract_V1_3_0_Ethers extends CreateCallEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = CreateCallContract_V1_3_0_Ethers; //# sourceMappingURL=CreateCallEthersContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/constants.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SENTINEL_ADDRESS = exports.EMPTY_DATA = exports.ZERO_ADDRESS = void 0;
exports.ZERO_ADDRESS = `0x${'0'.repeat(40)}`;
exports.EMPTY_DATA = '0x';
exports.SENTINEL_ADDRESS = '0x0000000000000000000000000000000000000001'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
class GnosisSafeContractEthers {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    async getVersion() {
        return await this.contract.VERSION();
    }
    getAddress() {
        return this.contract.address;
    }
    async getNonce() {
        return (await this.contract.nonce()).toNumber();
    }
    async getThreshold() {
        return (await this.contract.getThreshold()).toNumber();
    }
    async getOwners() {
        return this.contract.getOwners();
    }
    async isOwner(address) {
        return this.contract.isOwner(address);
    }
    async getTransactionHash(safeTransactionData) {
        return this.contract.getTransactionHash(safeTransactionData.to, safeTransactionData.value, safeTransactionData.data, safeTransactionData.operation, safeTransactionData.safeTxGas, safeTransactionData.baseGas, safeTransactionData.gasPrice, safeTransactionData.gasToken, safeTransactionData.refundReceiver, safeTransactionData.nonce);
    }
    async approvedHashes(ownerAddress, hash) {
        return this.contract.approvedHashes(ownerAddress, hash);
    }
    async approveHash(hash, options) {
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('approveHash', [
                hash
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.approveHash(hash, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async isValidTransaction(safeTransaction, options) {
        let isTxValid = false;
        try {
            if (options && !options.gasLimit) {
                options.gasLimit = await this.estimateGas('execTransaction', [
                    safeTransaction.data.to,
                    safeTransaction.data.value,
                    safeTransaction.data.data,
                    safeTransaction.data.operation,
                    safeTransaction.data.safeTxGas,
                    safeTransaction.data.baseGas,
                    safeTransaction.data.gasPrice,
                    safeTransaction.data.gasToken,
                    safeTransaction.data.refundReceiver,
                    safeTransaction.encodedSignatures()
                ], {
                    ...options
                });
            }
            isTxValid = await this.contract.callStatic.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), options);
        } catch  {}
        return isTxValid;
    }
    async execTransaction(safeTransaction, options) {
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('execTransaction', [
                safeTransaction.data.to,
                safeTransaction.data.value,
                safeTransaction.data.data,
                safeTransaction.data.operation,
                safeTransaction.data.safeTxGas,
                safeTransaction.data.baseGas,
                safeTransaction.data.gasPrice,
                safeTransaction.data.gasToken,
                safeTransaction.data.refundReceiver,
                safeTransaction.encodedSignatures()
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async estimateGas(methodName, params, options) {
        return (await this.contract.estimateGas[methodName](...params, options)).toNumber();
    }
}
exports.default = GnosisSafeContractEthers; //# sourceMappingURL=GnosisSafeContractEthers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.0.0/GnosisSafeContract_V1_0_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const constants_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/constants.js [app-ssr] (ecmascript)");
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
const GnosisSafeContractEthers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers.js [app-ssr] (ecmascript)"));
class GnosisSafeContract_V1_0_0_Ethers extends GnosisSafeContractEthers_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
    async setup(setupConfig, options) {
        const { owners, threshold, to = constants_1.ZERO_ADDRESS, data = constants_1.EMPTY_DATA, paymentToken = constants_1.ZERO_ADDRESS, payment = 0, paymentReceiver = constants_1.ZERO_ADDRESS } = setupConfig;
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('setup', [
                owners,
                threshold,
                to,
                data,
                paymentToken,
                payment,
                paymentReceiver
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.setup(owners, threshold, to, data, paymentToken, payment, paymentReceiver, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async getModules() {
        return this.contract.getModules();
    }
    async isModuleEnabled(moduleAddress) {
        const modules = await this.getModules();
        const isModuleEnabled = modules.some((enabledModuleAddress)=>(0, utils_1.sameString)(enabledModuleAddress, moduleAddress));
        return isModuleEnabled;
    }
}
exports.default = GnosisSafeContract_V1_0_0_Ethers; //# sourceMappingURL=GnosisSafeContract_V1_0_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.1.1/GnosisSafeContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const constants_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/constants.js [app-ssr] (ecmascript)");
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
const GnosisSafeContractEthers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers.js [app-ssr] (ecmascript)"));
class GnosisSafeContract_V1_1_1_Ethers extends GnosisSafeContractEthers_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
    async setup(setupConfig, options) {
        const { owners, threshold, to = constants_1.ZERO_ADDRESS, data = constants_1.EMPTY_DATA, fallbackHandler = constants_1.ZERO_ADDRESS, paymentToken = constants_1.ZERO_ADDRESS, payment = 0, paymentReceiver = constants_1.ZERO_ADDRESS } = setupConfig;
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('setup', [
                owners,
                threshold,
                to,
                data,
                fallbackHandler,
                paymentToken,
                payment,
                paymentReceiver
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.setup(owners, threshold, to, data, fallbackHandler, paymentToken, payment, paymentReceiver, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async getModules() {
        return this.contract.getModules();
    }
    async isModuleEnabled(moduleAddress) {
        const modules = await this.getModules();
        const isModuleEnabled = modules.some((enabledModuleAddress)=>(0, utils_1.sameString)(enabledModuleAddress, moduleAddress));
        return isModuleEnabled;
    }
}
exports.default = GnosisSafeContract_V1_1_1_Ethers; //# sourceMappingURL=GnosisSafeContract_V1_1_1_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.2.0/GnosisSafeContract_V1_2_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
const constants_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/constants.js [app-ssr] (ecmascript)");
const GnosisSafeContractEthers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers.js [app-ssr] (ecmascript)"));
class GnosisSafeContract_V1_2_0_Ethers extends GnosisSafeContractEthers_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
    async setup(setupConfig, options) {
        const { owners, threshold, to = constants_1.ZERO_ADDRESS, data = constants_1.EMPTY_DATA, fallbackHandler = constants_1.ZERO_ADDRESS, paymentToken = constants_1.ZERO_ADDRESS, payment = 0, paymentReceiver = constants_1.ZERO_ADDRESS } = setupConfig;
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('setup', [
                owners,
                threshold,
                to,
                data,
                fallbackHandler,
                paymentToken,
                payment,
                paymentReceiver
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.setup(owners, threshold, to, data, fallbackHandler, paymentToken, payment, paymentReceiver, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async getModules() {
        return this.contract.getModules();
    }
    async isModuleEnabled(moduleAddress) {
        return this.contract.isModuleEnabled(moduleAddress);
    }
}
exports.default = GnosisSafeContract_V1_2_0_Ethers; //# sourceMappingURL=GnosisSafeContract_V1_2_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.3.0/GnosisSafeContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
const constants_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/constants.js [app-ssr] (ecmascript)");
const GnosisSafeContractEthers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers.js [app-ssr] (ecmascript)"));
class GnosisSafeContract_V1_3_0_Ethers extends GnosisSafeContractEthers_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
    async setup(setupConfig, options) {
        const { owners, threshold, to = constants_1.ZERO_ADDRESS, data = constants_1.EMPTY_DATA, fallbackHandler = constants_1.ZERO_ADDRESS, paymentToken = constants_1.ZERO_ADDRESS, payment = 0, paymentReceiver = constants_1.ZERO_ADDRESS } = setupConfig;
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('setup', [
                owners,
                threshold,
                to,
                data,
                fallbackHandler,
                paymentToken,
                payment,
                paymentReceiver
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.setup(owners, threshold, to, data, fallbackHandler, paymentToken, payment, paymentReceiver, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async getModules() {
        const { array } = await this.contract.getModulesPaginated(constants_1.SENTINEL_ADDRESS, 10);
        return array;
    }
    async isModuleEnabled(moduleAddress) {
        return this.contract.isModuleEnabled(moduleAddress);
    }
}
exports.default = GnosisSafeContract_V1_3_0_Ethers; //# sourceMappingURL=GnosisSafeContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const bignumber_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/@ethersproject/bignumber/lib.esm/index.js [app-ssr] (ecmascript)");
class GnosisSafeProxyFactoryEthersContract {
    constructor(contract){
        this.contract = contract;
    }
    getAddress() {
        return this.contract.address;
    }
    async proxyCreationCode() {
        return this.contract.proxyCreationCode();
    }
    async createProxy({ safeMasterCopyAddress, initializer, saltNonce, options, callback }) {
        if (bignumber_1.BigNumber.from(saltNonce).lt(0)) throw new Error('saltNonce must be greater than or equal to 0');
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('createProxyWithNonce', [
                safeMasterCopyAddress,
                initializer,
                saltNonce
            ], {
                ...options
            });
        }
        const proxyAddress = this.contract.createProxyWithNonce(safeMasterCopyAddress, initializer, saltNonce, options).then(async (txResponse)=>{
            var _a;
            if (callback) {
                callback(txResponse.hash);
            }
            const txReceipt = await txResponse.wait();
            const proxyCreationEvent = (_a = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.events) === null || _a === void 0 ? void 0 : _a.find(({ event })=>event === 'ProxyCreation');
            if (!proxyCreationEvent || !proxyCreationEvent.args) {
                throw new Error('SafeProxy was not deployed correctly');
            }
            const proxyAddress = proxyCreationEvent.args[0];
            return proxyAddress;
        });
        return proxyAddress;
    }
    encode(methodName, params) {
        return this.contract.interface.encodeFunctionData(methodName, params);
    }
    async estimateGas(methodName, params, options) {
        return (await this.contract.estimateGas[methodName](...params, options)).toNumber();
    }
}
exports.default = GnosisSafeProxyFactoryEthersContract; //# sourceMappingURL=GnosisSafeProxyFactoryEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.0.0/GnosisSafeProxyFactoryContract_V1_0_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const GnosisSafeProxyFactoryEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.js [app-ssr] (ecmascript)"));
class GnosisSafeProxyFactoryContract_V1_0_0_Ethers extends GnosisSafeProxyFactoryEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = GnosisSafeProxyFactoryContract_V1_0_0_Ethers; //# sourceMappingURL=GnosisSafeProxyFactoryContract_V1_0_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.1.1/GnosisSafeProxyFactoryContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const GnosisSafeProxyFactoryEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.js [app-ssr] (ecmascript)"));
class GnosisSafeProxyFactoryContract_V1_1_1_Ethers extends GnosisSafeProxyFactoryEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = GnosisSafeProxyFactoryContract_V1_1_1_Ethers; //# sourceMappingURL=GnosisSafeProxyFactoryContract_V1_1_1_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.3.0/GnosisSafeProxyFactoryContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const GnosisSafeProxyFactoryEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.js [app-ssr] (ecmascript)"));
class GnosisSafeProxyFactoryContract_V1_3_0_Ethers extends GnosisSafeProxyFactoryEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = GnosisSafeProxyFactoryContract_V1_3_0_Ethers; //# sourceMappingURL=GnosisSafeProxyFactoryContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/MultiSendEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
class MultiSendEthersContract {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    getAddress() {
        return this.contract.address;
    }
}
exports.default = MultiSendEthersContract; //# sourceMappingURL=MultiSendEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const MultiSendEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/MultiSendEthersContract.js [app-ssr] (ecmascript)"));
class MultiSendContract_V1_1_1_Ethers extends MultiSendEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = MultiSendContract_V1_1_1_Ethers; //# sourceMappingURL=MultiSendContract_V1_1_1_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const MultiSendEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/MultiSendEthersContract.js [app-ssr] (ecmascript)"));
class MultiSendContract_V1_3_0_Ethers extends MultiSendEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = MultiSendContract_V1_3_0_Ethers; //# sourceMappingURL=MultiSendContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSendCallOnly/MultiSendCallOnlyEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
class MultiSendCallOnlyEthersContract {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    getAddress() {
        return this.contract.address;
    }
}
exports.default = MultiSendCallOnlyEthersContract; //# sourceMappingURL=MultiSendCallOnlyEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSendCallOnly/v1.3.0/MultiSendCallOnlyContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const MultiSendCallOnlyEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSendCallOnly/MultiSendCallOnlyEthersContract.js [app-ssr] (ecmascript)"));
class MultiSendCallOnlyContract_V1_3_0_Ethers extends MultiSendCallOnlyEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = MultiSendCallOnlyContract_V1_3_0_Ethers; //# sourceMappingURL=MultiSendCallOnlyContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/SignMessageLib/SignMessageLibEthersContract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
class SignMessageLibEthersContract {
    constructor(contract){
        this.contract = contract;
        this.encode = (methodName, params)=>{
            return this.contract.interface.encodeFunctionData(methodName, params);
        };
    }
    getAddress() {
        return this.contract.address;
    }
    async signMessage(data, options) {
        if (options && !options.gasLimit) {
            options.gasLimit = await this.estimateGas('signMessage', [
                data
            ], {
                ...options
            });
        }
        const txResponse = await this.contract.signMessage(data, options);
        return (0, utils_1.toTxResult)(txResponse, options);
    }
    async getMessageHash(message) {
        return this.contract.getMessageHash(message);
    }
    async estimateGas(methodName, params, options) {
        return (await this.contract.estimateGas[methodName](...params, options)).toNumber();
    }
}
exports.default = SignMessageLibEthersContract; //# sourceMappingURL=SignMessageLibEthersContract.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const SignMessageLibEthersContract_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/SignMessageLib/SignMessageLibEthersContract.js [app-ssr] (ecmascript)"));
class SignMessageLibContract_V1_3_0_Ethers extends SignMessageLibEthersContract_1.default {
    constructor(contract){
        super(contract);
        this.contract = contract;
    }
}
exports.default = SignMessageLibContract_V1_3_0_Ethers; //# sourceMappingURL=SignMessageLibContract_V1_3_0_Ethers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/contractInstancesEthers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCreateCallContractInstance = exports.getSignMessageLibContractInstance = exports.getSafeProxyFactoryContractInstance = exports.getMultiSendCallOnlyContractInstance = exports.getMultiSendContractInstance = exports.getCompatibilityFallbackHandlerContractInstance = exports.getSafeContractInstance = void 0;
const Gnosis_safe__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.0.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)");
const Proxy_factory__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.0.0/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)");
const Gnosis_safe__factory_2 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)");
const Multi_send__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Multi_send__factory.js [app-ssr] (ecmascript)");
const Proxy_factory__factory_2 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.1.1/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)");
const Gnosis_safe__factory_3 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.2.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)");
const Compatibility_fallback_handler__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Compatibility_fallback_handler__factory.js [app-ssr] (ecmascript)");
const Gnosis_safe__factory_4 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Gnosis_safe__factory.js [app-ssr] (ecmascript)");
const Multi_send_call_only__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Multi_send_call_only__factory.js [app-ssr] (ecmascript)");
const Multi_send__factory_2 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory.js [app-ssr] (ecmascript)");
const Proxy_factory__factory_3 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Proxy_factory__factory.js [app-ssr] (ecmascript)");
const Sign_message_lib__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory.js [app-ssr] (ecmascript)");
const Create_call__factory_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/typechain/src/ethers-v5/v1.3.0/factories/Create_call__factory.js [app-ssr] (ecmascript)");
const CompatibilityFallbackHandler_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandler_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const CreateCallEthersContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/CreateCall/v1.3.0/CreateCallEthersContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeContract_V1_0_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.0.0/GnosisSafeContract_V1_0_0_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeContract_V1_1_1_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.1.1/GnosisSafeContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeContract_V1_2_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.2.0/GnosisSafeContract_V1_2_0_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/v1.3.0/GnosisSafeContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeProxyFactoryContract_V1_0_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.0.0/GnosisSafeProxyFactoryContract_V1_0_0_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeProxyFactoryContract_V1_1_1_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.1.1/GnosisSafeProxyFactoryContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)"));
const GnosisSafeProxyFactoryContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafeProxyFactory/v1.3.0/GnosisSafeProxyFactoryContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const MultiSendContract_V1_1_1_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_V1_1_1_Ethers.js [app-ssr] (ecmascript)"));
const MultiSendContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const MultiSendCallOnlyContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/MultiSendCallOnly/v1.3.0/MultiSendCallOnlyContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
const SignMessageLibContract_V1_3_0_Ethers_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_V1_3_0_Ethers.js [app-ssr] (ecmascript)"));
function getSafeContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let safeContract;
    switch(safeVersion){
        case '1.3.0':
            safeContract = Gnosis_safe__factory_4.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeContract_V1_3_0_Ethers_1.default(safeContract);
        case '1.2.0':
            safeContract = Gnosis_safe__factory_3.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeContract_V1_2_0_Ethers_1.default(safeContract);
        case '1.1.1':
            safeContract = Gnosis_safe__factory_2.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeContract_V1_1_1_Ethers_1.default(safeContract);
        case '1.0.0':
            safeContract = Gnosis_safe__factory_1.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeContract_V1_0_0_Ethers_1.default(safeContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getSafeContractInstance = getSafeContractInstance;
function getCompatibilityFallbackHandlerContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let compatibilityFallbackHandlerContract;
    switch(safeVersion){
        case '1.3.0':
        case '1.2.0':
        case '1.1.1':
            compatibilityFallbackHandlerContract = Compatibility_fallback_handler__factory_1.Compatibility_fallback_handler__factory.connect(contractAddress, signerOrProvider);
            return new CompatibilityFallbackHandler_V1_3_0_Ethers_1.default(compatibilityFallbackHandlerContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getCompatibilityFallbackHandlerContractInstance = getCompatibilityFallbackHandlerContractInstance;
function getMultiSendContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let multiSendContract;
    switch(safeVersion){
        case '1.3.0':
            multiSendContract = Multi_send__factory_2.Multi_send__factory.connect(contractAddress, signerOrProvider);
            return new MultiSendContract_V1_3_0_Ethers_1.default(multiSendContract);
        case '1.2.0':
        case '1.1.1':
        case '1.0.0':
            multiSendContract = Multi_send__factory_1.Multi_send__factory.connect(contractAddress, signerOrProvider);
            return new MultiSendContract_V1_1_1_Ethers_1.default(multiSendContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getMultiSendContractInstance = getMultiSendContractInstance;
function getMultiSendCallOnlyContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let multiSendCallOnlyContract;
    switch(safeVersion){
        case '1.3.0':
        case '1.2.0':
        case '1.1.1':
        case '1.0.0':
            multiSendCallOnlyContract = Multi_send_call_only__factory_1.Multi_send_call_only__factory.connect(contractAddress, signerOrProvider);
            return new MultiSendCallOnlyContract_V1_3_0_Ethers_1.default(multiSendCallOnlyContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getMultiSendCallOnlyContractInstance = getMultiSendCallOnlyContractInstance;
function getSafeProxyFactoryContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let gnosisSafeProxyFactoryContract;
    switch(safeVersion){
        case '1.3.0':
            gnosisSafeProxyFactoryContract = Proxy_factory__factory_3.Proxy_factory__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeProxyFactoryContract_V1_3_0_Ethers_1.default(gnosisSafeProxyFactoryContract);
        case '1.2.0':
        case '1.1.1':
            gnosisSafeProxyFactoryContract = Proxy_factory__factory_2.Proxy_factory__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeProxyFactoryContract_V1_1_1_Ethers_1.default(gnosisSafeProxyFactoryContract);
        case '1.0.0':
            gnosisSafeProxyFactoryContract = Proxy_factory__factory_1.Proxy_factory__factory.connect(contractAddress, signerOrProvider);
            return new GnosisSafeProxyFactoryContract_V1_0_0_Ethers_1.default(gnosisSafeProxyFactoryContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getSafeProxyFactoryContractInstance = getSafeProxyFactoryContractInstance;
function getSignMessageLibContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let signMessageLibContract;
    switch(safeVersion){
        case '1.3.0':
            signMessageLibContract = Sign_message_lib__factory_1.Sign_message_lib__factory.connect(contractAddress, signerOrProvider);
            return new SignMessageLibContract_V1_3_0_Ethers_1.default(signMessageLibContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getSignMessageLibContractInstance = getSignMessageLibContractInstance;
function getCreateCallContractInstance(safeVersion, contractAddress, signerOrProvider) {
    let createCallContract;
    switch(safeVersion){
        case '1.3.0':
        case '1.2.0':
        case '1.1.1':
        case '1.0.0':
            createCallContract = Create_call__factory_1.Create_call__factory.connect(contractAddress, signerOrProvider);
            return new CreateCallEthersContract_V1_3_0_Ethers_1.default(createCallContract);
        default:
            throw new Error('Invalid Safe version');
    }
}
exports.getCreateCallContractInstance = getCreateCallContractInstance; //# sourceMappingURL=contractInstancesEthers.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/EthersAdapter.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _EthersAdapter_ethers, _EthersAdapter_signer, _EthersAdapter_provider;
Object.defineProperty(exports, "__esModule", {
    value: true
});
const abstract_signer_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/@ethersproject/abstract-signer/lib.esm/index.js [app-ssr] (ecmascript)");
const bignumber_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/node_modules/@ethersproject/bignumber/lib.esm/index.js [app-ssr] (ecmascript)");
const safe_core_sdk_utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-core-sdk-utils/dist/src/index.js [app-ssr] (ecmascript)");
const contractInstancesEthers_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/contracts/contractInstancesEthers.js [app-ssr] (ecmascript)");
const utils_1 = __turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/utils/index.js [app-ssr] (ecmascript)");
class EthersAdapter {
    constructor({ ethers, signerOrProvider }){
        _EthersAdapter_ethers.set(this, void 0);
        _EthersAdapter_signer.set(this, void 0);
        _EthersAdapter_provider.set(this, void 0);
        if (!ethers) {
            throw new Error('ethers property missing from options');
        }
        __classPrivateFieldSet(this, _EthersAdapter_ethers, ethers, "f");
        const isSigner = signerOrProvider instanceof abstract_signer_1.Signer;
        if (isSigner) {
            const signer = signerOrProvider;
            if (!signer.provider) {
                throw new Error('Signer must be connected to a provider');
            }
            __classPrivateFieldSet(this, _EthersAdapter_provider, signer.provider, "f");
            __classPrivateFieldSet(this, _EthersAdapter_signer, signer, "f");
        } else {
            __classPrivateFieldSet(this, _EthersAdapter_provider, signerOrProvider, "f");
        }
    }
    getProvider() {
        return __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
    }
    getSigner() {
        return __classPrivateFieldGet(this, _EthersAdapter_signer, "f");
    }
    isAddress(address) {
        return __classPrivateFieldGet(this, _EthersAdapter_ethers, "f").utils.isAddress(address);
    }
    async getEip3770Address(fullAddress) {
        const chainId = await this.getChainId();
        return (0, safe_core_sdk_utils_1.validateEip3770Address)(fullAddress, chainId);
    }
    async getBalance(address, blockTag) {
        return bignumber_1.BigNumber.from(await __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getBalance(address, blockTag));
    }
    async getNonce(address, blockTag) {
        return __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getTransactionCount(address, blockTag);
    }
    async getChainId() {
        return (await __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getNetwork()).chainId;
    }
    getChecksummedAddress(address) {
        return __classPrivateFieldGet(this, _EthersAdapter_ethers, "f").utils.getAddress(address);
    }
    getSafeContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid SafeProxy contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getSafeContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getSafeProxyFactoryContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid SafeProxyFactory contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getSafeProxyFactoryContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getMultiSendContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid MultiSend contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getMultiSendContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getMultiSendCallOnlyContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid MultiSendCallOnly contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getMultiSendCallOnlyContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getCompatibilityFallbackHandlerContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid CompatibilityFallbackHandler contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getSignMessageLibContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid SignMessageLib contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getSignMessageLibContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    getCreateCallContract({ safeVersion, chainId, singletonDeployment, customContractAddress }) {
        const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];
        if (!contractAddress) {
            throw new Error('Invalid CreateCall contract address');
        }
        const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, "f") || __classPrivateFieldGet(this, _EthersAdapter_provider, "f");
        return (0, contractInstancesEthers_1.getCreateCallContractInstance)(safeVersion, contractAddress, signerOrProvider);
    }
    async getContractCode(address, blockTag) {
        return __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getCode(address, blockTag);
    }
    async isContractDeployed(address, blockTag) {
        const contractCode = await __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getCode(address, blockTag);
        return contractCode !== '0x';
    }
    async getStorageAt(address, position) {
        const content = await __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getStorageAt(address, position);
        const decodedContent = this.decodeParameters([
            'address'
        ], content);
        return decodedContent[0];
    }
    async getTransaction(transactionHash) {
        return __classPrivateFieldGet(this, _EthersAdapter_provider, "f").getTransaction(transactionHash);
    }
    async getSignerAddress() {
        var _a;
        return (_a = __classPrivateFieldGet(this, _EthersAdapter_signer, "f")) === null || _a === void 0 ? void 0 : _a.getAddress();
    }
    signMessage(message) {
        if (!__classPrivateFieldGet(this, _EthersAdapter_signer, "f")) {
            throw new Error('EthAdapter must be initialized with a signer to use this method');
        }
        const messageArray = __classPrivateFieldGet(this, _EthersAdapter_ethers, "f").utils.arrayify(message);
        return __classPrivateFieldGet(this, _EthersAdapter_signer, "f").signMessage(messageArray);
    }
    async signTypedData(safeTransactionEIP712Args) {
        if (!__classPrivateFieldGet(this, _EthersAdapter_signer, "f")) {
            throw new Error('EthAdapter must be initialized with a signer to use this method');
        }
        if ((0, utils_1.isTypedDataSigner)(__classPrivateFieldGet(this, _EthersAdapter_signer, "f"))) {
            const typedData = (0, safe_core_sdk_utils_1.generateTypedData)(safeTransactionEIP712Args);
            const signature = await __classPrivateFieldGet(this, _EthersAdapter_signer, "f")._signTypedData(typedData.domain, {
                SafeTx: typedData.types.SafeTx
            }, typedData.message);
            return signature;
        }
        throw new Error('The current signer does not implement EIP-712 to sign typed data');
    }
    async estimateGas(transaction) {
        return (await __classPrivateFieldGet(this, _EthersAdapter_provider, "f").estimateGas(transaction)).toNumber();
    }
    call(transaction, blockTag) {
        return __classPrivateFieldGet(this, _EthersAdapter_provider, "f").call(transaction, blockTag);
    }
    encodeParameters(types, values) {
        return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, "f")).utils.AbiCoder().encode(types, values);
    }
    decodeParameters(types, values) {
        return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, "f")).utils.AbiCoder().decode(types, values);
    }
}
_EthersAdapter_ethers = new WeakMap(), _EthersAdapter_signer = new WeakMap(), _EthersAdapter_provider = new WeakMap();
exports.default = EthersAdapter; //# sourceMappingURL=EthersAdapter.js.map
}}),
"[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const EthersAdapter_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/@safe-global/safe-ethers-lib/dist/src/EthersAdapter.js [app-ssr] (ecmascript)"));
exports.default = EthersAdapter_1.default; //# sourceMappingURL=index.js.map
}}),

};

//# sourceMappingURL=node_modules_%40safe-global_safe-ethers-lib_dist_83a1863d._.js.map