{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;;CAGC,GACD,MAAM,iBAAiB;IACrB,YAAa,0BAA0B,GACvC,OAAO,EAAE,OAAO,CAAE;QAChB,MAAM,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACL,GAAG;QACJ,IAAI,CAAC,OAAO,SAAS,CAAC,OAAO;YAC3B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,WAAW,OAAO,YAAY,UAAU;YAC3C,MAAM,IAAI,MAAM;QAClB;QACA,KAAK,CAAC,GAAG,QAAQ,SAAS,EAAE,KAAK,SAAS,CAAC,QAAQ;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA;;;;CAIC,GACD,MAAM,yBAAyB;IAC7B;;;GAGC,GACD,YAAa,0BAA0B,GACvC,OAAO,EAAE,OAAO,CAAE;QAChB,MAAM,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACL,GAAG;QACJ,IAAI,CAAC,CAAC,OAAO,SAAS,CAAC,SAAS,QAAQ,QAAQ,QAAQ,IAAI,GAAG;YAC7D,MAAM,IAAI,MAAM;QAClB;QACA,KAAK,CAAC,SAAS;YACb;YACA;YACA;QACF;IACF;AACF;AAEA;;CAEC,GACD,MAAM,sBAAsB;IAC1B,aAAc;QACZ,KAAK,IAAI;QACT,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;QAC9B,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,WAAW;IACnC;AACF;AAEA;;CAEC,GACD,MAAM,gCAAgC;IACpC,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,OAAO,EACP,WAAW,EACZ,GAAG;QACJ,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,gCAAgC,EAAE,YAAY,EAAE,CAAC;QACzE,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA,MAAM,+BAA+B;IACnC,aAAc;QACZ,KAAK,IAAI;QACT,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;QAC9B,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,WAAW;IACnC;AACF;AACA,MAAM,iCAAiC;IACrC,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,wBAAwB;YAC5B;YACA,MAAM,CAAC;QACT;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA;;CAEC,GACD,MAAM,yBAAyB;IAC7B,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,yBAAyB;YAC7B;YACA,MAAM;QACR;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA;;CAEC,GACD,MAAM,iCAAiC;IACrC,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,yBAAyB;YAC7B;YACA,MAAM;QACR;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,MAAM,uBAAuB,0JAAA,CAAA,UAAY;IACvC,wBAAwB,GAExB,mBAAmB,GAEnB,8BAA8B,GAE9B,kCAAkC,GAElC,gCAAgC,GAEhC,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,SAAS,0LAAA,CAAA,gBAAa,EACtB,OAAO,EACR,GAAG;QACJ,KAAK;QACL,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACjB;IACA,qBAAqB,KAAK,EAAE;QAC1B,MAAM,YAAY,MAAM,SAAS,EAAE,IAAI,CAAA,IAAK,EAAE,GAAG,KAAK,EAAE;QACxD,OAAO,UAAU,MAAM,GAAG,IAAI,YAAY;IAC5C;IACA,mBAAmB,OAAO,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK;IAC9C;IACA,aAAa,MAAM,EAAE;QACnB,IAAI,CAAC,MAAM,GAAG;IAChB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js"],"sourcesContent":["/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACD,SAAS,iBAAiB,OAAO;IAC/B,IAAI,OAAO,YAAY,UAAU;QAC/B,OAAO,OAAO,QAAQ,CAAC,SAAS,QAAQ,IAAI,GAAG,SAAS,CAAC,GAAG,OAAO,OAAO,KAAK;IACjF;IACA,IAAI,OAAO,YAAY,UAAU;QAC/B,OAAO,OAAO;IAChB;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nfunction getInjectedName(ethereum) {\n  if (!ethereum) {\n    return \"Injected\";\n  }\n  const getName = provider => {\n    if (provider.isAvalanche) {\n      return \"Core Wallet\";\n    }\n    if (provider.isBitKeep) {\n      return \"BitKeep\";\n    }\n    if (provider.isBraveWallet) {\n      return \"Brave Wallet\";\n    }\n    if (provider.isCoinbaseWallet) {\n      return \"Coinbase Wallet\";\n    }\n    if (provider.isExodus) {\n      return \"Exodus\";\n    }\n    if (provider.isFrame) {\n      return \"Frame\";\n    }\n    if (provider.isKuCoinWallet) {\n      return \"KuCoin Wallet\";\n    }\n    if (provider.isMathWallet) {\n      return \"MathWallet\";\n    }\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) {\n      return \"1inch Wallet\";\n    }\n    if (provider.isOpera) {\n      return \"Opera\";\n    }\n    if (provider.isPortal) {\n      return \"Ripio Portal\";\n    }\n    if (provider.isTally) {\n      return \"Tally\";\n    }\n    if (provider.isTokenPocket) {\n      return \"TokenPocket\";\n    }\n    if (provider.isTokenary) {\n      return \"Tokenary\";\n    }\n    if (provider.isTrust || provider.isTrustWallet) {\n      return \"Trust Wallet\";\n    }\n    if (provider.isMetaMask) {\n      return \"MetaMask\";\n    }\n    if (provider.isImToken) {\n      return \"imToken\";\n    }\n  };\n\n  // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n  if (ethereum.providers?.length) {\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length) {\n      return names;\n    }\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\nclass InjectedConnector extends WagmiConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      shimDisconnect: true,\n      getProvider: () => {\n        if (assertWindowEthereum(globalThis.window)) {\n          return globalThis.window.ethereum;\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options\n    });\n    /**\n     * Name of the injected connector\n     */\n    /**\n     * Whether the connector is ready to be used\n     *\n     * `true` if the injected provider is found\n     */\n    _defineProperty(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    /**\n     * handles the `accountsChanged` event from the provider\n     * * emits `change` event if connected to a different account\n     * * emits `disconnect` event if no accounts available\n     */\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    /**\n     * handles the `chainChanged` event from the provider\n     * * emits `change` event if connected to a different chain\n     */\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    /**\n     * handles the `disconnect` event from the provider\n     * * emits `disconnect` event\n     */\n    _defineProperty(this, \"onDisconnect\", async error => {\n      // We need this as MetaMask can emit the \"disconnect\" event upon switching chains.\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          try {\n            const isAuthorized = await this.getAccount();\n            if (isAuthorized) {\n              return;\n            }\n          } catch {\n            // If we can't get the account anymore, continue with disconnect\n          }\n        }\n      }\n      this.emit(\"disconnect\");\n\n      // Remove `shimDisconnect` => it signals that wallet is disconnected\n      if (this.options.shimDisconnect) {\n        await this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    const _provider = options.getProvider();\n\n    // set the name of the connector\n    if (typeof options.name === \"string\") {\n      // if name is given, use that\n      this.name = options.name;\n    } else if (_provider) {\n      // if injected provider is detected, get name from it\n      const detectedName = getInjectedName(_provider);\n      if (options.name) {\n        this.name = options.name(detectedName);\n      } else {\n        if (typeof detectedName === \"string\") {\n          this.name = detectedName;\n        } else {\n          this.name = detectedName[0];\n        }\n      }\n    } else {\n      // else default to \"Injected\"\n      this.name = \"Injected\";\n    }\n    this.id = \"injected\";\n    this.ready = !!_provider;\n    this.connectorStorage = arg.connectorStorage;\n  }\n\n  /**\n   * * Connect to the injected provider\n   * * switch to the given chain if `chainId` is specified as an argument\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // request account addresses from injected provider\n      const accountAddresses = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // get the first account address\n      const firstAccountAddress = utils.getAddress(accountAddresses[0]);\n\n      // Switch to given chain if a chainId is specified\n      let connectedChainId = await this.getChainId();\n      // Check if currently connected chain is unsupported\n      // chainId is considered unsupported if chainId is not in the list of this.chains array\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is specified and it is not the same as the currently connected chain\n      if (options.chainId && connectedChainId !== options.chainId) {\n        // switch to the given chain\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate connectedChainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id: ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options.shimDisconnect) {\n        // add the shim shimDisconnectKey => it signals that wallet is connected\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        account: firstAccountAddress,\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * disconnect from the injected provider\n   */\n  async disconnect() {\n    // perform cleanup\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n\n    // if shimDisconnect is enabled\n    if (this.options.shimDisconnect) {\n      // Remove the shimDisconnectKey => it signals that wallet is disconnected\n      await this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n\n  /**\n   * @returns The first account address from the injected provider\n   */\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n\n    // return checksum address\n    // https://docs.ethers.org/v5/api/utils/address/#utils-getAddress\n    return utils.getAddress(accounts[0]);\n  }\n\n  /**\n   * @returns The `chainId` of the currently connected chain from injected provider normalized to a `number`\n   */\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(normalizeChainId);\n  }\n\n  /**\n   * get the injected provider\n   */\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) {\n      this._provider = provider;\n      // setting listeners\n    }\n    return this._provider;\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  /**\n   *\n   * @returns `true` if the connector is connected and address is available, else `false`\n   */\n  async isAuthorized() {\n    try {\n      // `false` if connector is disconnected\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      // `false` if no account address available, else `true`\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      // `false` if any error thrown\n      return false;\n    }\n  }\n\n  /**\n   * switch to given chain\n   */\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // request provider to switch to given chainIdHex\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      });\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (chain) {\n        return chain;\n      }\n      return {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (error) {\n      // if could not switch to given chainIdHex\n\n      // if tried to connect to a chain that is not configured\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // if chain is not added to provider\n      if (error.code === 4902 ||\n      // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      error?.data?.originalError?.code === 4902) {\n        try {\n          // request provider to add chain\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(error);\n          }\n\n          // else other error\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n}\n\nexport { InjectedConnector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/evm/connectors/xdefi/dist/thirdweb-dev-wallets-evm-connectors-xdefi.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError } from '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js';\nimport { utils } from 'ethers';\nimport { g as getInjectedXDEFIProvider } from '../../../../dist/getInjectedXDEFIProvider-ce9c378e.browser.esm.js';\nimport '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\nimport '../../../../dist/url-a45219bd.browser.esm.js';\nimport '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\n\nclass XDEFIConnector extends InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"XDEFI\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: getInjectedXDEFIProvider\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n    _defineProperty(this, \"id\", walletIds.xdefi);\n  }\n\n  /**\n   * Connect to injected XDEFIWallet provider\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // Attempt to show wallet select prompt with `wallet_requestPermissions` when\n      // `shimDisconnect` is active and account is in disconnected state (flag in storage)\n      let account = null;\n      if (this.options?.shimDisconnect && !Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) {\n          // Attempt to show another prompt for selecting wallet if already connected\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{\n                eth_accounts: {}\n              }]\n            });\n          } catch (error) {\n            // Not all injected providers support `wallet_requestPermissions` (e.g. iOS).\n            // Only bubble up error if user rejects request\n            if (this.isUserRejectedRequestError(error)) {\n              throw new UserRejectedRequestError(error);\n            }\n          }\n        }\n      }\n\n      // if account is not already set, request accounts and use the first account\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = utils.getAddress(accounts[0]);\n      }\n\n      // get currently connected chainId\n      let connectedChainId = await this.getChainId();\n      // check if connected chain is unsupported\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is given, but does not match the currently connected chainId, switch to the given chainId\n      if (options.chainId && connectedChainId !== options.chainId) {\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate the chainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id : ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options?.shimDisconnect) {\n        // add shimDisconnectKey in storage - this signals that connector is \"connected\"\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider: provider,\n        account\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n}\n\nexport { XDEFIConnector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}