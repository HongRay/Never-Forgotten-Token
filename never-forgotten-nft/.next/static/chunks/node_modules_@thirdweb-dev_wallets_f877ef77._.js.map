{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;;CAGC,GACD,MAAM,iBAAiB;IACrB,YAAa,0BAA0B,GACvC,OAAO,EAAE,OAAO,CAAE;QAChB,MAAM,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACL,GAAG;QACJ,IAAI,CAAC,OAAO,SAAS,CAAC,OAAO;YAC3B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,WAAW,OAAO,YAAY,UAAU;YAC3C,MAAM,IAAI,MAAM;QAClB;QACA,KAAK,CAAC,GAAG,QAAQ,SAAS,EAAE,KAAK,SAAS,CAAC,QAAQ;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA;;;;CAIC,GACD,MAAM,yBAAyB;IAC7B;;;GAGC,GACD,YAAa,0BAA0B,GACvC,OAAO,EAAE,OAAO,CAAE;QAChB,MAAM,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACL,GAAG;QACJ,IAAI,CAAC,CAAC,OAAO,SAAS,CAAC,SAAS,QAAQ,QAAQ,QAAQ,IAAI,GAAG;YAC7D,MAAM,IAAI,MAAM;QAClB;QACA,KAAK,CAAC,SAAS;YACb;YACA;YACA;QACF;IACF;AACF;AAEA;;CAEC,GACD,MAAM,sBAAsB;IAC1B,aAAc;QACZ,KAAK,IAAI;QACT,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;QAC9B,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,WAAW;IACnC;AACF;AAEA;;CAEC,GACD,MAAM,gCAAgC;IACpC,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,OAAO,EACP,WAAW,EACZ,GAAG;QACJ,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,gCAAgC,EAAE,YAAY,EAAE,CAAC;QACzE,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA,MAAM,+BAA+B;IACnC,aAAc;QACZ,KAAK,IAAI;QACT,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;QAC9B,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,WAAW;IACnC;AACF;AACA,MAAM,iCAAiC;IACrC,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,wBAAwB;YAC5B;YACA,MAAM,CAAC;QACT;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA;;CAEC,GACD,MAAM,yBAAyB;IAC7B,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,yBAAyB;YAC7B;YACA,MAAM;QACR;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF;AACA;;CAEC,GACD,MAAM,iCAAiC;IACrC,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC,yBAAyB;YAC7B;YACA,MAAM;QACR;QACA,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,QAAQ;IAChC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,MAAM,uBAAuB,0JAAA,CAAA,UAAY;IACvC,wBAAwB,GAExB,mBAAmB,GAEnB,8BAA8B,GAE9B,kCAAkC,GAElC,gCAAgC,GAEhC,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,SAAS,0LAAA,CAAA,gBAAa,EACtB,OAAO,EACR,GAAG;QACJ,KAAK;QACL,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACjB;IACA,qBAAqB,KAAK,EAAE;QAC1B,MAAM,YAAY,MAAM,SAAS,EAAE,IAAI,CAAA,IAAK,EAAE,GAAG,KAAK,EAAE;QACxD,OAAO,UAAU,MAAM,GAAG,IAAI,YAAY;IAC5C;IACA,mBAAmB,OAAO,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK;IAC9C;IACA,aAAa,MAAM,EAAE;QACnB,IAAI,CAAC,MAAM,GAAG;IAChB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { U as UserRejectedRequestError, S as SwitchChainError } from '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nconst chainsToRequest = new Set([1, 137, 10, 42161, 56]);\nconst NAMESPACE = \"eip155\";\nconst REQUESTED_CHAINS_KEY = \"wagmi.requestedChains\";\nconst ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nconst LAST_USED_CHAIN_ID = \"last-used-chain-id\";\nclass WalletConnectConnector extends WagmiConnector {\n  constructor(config) {\n    super({\n      ...config,\n      options: {\n        isNewChainsStale: true,\n        ...config.options\n      }\n    });\n    _defineProperty(this, \"id\", walletIds.walletConnect);\n    _defineProperty(this, \"name\", \"WalletConnect\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        if (accounts[0]) {\n          this.emit(\"change\", {\n            account: utils.getAddress(accounts[0])\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", async chainId => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      await this._storage.setItem(LAST_USED_CHAIN_ID, String(chainId));\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      await this._setRequestedChainsIds([]);\n      await this._storage.removeItem(LAST_USED_CHAIN_ID);\n      this.emit(\"disconnect\");\n    });\n    _defineProperty(this, \"onDisplayUri\", uri => {\n      this.emit(\"message\", {\n        type: \"display_uri\",\n        data: uri\n      });\n    });\n    _defineProperty(this, \"onConnect\", () => {\n      this.emit(\"connect\", {\n        provider: this._provider\n      });\n    });\n    this._storage = config.options.storage;\n    this._createProvider();\n    this.filteredChains = this.chains.length > 50 ? this.chains.filter(c => {\n      return chainsToRequest.has(c.chainId);\n    }) : this.chains;\n    this.showWalletConnectModal = this.options.qrcode !== false;\n  }\n  async connect() {\n    let {\n      chainId: chainIdP,\n      pairingTopic\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let targetChainId = chainIdP;\n      if (!targetChainId) {\n        const lastUsedChainIdStr = await this._storage.getItem(LAST_USED_CHAIN_ID);\n        const lastUsedChainId = lastUsedChainIdStr ? parseInt(lastUsedChainIdStr) : undefined;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) {\n          targetChainId = lastUsedChainId;\n        } else {\n          targetChainId = this.filteredChains[0]?.chainId;\n        }\n      }\n      if (!targetChainId) {\n        throw new Error(\"No chains found on connector.\");\n      }\n      const provider = await this.getProvider();\n      this.setupListeners();\n      if (provider.session) {\n        await provider.disconnect();\n        const optionalChains = this.filteredChains.filter(chain => chain.chainId !== targetChainId).map(optionalChain => optionalChain.chainId);\n        this.emit(\"message\", {\n          type: \"connecting\"\n        });\n        await provider.connect({\n          pairingTopic,\n          chains: [targetChainId],\n          optionalChains: optionalChains.length > 0 ? optionalChains : [targetChainId]\n        });\n        await this._setRequestedChainsIds(this.filteredChains.map(_ref => {\n          let {\n            chainId\n          } = _ref;\n          return chainId;\n        }));\n      }\n\n      // If session exists and chains are authorized, enable provider for required chain\n      const accounts = await provider.enable();\n      if (!accounts[0]) {\n        throw new Error(\"No accounts found on provider.\");\n      }\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const cleanup = () => {\n      if (typeof localStorage === \"undefined\") {\n        return;\n      }\n      for (const key in localStorage) {\n        if (key.startsWith(\"wc@2\")) {\n          localStorage.removeItem(key);\n        }\n      }\n    };\n    cleanup();\n    const provider = await this.getProvider();\n    const disconnectProvider = async () => {\n      try {\n        await provider.disconnect();\n      } catch (error) {\n        if (!/No matching key/i.test(error.message)) {\n          throw error;\n        }\n      } finally {\n        this._removeListeners();\n        await this._setRequestedChainsIds([]);\n        cleanup();\n      }\n    };\n    disconnectProvider();\n  }\n  async getAccount() {\n    const {\n      accounts\n    } = await this.getProvider();\n    if (!accounts[0]) {\n      throw new Error(\"No accounts found on provider.\");\n    }\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const {\n      chainId\n    } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this._provider) {\n      await this._createProvider();\n    }\n    if (chainId) {\n      await this.switchChain(chainId);\n    }\n    if (!this._provider) {\n      throw new Error(\"No provider found.\");\n    }\n    return this._provider;\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([this.getAccount(), this.getProvider()]);\n      const isChainsStale = await this._isChainsStale();\n\n      // If an account does not exist on the session, then the connector is unauthorized.\n      if (!account) {\n        return false;\n      }\n\n      // If the chains are stale on the session, then the connector is unauthorized.\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {} // eslint-disable-line no-empty\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find(chain_ => chain_.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(`Chain with ID: ${chainId}, not found on connector.`);\n    }\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = this._getNamespaceChainsIds();\n      const namespaceMethods = this._getNamespaceMethods();\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        const firstExplorer = chain.explorers && chain.explorers[0];\n        const blockExplorerUrls = firstExplorer ? {\n          blockExplorerUrls: [firstExplorer.url]\n        } : {};\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [{\n            chainId: utils.hexValue(chain.chainId),\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: getValidPublicRPCUrl(chain),\n            // no clientId on purpose\n            ...blockExplorerUrls\n          }]\n        });\n        const requestedChains = await this._getRequestedChainsIds();\n        requestedChains.push(chainId);\n        await this._setRequestedChainsIds(requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: utils.hexValue(chainId)\n        }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async _createProvider() {\n    if (!this._initProviderPromise && \"object\" !== \"undefined\") {\n      this._initProviderPromise = this.initProvider();\n    }\n    return this._initProviderPromise;\n  }\n  async initProvider() {\n    const {\n      default: EthereumProvider,\n      OPTIONAL_EVENTS,\n      OPTIONAL_METHODS\n    } = await import('@walletconnect/ethereum-provider');\n    const [defaultChain, ...optionalChains] = this.filteredChains.map(_ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      return chainId;\n    });\n    if (defaultChain) {\n      // EthereumProvider populates & deduplicates required methods and events internally\n      this._provider = await EthereumProvider.init({\n        showQrModal: this.showWalletConnectModal,\n        projectId: this.options.projectId,\n        methods: [\"eth_sendTransaction\", \"personal_sign\", \"eth_signTypedData_v4\"],\n        optionalMethods: OPTIONAL_METHODS,\n        optionalEvents: OPTIONAL_EVENTS,\n        chains: [defaultChain],\n        optionalChains: optionalChains,\n        metadata: {\n          name: this.options.dappMetadata.name,\n          description: this.options.dappMetadata.description || \"\",\n          url: this.options.dappMetadata.url,\n          icons: [this.options.dappMetadata.logoUrl || \"\"]\n        },\n        rpcMap: Object.fromEntries(this.filteredChains.map(chain => [chain.chainId, chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n        ])),\n        qrModalOptions: this.options.qrModalOptions\n      });\n    }\n  }\n\n  /**\n   * Checks if the target chains match the chains that were\n   * initially requested by the connector for the WalletConnect session.\n   * If there is a mismatch, this means that the chains on the connector\n   * are considered stale, and need to be revalidated at a later point (via\n   * connection).\n   *\n   * There may be a scenario where a dapp adds a chain to the\n   * connector later on, however, this chain will not have been approved or rejected\n   * by the wallet. In this case, the chain is considered stale.\n   *\n   * There are exceptions however:\n   * -  If the wallet supports dynamic chain addition via `eth_addEthereumChain`,\n   *    then the chain is not considered stale.\n   * -  If the `isNewChainsStale` flag is falsy on the connector, then the chain is\n   *    not considered stale.\n   *\n   * For the above cases, chain validation occurs dynamically when the user\n   * attempts to switch chain.\n   *\n   * Also check that dapp supports at least 1 chain from previously approved session.\n   */\n  async _isChainsStale() {\n    const namespaceMethods = this._getNamespaceMethods();\n    if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n      return false;\n    }\n    if (!this.options.isNewChainsStale) {\n      return false;\n    }\n    const requestedChains = await this._getRequestedChainsIds();\n    const connectorChains = this.filteredChains.map(_ref3 => {\n      let {\n        chainId\n      } = _ref3;\n      return chainId;\n    });\n    const namespaceChains = this._getNamespaceChainsIds();\n    if (namespaceChains.length && !namespaceChains.some(id => connectorChains.includes(id))) {\n      return false;\n    }\n    return !connectorChains.every(id => requestedChains.includes(id));\n  }\n  async setupListeners() {\n    if (!this._provider) {\n      return;\n    }\n    this._removeListeners();\n    this._provider.on(\"accountsChanged\", this.onAccountsChanged);\n    this._provider.on(\"chainChanged\", this.onChainChanged);\n    this._provider.on(\"disconnect\", this.onDisconnect);\n    this._provider.on(\"session_delete\", this.onDisconnect);\n    this._provider.on(\"display_uri\", this.onDisplayUri);\n    this._provider.on(\"connect\", this.onConnect);\n  }\n  _removeListeners() {\n    if (!this._provider) {\n      return;\n    }\n    this._provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    this._provider.removeListener(\"chainChanged\", this.onChainChanged);\n    this._provider.removeListener(\"disconnect\", this.onDisconnect);\n    this._provider.removeListener(\"session_delete\", this.onDisconnect);\n    this._provider.removeListener(\"display_uri\", this.onDisplayUri);\n    this._provider.removeListener(\"connect\", this.onConnect);\n  }\n  async _setRequestedChainsIds(chains) {\n    await this._storage.setItem(REQUESTED_CHAINS_KEY, JSON.stringify(chains));\n  }\n  async _getRequestedChainsIds() {\n    const data = await this._storage.getItem(REQUESTED_CHAINS_KEY);\n    return data ? JSON.parse(data) : [];\n  }\n  _getNamespaceChainsIds() {\n    if (!this._provider) {\n      return [];\n    }\n    const chainIds = this._provider.session?.namespaces[NAMESPACE]?.chains?.map(chain => parseInt(chain.split(\":\")[1] || \"\"));\n    return chainIds ?? [];\n  }\n  _getNamespaceMethods() {\n    if (!this._provider) {\n      return [];\n    }\n    const methods = this._provider.session?.namespaces[NAMESPACE]?.methods;\n    return methods ?? [];\n  }\n}\n\nexport { WalletConnectConnector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}