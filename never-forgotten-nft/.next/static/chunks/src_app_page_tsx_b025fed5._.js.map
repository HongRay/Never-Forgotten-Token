{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/src/app/page.tsx"],"sourcesContent":["// /src/app/page.tsx\n'use client';\n\nimport { useState } from 'react';\nimport {\n  ThirdwebProvider,\n  ConnectWallet,\n  useAddress,\n  useContract,\n  useStorageUpload,\n} from '@thirdweb-dev/react';\nimport { Sepolia } from '@thirdweb-dev/chains';\n\nconst CONTRACT_ADDRESS = 'PASTE_YOUR_DEPLOYED_CONTRACT_ADDRESS_HERE';\n\nexport default function Home() {\n  return (\n    <ThirdwebProvider activeChain={Sepolia} clientId=\"PASTE_YOUR_THIRDWEB_CLIENT_ID\">\n      <MintNFTPage />\n    </ThirdwebProvider>\n  );\n}\n\nfunction MintNFTPage() {\n  const address = useAddress();\n  const { contract } = useContract(CONTRACT_ADDRESS);\n  const { mutateAsync: upload } = useStorageUpload();\n\n  const [file, setFile] = useState<File | null>(null);\n  const [status, setStatus] = useState('');\n\n  const handleMint = async () => {\n    if (!file || !address) return;\n\n    try {\n      setStatus('Uploading to IPFS...');\n      const [ipfsUrl] = await upload({ data: [file] });\n\n      setStatus('Minting NFT...');\n      await contract?.erc721.mintTo(address, {\n        name: 'Death Certificate NFT',\n        description: 'Official uploaded certificate.',\n        image: ipfsUrl,\n      });\n\n      setStatus('✅ NFT Minted! View it on your wallet.');\n    } catch (err) {\n      console.error(err);\n      setStatus('❌ Error minting NFT.');\n    }\n  };\n\n  return (\n    <main style={{ padding: '2rem' }}>\n      <h1>Never Forgotten Token</h1>\n      <ConnectWallet />\n\n      {address && (\n        <>\n          <input\n            type=\"file\"\n            accept=\"image/*,.pdf\"\n            onChange={(e) => setFile(e.target.files?.[0] || null)}\n          />\n          <button onClick={handleMint} style={{ marginLeft: '1rem' }}>\n            Upload & Mint NFT\n          </button>\n          <p>{status}</p>\n        </>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAGpB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAVA;;;;AAYA,MAAM,mBAAmB;AAEV,SAAS;IACtB,qBACE,6LAAC,4OAAA,CAAA,mBAAgB;QAAC,aAAa,0LAAA,CAAA,UAAO;QAAE,UAAS;kBAC/C,cAAA,6LAAC;;;;;;;;;;AAGP;KANwB;AAQxB,SAAS;;IACP,MAAM,UAAU,CAAA,GAAA,wPAAA,CAAA,aAAU,AAAD;IACzB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,yPAAA,CAAA,cAAW,AAAD,EAAE;IACjC,MAAM,EAAE,aAAa,MAAM,EAAE,GAAG,CAAA,GAAA,+PAAA,CAAA,mBAAgB,AAAD;IAE/C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACjB,IAAI,CAAC,QAAQ,CAAC,SAAS;QAEvB,IAAI;YACF,UAAU;YACV,MAAM,CAAC,QAAQ,GAAG,MAAM,OAAO;gBAAE,MAAM;oBAAC;iBAAK;YAAC;YAE9C,UAAU;YACV,MAAM,UAAU,OAAO,OAAO,SAAS;gBACrC,MAAM;gBACN,aAAa;gBACb,OAAO;YACT;YAEA,UAAU;QACZ,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,UAAU;QACZ;IACF;IAEA,qBACE,6LAAC;QAAK,OAAO;YAAE,SAAS;QAAO;;0BAC7B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC,yOAAA,CAAA,gBAAa;;;;;YAEb,yBACC;;kCACE,6LAAC;wBACC,MAAK;wBACL,QAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;;;;;;kCAElD,6LAAC;wBAAO,SAAS;wBAAY,OAAO;4BAAE,YAAY;wBAAO;kCAAG;;;;;;kCAG5D,6LAAC;kCAAG;;;;;;;;;;;;;;AAKd;GAjDS;;QACS,wPAAA,CAAA,aAAU;QACL,yPAAA,CAAA,cAAW;QACA,+PAAA,CAAA,mBAAgB;;;MAHzC","debugId":null}}]
}