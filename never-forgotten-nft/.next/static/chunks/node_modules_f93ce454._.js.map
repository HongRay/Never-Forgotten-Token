{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40paperxyz/sdk-common-utilities/src/constants/blockchain.ts","file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40paperxyz/sdk-common-utilities/src/constants/settings.ts","file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40paperxyz/sdk-common-utilities/src/constants/style.ts"],"sourcesContent":["export const ChainToPublicRpc: Record<Chain, string> = {\n  Ethereum: \"https://ethereum.rpc.thirdweb.com\",\n  Goerli: \"https://goerli.rpc.thirdweb.com\",\n  Mumbai: \"https://mumbai.rpc.thirdweb.com\",\n  Polygon: \"https://polygon.rpc.thirdweb.com\",\n  Avalanche: \"https://avalanche.rpc.thirdweb.com\",\n  Optimism: \"https://optimism.rpc.thirdweb.com\",\n  OptimismGoerli: \"https://optimism-goerli.rpc.thirdweb.com\",\n  BSC: \"https://binance.rpc.thirdweb.com\",\n  BSCTestnet: \"https://binance-testnet.rpc.thirdweb.com\",\n  ArbitrumOne: \"https://arbitrum.rpc.thirdweb.com\",\n  ArbitrumGoerli: \"https://arbitrum-goerli.rpc.thirdweb.com\",\n  Fantom: \"https://fantom.rpc.thirdweb.com\",\n  FantomTestnet: \"https://fantom-testnet.rpc.thirdweb.com\",\n  Sepolia: \"https://sepolia.rpc.thirdweb.com\",\n  AvalancheFuji: \"https://avalanche-fuji.rpc.thirdweb.com\",\n};\n\nexport const ChainIdToChain: Record<number, Chain> = {\n  1: \"Ethereum\",\n  5: \"Goerli\",\n  80001: \"Mumbai\",\n  137: \"Polygon\",\n  43114: \"Avalanche\",\n  10: \"Optimism\",\n  420: \"OptimismGoerli\",\n  56: \"BSC\",\n  97: \"BSCTestnet\",\n  42161: \"ArbitrumOne\",\n  421613: \"ArbitrumGoerli\",\n  250: \"Fantom\",\n  4002: \"FantomTestnet\",\n  11155111: \"Sepolia\",\n  43113: \"AvalancheFuji\",\n};\n\n// General Embedded wallet types\nexport type Chain =\n  | \"Polygon\"\n  | \"Mumbai\"\n  | \"Goerli\"\n  | \"Ethereum\"\n  | \"Avalanche\"\n  | \"Optimism\"\n  | \"OptimismGoerli\"\n  | \"BSC\"\n  | \"BSCTestnet\"\n  | \"ArbitrumOne\"\n  | \"ArbitrumGoerli\"\n  | \"Fantom\"\n  | \"FantomTestnet\"\n  | \"Sepolia\"\n  | \"AvalancheFuji\";\n\nexport type SupportedChainName = Chain | \"Rinkeby\" | \"Solana\" | \"SolanaDevnet\";\n","const isDev = (): boolean => {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.localStorage.getItem(\"IS_PAPER_DEV\") === \"true\"\n  );\n};\n\nconst isOldPaperDomain = (): boolean =>\n  typeof window !== \"undefined\" && window.location.origin.includes(\"paper.xyz\");\n\nconst isThirdwebDomain = (): boolean =>\n  typeof window !== \"undefined\" &&\n  window.location.origin.includes(\"thirdweb.com\");\n\nexport const getPaperOriginUrl = (): string => {\n  if (isDev())\n    return (\n      window.localStorage.getItem(\"PAPER_DEV_URL\") ?? \"http://localhost:3000\"\n    );\n\n  if (isOldPaperDomain()) return window.location.origin;\n  if (isThirdwebDomain()) return window.location.origin;\n\n  return \"https://withpaper.com\";\n};\n","export type StyleObject = Partial<CSSStyleDeclaration>;\n\nexport interface ICustomizationOptions {\n  colorPrimary?: string;\n  colorBackground?: string;\n  colorText?: string;\n  borderRadius?: number;\n  fontFamily?: string;\n\n  inputBackgroundColor?: string;\n  inputBorderColor?: string;\n}\nexport type CustomizationOptionsType = {\n  [key in keyof ICustomizationOptions]: string;\n};\nexport type Locale = \"en\" | \"fr\" | \"es\" | \"it\" | \"de\" | \"ja\" | \"ko\" | \"zh\";\n\nexport const DEFAULT_BRAND_OPTIONS = {\n  colorPrimary: \"#cf3781\",\n  colorBackground: \"#ffffff\",\n  colorText: \"#1a202c\",\n  borderRadius: 12,\n  fontFamily: \"Open Sans\",\n};\n"],"names":["ChainToPublicRpc","isDev","isOldPaperDomain","isThirdwebDomain","getPaperOriginUrl","_a","DEFAULT_BRAND_OPTIONS"],"mappings":";;;;;AAAO,IAAMA,IAA0C;IACrD,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,WAAW;IACX,UAAU;IACV,gBAAgB;IAChB,KAAK;IACL,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,QAAQ;IACR,eAAe;IACf,SAAS;IACT,eAAe;AACjB;AChBA,IAAMC,IAAQ,IAEV,OAAO,UAAW,eAClB,OAAO,YAAA,CAAa,OAAA,CAAQ,cAAc,MAAM,QAI9CC,IAAmB,IACvB,OAAO,UAAW,eAAe,OAAO,QAAA,CAAS,MAAA,CAAO,QAAA,CAAS,WAAW,GAExEC,IAAmB,IACvB,OAAO,UAAW,eAClB,OAAO,QAAA,CAAS,MAAA,CAAO,QAAA,CAAS,cAAc,GAEnCC,IAAoB,IAAc;IAd/C,IAAAC;IAeE,OAAIJ,EAAM,IAAA,CAENI,IAAA,OAAO,YAAA,CAAa,OAAA,CAAQ,eAAe,CAAA,KAA3C,OAAAA,IAAgD,0BAGhDH,EAAiB,KACjBC,EAAiB,IAAU,OAAO,QAAA,CAAS,MAAA,GAExC;AACT;ACPO,IAAMG,IAAwB;IACnC,cAAc;IACd,iBAAiB;IACjB,WAAW;IACX,cAAc;IACd,YAAY;AACd","ignoreList":[0,1,2],"debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/embedded-wallet-e375380a.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\nimport { ChainToPublicRpc } from '@paperxyz/sdk-common-utilities';\nimport { Signer, getDefaultProvider } from 'ethers';\nimport { defineReadOnly } from 'ethers/lib/utils';\nimport { getDefaultGasOverrides } from '@thirdweb-dev/sdk';\n\n/**\n * @internal\n */\nconst EMBEDDED_WALLET_PATH = \"/sdk/2022-08-12/embedded-wallet\";\n/**\n * @internal\n */\nconst GET_IFRAME_BASE_URL = () => {\n  if (!!(localStorage.getItem(\"IS_THIRDWEB_DEV\") === \"true\")) {\n    return window.localStorage.getItem(\"THIRDWEB_DEV_URL\") ?? \"http://localhost:3000\";\n  }\n  return `https://embedded-wallet.thirdweb.com`;\n};\n/**\n * @internal\n */\nconst WALLET_USER_DETAILS_LOCAL_STORAGE_NAME = clientId => `thirdwebEwsWalletUserDetails-${clientId}`;\n\n/**\n * @internal\n */\nconst WALLET_USER_ID_LOCAL_STORAGE_NAME = clientId => `thirdwebEwsWalletUserId-${clientId}`;\n\n/**\n * @internal\n */\nconst AUTH_TOKEN_LOCAL_STORAGE_PREFIX = \"walletToken\";\n\n/**\n * @internal\n */\nconst AUTH_TOKEN_LOCAL_STORAGE_NAME = clientId => {\n  return `${AUTH_TOKEN_LOCAL_STORAGE_PREFIX}-${clientId}`;\n};\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_PREFIX = \"a\";\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_NAME = (clientId, userId) => `${DEVICE_SHARE_LOCAL_STORAGE_PREFIX}-${clientId}-${userId}`;\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED = clientId => `${DEVICE_SHARE_LOCAL_STORAGE_PREFIX}-${clientId}`;\n\nlet RecoveryShareManagement = /*#__PURE__*/function (RecoveryShareManagement) {\n  RecoveryShareManagement[\"USER_MANAGED\"] = \"USER_MANAGED\";\n  RecoveryShareManagement[\"CLOUD_MANAGED\"] = \"AWS_MANAGED\";\n  return RecoveryShareManagement;\n}({});\nlet AuthProvider = /*#__PURE__*/function (AuthProvider) {\n  AuthProvider[\"COGNITO\"] = \"Cognito\";\n  AuthProvider[\"GOOGLE\"] = \"Google\";\n  AuthProvider[\"EMAIL_OTP\"] = \"EmailOtp\";\n  AuthProvider[\"CUSTOM_JWT\"] = \"CustomJWT\";\n  AuthProvider[\"CUSTOM_AUTH_ENDPOINT\"] = \"CustomAuthEndpoint\";\n  AuthProvider[\"FACEBOOK\"] = \"Facebook\";\n  AuthProvider[\"APPLE\"] = \"Apple\";\n  AuthProvider[\"PASSKEY\"] = \"Passkey\";\n  AuthProvider[\"EXTERNAL_WALLET\"] = \"ExternalWallet\";\n  AuthProvider[\"DISCORD\"] = \"Discord\";\n  return AuthProvider;\n}({});\n\n/**\n * @internal\n */\n\n// TODO: Clean up tech debt of random type Objects\n// E.g. StoredTokenType is really not used anywhere but it exists as this object for legacy reason\n\n// Class constructor types\n// types for class constructors still a little messy right now.\n// Open to PRs from whoever sees this and knows of a cleaner way to handle things\n\n// Auth Types\n\n// Embedded Wallet Types\nlet UserWalletStatus = /*#__PURE__*/function (UserWalletStatus) {\n  UserWalletStatus[\"LOGGED_OUT\"] = \"Logged Out\";\n  UserWalletStatus[\"LOGGED_IN_WALLET_UNINITIALIZED\"] = \"Logged In, Wallet Uninitialized\";\n  UserWalletStatus[\"LOGGED_IN_NEW_DEVICE\"] = \"Logged In, New Device\";\n  UserWalletStatus[\"LOGGED_IN_WALLET_INITIALIZED\"] = \"Logged In, Wallet Initialized\";\n  return UserWalletStatus;\n}({});\n\n/**\n * @internal\n */\n\n// ! Types seem repetitive, but the name should identify which goes where\n// this is the return type from the EmbeddedWallet Class getUserWalletStatus method iframe call\n\n// this is the return type from the EmbeddedWallet Class getUserWalletStatus method\n\nconst data = new Map();\nclass LocalStorage {\n  constructor(_ref) {\n    let {\n      clientId\n    } = _ref;\n    this.isSupported = !!window.localStorage;\n    this.clientId = clientId;\n  }\n  async getItem(key) {\n    if (this.isSupported) {\n      return window.localStorage.getItem(key);\n    } else {\n      return data.get(key) ?? null;\n    }\n  }\n  async setItem(key, value) {\n    if (this.isSupported) {\n      return window.localStorage.setItem(key, value);\n    } else {\n      data.set(key, value);\n    }\n  }\n  async removeItem(key) {\n    const item = await this.getItem(key);\n    if (this.isSupported && item) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  async saveAuthCookie(cookie) {\n    await this.setItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId), cookie);\n  }\n  async getAuthCookie() {\n    return this.getItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async removeAuthCookie() {\n    return this.removeItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async saveDeviceShare(share, userId) {\n    await this.saveWalletUserId(userId);\n    await this.setItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId), share);\n  }\n  async getDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.getItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId));\n    }\n    return null;\n  }\n  async removeDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.removeItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId));\n    }\n    return false;\n  }\n  async getWalletUserId() {\n    return this.getItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async saveWalletUserId(userId) {\n    await this.setItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId), userId);\n  }\n  async removeWalletUserId() {\n    return this.removeItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId));\n  }\n}\n\nfunction sleep(seconds) {\n  return new Promise(resolve => {\n    setTimeout(resolve, seconds * 1000);\n  });\n}\nconst iframeBaseStyle = {\n  height: \"100%\",\n  width: \"100%\",\n  border: \"none\",\n  backgroundColor: \"transparent\",\n  colorScheme: \"light\",\n  position: \"fixed\",\n  top: \"0px\",\n  right: \"0px\",\n  zIndex: \"2147483646\",\n  display: \"none\"\n};\n\n// Global var to help track iframe state\nconst isIframeLoaded = new Map();\nclass IframeCommunicator {\n  constructor(_ref) {\n    let {\n      link,\n      iframeId,\n      container = document.body,\n      iframeStyles,\n      onIframeInitialize\n    } = _ref;\n    _defineProperty(this, \"POLLING_INTERVAL_SECONDS\", 1.4);\n    this.iframeBaseUrl = GET_IFRAME_BASE_URL();\n\n    // Creating the IFrame element for communication\n    let iframe = document.getElementById(iframeId);\n    const hrefLink = new URL(link);\n    const sdkVersion = \"2.5.39\";\n    hrefLink.searchParams.set(\"sdkVersion\", sdkVersion);\n    if (!iframe || iframe.src !== hrefLink.href) {\n      // ! Do not update the hrefLink here or it'll cause multiple re-renders\n      if (!iframe) {\n        iframe = document.createElement(\"iframe\");\n        const mergedIframeStyles = {\n          ...iframeBaseStyle,\n          ...iframeStyles\n        };\n        Object.assign(iframe.style, mergedIframeStyles);\n        iframe.setAttribute(\"id\", iframeId);\n        iframe.setAttribute(\"fetchpriority\", \"high\");\n        container.appendChild(iframe);\n      }\n      iframe.src = hrefLink.href;\n      iframe.setAttribute(\"data-version\", sdkVersion);\n      const onIframeLoaded = event => {\n        if (event.data.eventType === \"ewsIframeLoaded\") {\n          window.removeEventListener(\"message\", onIframeLoaded);\n          if (!iframe) {\n            console.warn(\"thirdweb Iframe not found\");\n            return;\n          }\n          this.onIframeLoadHandler(iframe, onIframeInitialize)();\n        }\n      };\n      window.addEventListener(\"message\", onIframeLoaded);\n    }\n    this.iframe = iframe;\n  }\n  async onIframeLoadedInitVariables() {\n    return {};\n  }\n  onIframeLoadHandler(iframe, onIframeInitialize) {\n    return async () => {\n      const promise = new Promise(async (res, rej) => {\n        const channel = new MessageChannel();\n        channel.port1.onmessage = event => {\n          const {\n            data\n          } = event;\n          channel.port1.close();\n          if (!data.success) {\n            return rej(new Error(data.error));\n          }\n          isIframeLoaded.set(iframe.src, true);\n          if (onIframeInitialize) {\n            onIframeInitialize();\n          }\n          return res(true);\n        };\n        const INIT_IFRAME_EVENT = \"initIframe\";\n        iframe?.contentWindow?.postMessage(\n        // ? We initialise the iframe with a bunch\n        // of useful information so that we don't have to pass it\n        // through in each of the future call. This would be where we do it.\n        {\n          eventType: INIT_IFRAME_EVENT,\n          data: await this.onIframeLoadedInitVariables()\n        }, this.iframeBaseUrl, [channel.port2]);\n      });\n      await promise;\n    };\n  }\n  async call(_ref2) {\n    let {\n      procedureName,\n      params,\n      showIframe = false\n    } = _ref2;\n    while (!isIframeLoaded.get(this.iframe.src)) {\n      await sleep(this.POLLING_INTERVAL_SECONDS);\n    }\n    if (showIframe) {\n      this.iframe.style.display = \"block\";\n      // magic number to let the display render before performing the animation of the modal in\n      await sleep(0.005);\n    }\n    const promise = new Promise((res, rej) => {\n      const channel = new MessageChannel();\n      channel.port1.onmessage = async event => {\n        const {\n          data\n        } = event;\n        channel.port1.close();\n        if (showIframe) {\n          // magic number to let modal fade out before hiding it\n          await sleep(0.1);\n          this.iframe.style.display = \"none\";\n        }\n        if (!data.success) {\n          rej(new Error(data.error));\n        } else {\n          res(data.data);\n        }\n      };\n      this.iframe.contentWindow?.postMessage({\n        eventType: procedureName,\n        data: params\n      }, this.iframeBaseUrl, [channel.port2]);\n    });\n    return promise;\n  }\n\n  /**\n   * This has to be called by any iframe that will be removed from the DOM.\n   * Use to make sure that we reset the global loaded state of the particular iframe.src\n   */\n  destroy() {\n    isIframeLoaded.delete(this.iframe.src);\n  }\n}\n\nclass EmbeddedWalletIframeCommunicator extends IframeCommunicator {\n  constructor(_ref) {\n    let {\n      clientId,\n      customizationOptions\n    } = _ref;\n    super({\n      iframeId: EMBEDDED_WALLET_IFRAME_ID,\n      link: createEmbeddedWalletIframeLink({\n        clientId,\n        path: EMBEDDED_WALLET_PATH,\n        queryParams: customizationOptions\n      }).href,\n      container: document.body\n    });\n    this.clientId = clientId;\n  }\n  async onIframeLoadedInitVariables() {\n    const localStorage = new LocalStorage({\n      clientId: this.clientId\n    });\n    return {\n      authCookie: await localStorage.getAuthCookie(),\n      deviceShareStored: await localStorage.getDeviceShare(),\n      walletUserId: await localStorage.getWalletUserId(),\n      clientId: this.clientId\n    };\n  }\n}\n\n// This is the URL and ID tag of the iFrame that we communicate with\nfunction createEmbeddedWalletIframeLink(_ref2) {\n  let {\n    clientId,\n    path,\n    queryParams\n  } = _ref2;\n  const embeddedWalletUrl = new URL(`${path}`, GET_IFRAME_BASE_URL());\n  if (queryParams) {\n    for (const queryKey of Object.keys(queryParams)) {\n      embeddedWalletUrl.searchParams.set(queryKey, queryParams[queryKey]?.toString() || \"\");\n    }\n  }\n  embeddedWalletUrl.searchParams.set(\"clientId\", clientId);\n  return embeddedWalletUrl;\n}\nconst EMBEDDED_WALLET_IFRAME_ID = \"thirdweb-embedded-wallet-iframe\";\n\nclass AbstractLogin {\n  /**\n   * Used to manage the user's auth states. This should not be instantiated directly.\n   * Call {@link EmbeddedWalletSdk.auth} instead.\n   *\n   */\n  constructor(_ref) {\n    let {\n      querier,\n      preLogin,\n      postLogin,\n      clientId\n    } = _ref;\n    this.LoginQuerier = querier;\n    this.preLogin = preLogin;\n    this.postLogin = postLogin;\n    this.clientId = clientId;\n  }\n  async sendEmailLoginOtp(_ref2) {\n    let {\n      email\n    } = _ref2;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"sendThirdwebEmailLoginOtp\",\n      params: {\n        email\n      }\n    });\n    return result;\n  }\n  async sendSmsLoginOtp(_ref3) {\n    let {\n      phoneNumber\n    } = _ref3;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"sendThirdwebSmsLoginOtp\",\n      params: {\n        phoneNumber\n      }\n    });\n    return result;\n  }\n}\n\nclass BaseLogin extends AbstractLogin {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"closeWindow\", _ref => {\n      let {\n        isWindowOpenedByFn,\n        win,\n        closeOpenedWindow\n      } = _ref;\n      if (isWindowOpenedByFn) {\n        win?.close();\n      } else {\n        if (win && closeOpenedWindow) {\n          closeOpenedWindow(win);\n        } else if (win) {\n          win.close();\n        }\n      }\n    });\n  }\n  async getOauthLoginUrl(authProvider) {\n    const result = await this.LoginQuerier.call({\n      procedureName: \"getHeadlessOauthLoginLink\",\n      params: {\n        authProvider\n      }\n    });\n    return result;\n  }\n  async loginWithModal() {\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithThirdwebModal\",\n      params: undefined,\n      showIframe: true\n    });\n    return this.postLogin(result);\n  }\n  async loginWithEmailOtp(_ref2) {\n    let {\n      email\n    } = _ref2;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithThirdwebModal\",\n      params: {\n        email\n      },\n      showIframe: true\n    });\n    return this.postLogin(result);\n  }\n  getOauthPopUpSizing(authProvider) {\n    switch (authProvider) {\n      case AuthProvider.FACEBOOK:\n        return \"width=715, height=555\";\n      default:\n        return \"width=350, height=500\";\n    }\n  }\n  async loginWithOauth(args) {\n    let win = args?.openedWindow;\n    let isWindowOpenedByFn = false;\n    if (!win) {\n      win = window.open(\"\", \"Login\", this.getOauthPopUpSizing(args.oauthProvider));\n      isWindowOpenedByFn = true;\n    }\n    if (!win) {\n      throw new Error(\"Something went wrong opening pop-up\");\n    }\n    // logout the user\n    // fetch the url to open the login window from iframe\n    const [{\n      loginLink\n    }] = await Promise.all([this.getOauthLoginUrl(args.oauthProvider), this.preLogin()]);\n    win.location.href = loginLink;\n    // listen to result from the login window\n    const result = await new Promise((resolve, reject) => {\n      // detect when the user closes the login window\n      const pollTimer = window.setInterval(async () => {\n        if (!win) {\n          return;\n        }\n        if (win.closed) {\n          clearInterval(pollTimer);\n          window.removeEventListener(\"message\", messageListener);\n          reject(new Error(\"User closed login window\"));\n        }\n      }, 1000);\n      const messageListener = async event => {\n        if (event.origin !== GET_IFRAME_BASE_URL()) {\n          return;\n        }\n        if (typeof event.data !== \"object\") {\n          reject(new Error(\"Invalid event data\"));\n          return;\n        }\n        switch (event.data.eventType) {\n          case \"userLoginSuccess\":\n            {\n              window.removeEventListener(\"message\", messageListener);\n              clearInterval(pollTimer);\n              this.closeWindow({\n                isWindowOpenedByFn,\n                win,\n                closeOpenedWindow: args?.closeOpenedWindow\n              });\n              if (event.data.authResult) {\n                resolve(event.data.authResult);\n              }\n              break;\n            }\n          case \"userLoginFailed\":\n            {\n              window.removeEventListener(\"message\", messageListener);\n              clearInterval(pollTimer);\n              this.closeWindow({\n                isWindowOpenedByFn,\n                win,\n                closeOpenedWindow: args?.closeOpenedWindow\n              });\n              reject(new Error(event.data.error));\n              break;\n            }\n          case \"injectDeveloperClientId\":\n            {\n              win?.postMessage({\n                eventType: \"injectDeveloperClientIdResult\",\n                developerClientId: this.clientId,\n                authOption: args.oauthProvider\n              }, GET_IFRAME_BASE_URL());\n              break;\n            }\n        }\n      };\n      window.addEventListener(\"message\", messageListener);\n    });\n    return this.postLogin({\n      storedToken: {\n        ...result.storedToken,\n        shouldStoreCookieString: true\n      },\n      walletDetails: {\n        ...result.walletDetails,\n        isIframeStorageEnabled: false\n      }\n    });\n  }\n  async loginWithCustomJwt(_ref3) {\n    let {\n      encryptionKey,\n      jwt\n    } = _ref3;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithCustomJwt\",\n      params: {\n        encryptionKey,\n        jwt\n      }\n    });\n    return this.postLogin(result);\n  }\n  async loginWithCustomAuthEndpoint(_ref4) {\n    let {\n      encryptionKey,\n      payload\n    } = _ref4;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithCustomAuthEndpoint\",\n      params: {\n        encryptionKey,\n        payload\n      }\n    });\n    return this.postLogin(result);\n  }\n  async verifyEmailLoginOtp(_ref5) {\n    let {\n      email,\n      otp,\n      recoveryCode\n    } = _ref5;\n    const result = await this.LoginQuerier.call({\n      procedureName: \"verifyThirdwebEmailLoginOtp\",\n      params: {\n        email,\n        otp,\n        recoveryCode\n      }\n    });\n    return this.postLogin(result);\n  }\n  async verifySmsLoginOtp(_ref6) {\n    let {\n      phoneNumber,\n      otp,\n      recoveryCode\n    } = _ref6;\n    const result = await this.LoginQuerier.call({\n      procedureName: \"verifyThirdwebSmsLoginOtp\",\n      params: {\n        phoneNumber,\n        otp,\n        recoveryCode\n      }\n    });\n    return this.postLogin(result);\n  }\n}\n\nclass Auth {\n  /**\n   * Used to manage the user's auth states. This should not be instantiated directly.\n   * Call {@link EmbeddedWalletSdk.auth} instead.\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      querier,\n      onAuthSuccess\n    } = _ref;\n    this.clientId = clientId;\n    this.AuthQuerier = querier;\n    this.localStorage = new LocalStorage({\n      clientId\n    });\n    this.onAuthSuccess = onAuthSuccess;\n    this.BaseLogin = new BaseLogin({\n      postLogin: async result => {\n        return this.postLogin(result);\n      },\n      preLogin: async () => {\n        await this.preLogin();\n      },\n      querier: querier,\n      clientId\n    });\n  }\n  async preLogin() {\n    await this.logout();\n  }\n  async postLogin(_ref2) {\n    let {\n      storedToken,\n      walletDetails\n    } = _ref2;\n    if (storedToken.shouldStoreCookieString) {\n      await this.localStorage.saveAuthCookie(storedToken.cookieString);\n    }\n    const initializedUser = await this.onAuthSuccess({\n      storedToken,\n      walletDetails\n    });\n    return initializedUser;\n  }\n\n  /**\n   * Used to log the user into their thirdweb wallet on your platform via a myriad of auth providers\n   *\n   * @example\n   * ```typescript\n   * const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"YOUR_CLIENT_ID\", chain: \"Polygon\"})\n   * try {\n   *   const user = await thirdwebEmbeddedWallet.auth.loginWithModal();\n   *   // user is now logged in\n   * } catch (e) {\n   *   // User closed modal or something else went wrong during the authentication process\n   *   console.error(e)\n   * }\n   * ```\n   *\n   * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link EmbeddedWalletSdk.getUser} for more\n   */\n  async loginWithModal() {\n    return this.BaseLogin.loginWithModal();\n  }\n\n  /**\n   * Used to log the user into their thirdweb wallet using email OTP\n   *\n   * @example\n   * ```typescript\n   *  // Basic Flow\n   *  const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   *  try {\n   *    // prompts user to enter the code they received\n   *    const user = await thirdwebEmbeddedWallet.auth.loginWithThirdwebEmailOtp({ email : \"you@example.com\" });\n   *    // user is now logged in\n   *  } catch (e) {\n   *    // User closed the OTP modal or something else went wrong during the authentication process\n   *    console.error(e)\n   *  }\n   * ```\n   *\n   * @param args - args.email: We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link EmbeddedWalletSdk.getUser} for more\n   */\n  async loginWithEmailOtp(args) {\n    return this.BaseLogin.loginWithEmailOtp(args);\n  }\n  async loginWithCustomJwt(args) {\n    return this.BaseLogin.loginWithCustomJwt(args);\n  }\n  async loginWithCustomAuthEndpoint(args) {\n    return this.BaseLogin.loginWithCustomAuthEndpoint(args);\n  }\n  async loginWithOauth(args) {\n    return this.BaseLogin.loginWithOauth(args);\n  }\n\n  /**\n   * A headless way to send the users at the passed email an OTP code.\n   * You need to then call {@link Auth.verifyEmailLoginOtp} in order to complete the login process\n   *\n   * @example\n   * ```typescript\n   *  const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   *  // sends user an OTP code\n   * try {\n   *    await thirdwebEmbeddedWallet.auth.sendEmailLoginOtp({ email : \"you@example.com\" });\n   * } catch(e) {\n   *    // Error Sending user's email an OTP code\n   *    console.error(e);\n   * }\n   *\n   * // Then when your user is ready to verify their OTP\n   * try {\n   *    const user = await thirdwebEmbeddedWallet.auth.verifyEmailLoginOtp({ email: \"you@example.com\", otp: \"6-DIGIT_CODE_HERE\" });\n   * } catch(e) {\n   *    // Error verifying the OTP code\n   *    console.error(e)\n   * }\n   * ```\n   *\n   * @param param0 - param0.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * @returns `{{ isNewUser: boolean }}` IsNewUser indicates if the user is a new user to your platform\n   */\n  async sendEmailLoginOtp(_ref3) {\n    let {\n      email\n    } = _ref3;\n    return this.BaseLogin.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendSmsLoginOtp(_ref4) {\n    let {\n      phoneNumber\n    } = _ref4;\n    return this.BaseLogin.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n\n  /**\n   * Used to verify the otp that the user receives from thirdweb\n   *\n   * See {@link Auth.sendEmailLoginOtp} for how the headless call flow looks like. Simply swap out the calls to `loginWithThirdwebEmailOtp` with `verifyThirdwebEmailLoginOtp`\n   *\n   * @param args - props.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * props.otp The code that the user received in their email\n   * @returns `{{user: InitializedUser}}` An InitializedUser object containing the user's status, wallet, authDetails, and more\n   */\n  async verifyEmailLoginOtp(args) {\n    return this.BaseLogin.verifyEmailLoginOtp(args);\n  }\n  async verifySmsLoginOtp(args) {\n    return this.BaseLogin.verifySmsLoginOtp(args);\n  }\n\n  /**\n   * Logs any existing user out of their wallet.\n   * @returns `{{success: boolean}}` true if a user is successfully logged out. false if there's no user currently logged in.\n   */\n  async logout() {\n    const {\n      success\n    } = await this.AuthQuerier.call({\n      procedureName: \"logout\",\n      params: undefined\n    });\n    const isRemoveAuthCookie = await this.localStorage.removeAuthCookie();\n    const isRemoveUserId = await this.localStorage.removeWalletUserId();\n    return {\n      success: success || isRemoveAuthCookie || isRemoveUserId\n    };\n  }\n}\n\nclass EthersSigner extends Signer {\n  constructor(_ref) {\n    let {\n      provider,\n      clientId,\n      querier\n    } = _ref;\n    super();\n    _defineProperty(this, \"DEFAULT_ETHEREUM_CHAIN_ID\", 5);\n    this.clientId = clientId;\n    this.querier = querier;\n    // we try to extract a url if possible\n    this.endpoint = provider.connection?.url;\n    defineReadOnly(this, \"provider\", provider);\n  }\n  async getAddress() {\n    const {\n      address\n    } = await this.querier.call({\n      procedureName: \"getAddress\",\n      params: undefined\n    });\n    return address;\n  }\n  async signMessage(message) {\n    const {\n      signedMessage\n    } = await this.querier.call({\n      procedureName: \"signMessage\",\n      params: {\n        message,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedMessage;\n  }\n  async signTransaction(transaction) {\n    const {\n      signedTransaction\n    } = await this.querier.call({\n      procedureName: \"signTransaction\",\n      params: {\n        transaction,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedTransaction;\n  }\n  async sendTransaction(transaction) {\n    if (!this.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    const gas = await getDefaultGasOverrides(this.provider);\n    const txWithGas = {\n      ...gas,\n      ...transaction\n    };\n    return super.sendTransaction(txWithGas);\n  }\n  async _signTypedData(domain, types, message) {\n    const {\n      signedTypedData\n    } = await this.querier.call({\n      procedureName: \"signTypedDataV4\",\n      params: {\n        domain,\n        types,\n        message,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedTypedData;\n  }\n  connect(provider) {\n    return new EthersSigner({\n      clientId: this.clientId,\n      provider,\n      querier: this.querier\n    });\n  }\n}\n\nclass EmbeddedWallet {\n  /**\n   * Not meant to be initialized directly. Call {@link initializeUser} to get an instance\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      chain,\n      querier\n    } = _ref;\n    this.clientId = clientId;\n    this.chain = chain;\n    this.walletManagerQuerier = querier;\n    this.localStorage = new LocalStorage({\n      clientId\n    });\n  }\n\n  /**\n   * @internal\n   * Used to set-up the user device in the case that they are using incognito\n   * @returns `{walletAddress : string }` The user's wallet details\n   */\n  async postWalletSetUp(_ref2) {\n    let {\n      deviceShareStored,\n      walletAddress,\n      isIframeStorageEnabled,\n      walletUserId\n    } = _ref2;\n    if (!isIframeStorageEnabled) {\n      await this.localStorage.saveDeviceShare(deviceShareStored, walletUserId);\n    }\n    return {\n      walletAddress\n    };\n  }\n\n  /**\n   * @internal\n   * Gets the various status states of the user\n   * @example\n   * ```typescript\n   *  const userStatus = await Paper.getUserWalletStatus();\n   *  switch (userStatus.status) {\n   *  case UserWalletStatus.LOGGED_OUT: {\n   *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED: {\n   *    // User is logged in, but does not have a wallet associated with it\n   *    // you also have access to the user's details\n   *    userStatus.user.authDetails;\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_NEW_DEVICE: {\n   *    // User is logged in and created a wallet already, but is missing the device shard\n   *    // You have access to:\n   *    userStatus.user.authDetails;\n   *    userStatus.user.walletAddress;\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n   *    // user is logged in and wallet is all set up.\n   *    // You have access to:\n   *    userStatus.user.authDetails;\n   *    userStatus.user.walletAddress;\n   *    userStatus.user.wallet;\n   *    break;\n   *  }\n   *}\n   *```\n   * @returns `{GetUserWalletStatusFnReturnType}` an object to containing various information on the user statuses\n   */\n  async getUserWalletStatus() {\n    const userStatus = await this.walletManagerQuerier.call({\n      procedureName: \"getUserStatus\",\n      params: undefined\n    });\n    if (userStatus.status === UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n        ...userStatus.user,\n        wallet: this\n      };\n    } else if (userStatus.status === UserWalletStatus.LOGGED_IN_NEW_DEVICE) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n        ...userStatus.user\n      };\n    } else if (userStatus.status === UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n        ...userStatus.user\n      };\n    } else {\n      // Logged out\n      return {\n        status: userStatus.status\n      };\n    }\n  }\n\n  /**\n   * Switches the chain that the user wallet is currently on.\n   *\n   * @example\n   * ```typescript\n   * // user wallet will be set to Polygon\n   * const Paper = new ThirdwebEmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   * const user = await Paper.initializeUser();\n   * // Switch the user wallet to Mumbai\n   * await user.wallet.setChain({ chain: \"Mumbai\" });\n   * ```\n   * @param param0 - The chain that we are changing the user wallet too\n   */\n  async setChain(_ref3) {\n    let {\n      chain\n    } = _ref3;\n    this.chain = chain;\n  }\n\n  /**\n   * Returns an Ethers.Js compatible signer that you can use in conjunction with the rest of dApp\n   * @example\n   * ```typescript\n   * const Paper = new ThirdwebEmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   * const user = await Paper.getUser();\n   * if (user.status === UserStatus.LOGGED_IN_WALLET_INITIALIZED) {\n   *    // returns a signer on the Polygon mainnet\n   *    const signer = await user.getEthersJsSigner();\n   *    // returns a signer on the specified RPC endpoints\n   *    const signer = await user.getEthersJsSigner({rpcEndpoint: \"https://eth-rpc.gateway.pokt.network\"});\n   * }\n   * ```\n   * @param network - object with the rpc url where calls will be routed through\n   * @throws If attempting to call the function without the user wallet initialize on their current device. This should never happen if call {@link ThirdwebEmbeddedWalletSdk.initializeUser} before accessing this function\n   * @returns A signer that is compatible with Ether.js. Defaults to the public rpc on the chain specified when initializing the {@link ThirdwebEmbeddedWalletSdk} instance\n   */\n  async getEthersJsSigner(network) {\n    const signer = new EthersSigner({\n      clientId: this.clientId,\n      provider: getDefaultProvider(network?.rpcEndpoint ?? ChainToPublicRpc[this.chain]),\n      querier: this.walletManagerQuerier\n    });\n    return signer;\n  }\n}\n\nclass EmbeddedWalletSdk {\n  /**\n   * Used to manage the Auth state of the user.\n   */\n\n  isClientIdLegacyPaper(clientId) {\n    if (clientId.indexOf(\"-\") > 0 && clientId.length === 36) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @example\n   * `const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({ clientId: \"\", chain: \"Goerli\" });`\n   * @param param0 - EmbeddedWalletConstructorType\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      chain,\n      styles,\n      onAuthSuccess\n    } = _ref;\n    if (this.isClientIdLegacyPaper(clientId)) {\n      throw new Error(\"You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page\");\n    }\n    this.clientId = clientId;\n    this.querier = new EmbeddedWalletIframeCommunicator({\n      clientId,\n      customizationOptions: styles\n    });\n    this.wallet = new EmbeddedWallet({\n      clientId,\n      chain,\n      querier: this.querier\n    });\n    this.auth = new Auth({\n      clientId,\n      querier: this.querier,\n      onAuthSuccess: async authResult => {\n        onAuthSuccess?.(authResult);\n        await this.wallet.postWalletSetUp({\n          ...authResult.walletDetails,\n          walletUserId: authResult.storedToken.authDetails.userWalletId\n        });\n        await this.querier.call({\n          procedureName: \"initIframe\",\n          params: {\n            deviceShareStored: authResult.walletDetails.deviceShareStored,\n            clientId: this.clientId,\n            walletUserId: authResult.storedToken.authDetails.userWalletId,\n            authCookie: authResult.storedToken.cookieString\n          }\n        });\n        return {\n          user: {\n            status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n            authDetails: authResult.storedToken.authDetails,\n            wallet: this.wallet,\n            walletAddress: authResult.walletDetails.walletAddress\n          }\n        };\n      }\n    });\n  }\n\n  /**\n   * Gets the usr if they are logged in\n   * @example\n   * ```js\n   *  const user = await thirdwebEmbeddedWallet.getUser();\n   *  switch (user.status) {\n   *     case UserWalletStatus.LOGGED_OUT: {\n   *       // User is logged out, call one of the auth methods on thirdwebEmbeddedWallet.auth to authenticate the user\n   *       break;\n   *     }\n   *     case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n   *       // user is logged in and wallet is all set up.\n   *       // You have access to:\n   *       user.status;\n   *       user.authDetails;\n   *       user.walletAddress;\n   *       user.wallet;\n   *       break;\n   *     }\n   * }\n   * ```\n   * @returns GetUser - an object to containing various information on the user statuses\n   */\n  async getUser() {\n    return this.wallet.getUserWalletStatus();\n  }\n}\n\nexport { AUTH_TOKEN_LOCAL_STORAGE_NAME as A, DEVICE_SHARE_LOCAL_STORAGE_NAME as D, EmbeddedWalletSdk as E, RecoveryShareManagement as R, UserWalletStatus as U, WALLET_USER_DETAILS_LOCAL_STORAGE_NAME as W, DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED as a, WALLET_USER_ID_LOCAL_STORAGE_NAME as b, AuthProvider as c };\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAEA;;CAEC,GACD,MAAM,uBAAuB;AAC7B;;CAEC,GACD,MAAM,sBAAsB;IAC1B,IAAI,CAAC,CAAC,CAAC,aAAa,OAAO,CAAC,uBAAuB,MAAM,GAAG;QAC1D,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC,uBAAuB;IAC5D;IACA,OAAO,CAAC,oCAAoC,CAAC;AAC/C;AACA;;CAEC,GACD,MAAM,yCAAyC,CAAA,WAAY,CAAC,6BAA6B,EAAE,UAAU;AAErG;;CAEC,GACD,MAAM,oCAAoC,CAAA,WAAY,CAAC,wBAAwB,EAAE,UAAU;AAE3F;;CAEC,GACD,MAAM,kCAAkC;AAExC;;CAEC,GACD,MAAM,gCAAgC,CAAA;IACpC,OAAO,GAAG,gCAAgC,CAAC,EAAE,UAAU;AACzD;AAEA;;CAEC,GACD,MAAM,oCAAoC;AAE1C;;CAEC,GACD,MAAM,kCAAkC,CAAC,UAAU,SAAW,GAAG,kCAAkC,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ;AAE1H;;CAEC,GACD,MAAM,6CAA6C,CAAA,WAAY,GAAG,kCAAkC,CAAC,EAAE,UAAU;AAEjH,IAAI,0BAA0B,WAAW,GAAE,SAAU,uBAAuB;IAC1E,uBAAuB,CAAC,eAAe,GAAG;IAC1C,uBAAuB,CAAC,gBAAgB,GAAG;IAC3C,OAAO;AACT,EAAE,CAAC;AACH,IAAI,eAAe,WAAW,GAAE,SAAU,YAAY;IACpD,YAAY,CAAC,UAAU,GAAG;IAC1B,YAAY,CAAC,SAAS,GAAG;IACzB,YAAY,CAAC,YAAY,GAAG;IAC5B,YAAY,CAAC,aAAa,GAAG;IAC7B,YAAY,CAAC,uBAAuB,GAAG;IACvC,YAAY,CAAC,WAAW,GAAG;IAC3B,YAAY,CAAC,QAAQ,GAAG;IACxB,YAAY,CAAC,UAAU,GAAG;IAC1B,YAAY,CAAC,kBAAkB,GAAG;IAClC,YAAY,CAAC,UAAU,GAAG;IAC1B,OAAO;AACT,EAAE,CAAC;AAEH;;CAEC,GAED,kDAAkD;AAClD,kGAAkG;AAElG,0BAA0B;AAC1B,+DAA+D;AAC/D,iFAAiF;AAEjF,aAAa;AAEb,wBAAwB;AACxB,IAAI,mBAAmB,WAAW,GAAE,SAAU,gBAAgB;IAC5D,gBAAgB,CAAC,aAAa,GAAG;IACjC,gBAAgB,CAAC,iCAAiC,GAAG;IACrD,gBAAgB,CAAC,uBAAuB,GAAG;IAC3C,gBAAgB,CAAC,+BAA+B,GAAG;IACnD,OAAO;AACT,EAAE,CAAC;AAEH;;CAEC,GAED,yEAAyE;AACzE,+FAA+F;AAE/F,mFAAmF;AAEnF,MAAM,OAAO,IAAI;AACjB,MAAM;IACJ,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACT,GAAG;QACJ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,OAAO,YAAY;QACxC,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,MAAM,QAAQ,GAAG,EAAE;QACjB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC;QACrC,OAAO;YACL,OAAO,KAAK,GAAG,CAAC,QAAQ;QAC1B;IACF;IACA,MAAM,QAAQ,GAAG,EAAE,KAAK,EAAE;QACxB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK;QAC1C,OAAO;YACL,KAAK,GAAG,CAAC,KAAK;QAChB;IACF;IACA,MAAM,WAAW,GAAG,EAAE;QACpB,MAAM,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC;QAChC,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM;YAC5B,OAAO,YAAY,CAAC,UAAU,CAAC;YAC/B,OAAO;QACT;QACA,OAAO;IACT;IACA,MAAM,eAAe,MAAM,EAAE;QAC3B,MAAM,IAAI,CAAC,OAAO,CAAC,8BAA8B,IAAI,CAAC,QAAQ,GAAG;IACnE;IACA,MAAM,gBAAgB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,8BAA8B,IAAI,CAAC,QAAQ;IACjE;IACA,MAAM,mBAAmB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,8BAA8B,IAAI,CAAC,QAAQ;IACpE;IACA,MAAM,gBAAgB,KAAK,EAAE,MAAM,EAAE;QACnC,MAAM,IAAI,CAAC,gBAAgB,CAAC;QAC5B,MAAM,IAAI,CAAC,OAAO,CAAC,gCAAgC,IAAI,CAAC,QAAQ,EAAE,SAAS;IAC7E;IACA,MAAM,iBAAiB;QACrB,MAAM,SAAS,MAAM,IAAI,CAAC,eAAe;QACzC,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,OAAO,CAAC,gCAAgC,IAAI,CAAC,QAAQ,EAAE;QACrE;QACA,OAAO;IACT;IACA,MAAM,oBAAoB;QACxB,MAAM,SAAS,MAAM,IAAI,CAAC,eAAe;QACzC,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,UAAU,CAAC,gCAAgC,IAAI,CAAC,QAAQ,EAAE;QACxE;QACA,OAAO;IACT;IACA,MAAM,kBAAkB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,kCAAkC,IAAI,CAAC,QAAQ;IACrE;IACA,MAAM,iBAAiB,MAAM,EAAE;QAC7B,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,IAAI,CAAC,QAAQ,GAAG;IACvE;IACA,MAAM,qBAAqB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,kCAAkC,IAAI,CAAC,QAAQ;IACxE;AACF;AAEA,SAAS,MAAM,OAAO;IACpB,OAAO,IAAI,QAAQ,CAAA;QACjB,WAAW,SAAS,UAAU;IAChC;AACF;AACA,MAAM,kBAAkB;IACtB,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,iBAAiB;IACjB,aAAa;IACb,UAAU;IACV,KAAK;IACL,OAAO;IACP,QAAQ;IACR,SAAS;AACX;AAEA,wCAAwC;AACxC,MAAM,iBAAiB,IAAI;AAC3B,MAAM;IACJ,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,IAAI,EACJ,QAAQ,EACR,YAAY,SAAS,IAAI,EACzB,YAAY,EACZ,kBAAkB,EACnB,GAAG;QACJ,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,4BAA4B;QAClD,IAAI,CAAC,aAAa,GAAG;QAErB,gDAAgD;QAChD,IAAI,SAAS,SAAS,cAAc,CAAC;QACrC,MAAM,WAAW,IAAI,IAAI;QACzB,MAAM,aAAa;QACnB,SAAS,YAAY,CAAC,GAAG,CAAC,cAAc;QACxC,IAAI,CAAC,UAAU,OAAO,GAAG,KAAK,SAAS,IAAI,EAAE;YAC3C,uEAAuE;YACvE,IAAI,CAAC,QAAQ;gBACX,SAAS,SAAS,aAAa,CAAC;gBAChC,MAAM,qBAAqB;oBACzB,GAAG,eAAe;oBAClB,GAAG,YAAY;gBACjB;gBACA,OAAO,MAAM,CAAC,OAAO,KAAK,EAAE;gBAC5B,OAAO,YAAY,CAAC,MAAM;gBAC1B,OAAO,YAAY,CAAC,iBAAiB;gBACrC,UAAU,WAAW,CAAC;YACxB;YACA,OAAO,GAAG,GAAG,SAAS,IAAI;YAC1B,OAAO,YAAY,CAAC,gBAAgB;YACpC,MAAM,iBAAiB,CAAA;gBACrB,IAAI,MAAM,IAAI,CAAC,SAAS,KAAK,mBAAmB;oBAC9C,OAAO,mBAAmB,CAAC,WAAW;oBACtC,IAAI,CAAC,QAAQ;wBACX,QAAQ,IAAI,CAAC;wBACb;oBACF;oBACA,IAAI,CAAC,mBAAmB,CAAC,QAAQ;gBACnC;YACF;YACA,OAAO,gBAAgB,CAAC,WAAW;QACrC;QACA,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,MAAM,8BAA8B;QAClC,OAAO,CAAC;IACV;IACA,oBAAoB,MAAM,EAAE,kBAAkB,EAAE;QAC9C,OAAO;YACL,MAAM,UAAU,IAAI,QAAQ,OAAO,KAAK;gBACtC,MAAM,UAAU,IAAI;gBACpB,QAAQ,KAAK,CAAC,SAAS,GAAG,CAAA;oBACxB,MAAM,EACJ,IAAI,EACL,GAAG;oBACJ,QAAQ,KAAK,CAAC,KAAK;oBACnB,IAAI,CAAC,KAAK,OAAO,EAAE;wBACjB,OAAO,IAAI,IAAI,MAAM,KAAK,KAAK;oBACjC;oBACA,eAAe,GAAG,CAAC,OAAO,GAAG,EAAE;oBAC/B,IAAI,oBAAoB;wBACtB;oBACF;oBACA,OAAO,IAAI;gBACb;gBACA,MAAM,oBAAoB;gBAC1B,QAAQ,eAAe,YACvB,0CAA0C;gBAC1C,yDAAyD;gBACzD,oEAAoE;gBACpE;oBACE,WAAW;oBACX,MAAM,MAAM,IAAI,CAAC,2BAA2B;gBAC9C,GAAG,IAAI,CAAC,aAAa,EAAE;oBAAC,QAAQ,KAAK;iBAAC;YACxC;YACA,MAAM;QACR;IACF;IACA,MAAM,KAAK,KAAK,EAAE;QAChB,IAAI,EACF,aAAa,EACb,MAAM,EACN,aAAa,KAAK,EACnB,GAAG;QACJ,MAAO,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAG;YAC3C,MAAM,MAAM,IAAI,CAAC,wBAAwB;QAC3C;QACA,IAAI,YAAY;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;YAC5B,yFAAyF;YACzF,MAAM,MAAM;QACd;QACA,MAAM,UAAU,IAAI,QAAQ,CAAC,KAAK;YAChC,MAAM,UAAU,IAAI;YACpB,QAAQ,KAAK,CAAC,SAAS,GAAG,OAAM;gBAC9B,MAAM,EACJ,IAAI,EACL,GAAG;gBACJ,QAAQ,KAAK,CAAC,KAAK;gBACnB,IAAI,YAAY;oBACd,sDAAsD;oBACtD,MAAM,MAAM;oBACZ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;gBAC9B;gBACA,IAAI,CAAC,KAAK,OAAO,EAAE;oBACjB,IAAI,IAAI,MAAM,KAAK,KAAK;gBAC1B,OAAO;oBACL,IAAI,KAAK,IAAI;gBACf;YACF;YACA,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY;gBACrC,WAAW;gBACX,MAAM;YACR,GAAG,IAAI,CAAC,aAAa,EAAE;gBAAC,QAAQ,KAAK;aAAC;QACxC;QACA,OAAO;IACT;IAEA;;;GAGC,GACD,UAAU;QACR,eAAe,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;IACvC;AACF;AAEA,MAAM,yCAAyC;IAC7C,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACR,oBAAoB,EACrB,GAAG;QACJ,KAAK,CAAC;YACJ,UAAU;YACV,MAAM,+BAA+B;gBACnC;gBACA,MAAM;gBACN,aAAa;YACf,GAAG,IAAI;YACP,WAAW,SAAS,IAAI;QAC1B;QACA,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,MAAM,8BAA8B;QAClC,MAAM,gBAAe,IAAI,aAAa;YACpC,UAAU,IAAI,CAAC,QAAQ;QACzB;QACA,OAAO;YACL,YAAY,MAAM,cAAa,aAAa;YAC5C,mBAAmB,MAAM,cAAa,cAAc;YACpD,cAAc,MAAM,cAAa,eAAe;YAChD,UAAU,IAAI,CAAC,QAAQ;QACzB;IACF;AACF;AAEA,oEAAoE;AACpE,SAAS,+BAA+B,KAAK;IAC3C,IAAI,EACF,QAAQ,EACR,IAAI,EACJ,WAAW,EACZ,GAAG;IACJ,MAAM,oBAAoB,IAAI,IAAI,GAAG,MAAM,EAAE;IAC7C,IAAI,aAAa;QACf,KAAK,MAAM,YAAY,OAAO,IAAI,CAAC,aAAc;YAC/C,kBAAkB,YAAY,CAAC,GAAG,CAAC,UAAU,WAAW,CAAC,SAAS,EAAE,cAAc;QACpF;IACF;IACA,kBAAkB,YAAY,CAAC,GAAG,CAAC,YAAY;IAC/C,OAAO;AACT;AACA,MAAM,4BAA4B;AAElC,MAAM;IACJ;;;;GAIC,GACD,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,OAAO,EACP,QAAQ,EACR,SAAS,EACT,QAAQ,EACT,GAAG;QACJ,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,MAAM,kBAAkB,KAAK,EAAE;QAC7B,IAAI,EACF,KAAK,EACN,GAAG;QACJ,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;YACF;QACF;QACA,OAAO;IACT;IACA,MAAM,gBAAgB,KAAK,EAAE;QAC3B,IAAI,EACF,WAAW,EACZ,GAAG;QACJ,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;YACF;QACF;QACA,OAAO;IACT;AACF;AAEA,MAAM,kBAAkB;IACtB,aAAc;QACZ,KAAK,IAAI;QACT,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,eAAe,CAAA;YACnC,IAAI,EACF,kBAAkB,EAClB,GAAG,EACH,iBAAiB,EAClB,GAAG;YACJ,IAAI,oBAAoB;gBACtB,KAAK;YACP,OAAO;gBACL,IAAI,OAAO,mBAAmB;oBAC5B,kBAAkB;gBACpB,OAAO,IAAI,KAAK;oBACd,IAAI,KAAK;gBACX;YACF;QACF;IACF;IACA,MAAM,iBAAiB,YAAY,EAAE;QACnC,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;YACF;QACF;QACA,OAAO;IACT;IACA,MAAM,iBAAiB;QACrB,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;YACR,YAAY;QACd;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IACA,MAAM,kBAAkB,KAAK,EAAE;QAC7B,IAAI,EACF,KAAK,EACN,GAAG;QACJ,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;YACF;YACA,YAAY;QACd;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IACA,oBAAoB,YAAY,EAAE;QAChC,OAAQ;YACN,KAAK,aAAa,QAAQ;gBACxB,OAAO;YACT;gBACE,OAAO;QACX;IACF;IACA,MAAM,eAAe,IAAI,EAAE;QACzB,IAAI,MAAM,MAAM;QAChB,IAAI,qBAAqB;QACzB,IAAI,CAAC,KAAK;YACR,MAAM,OAAO,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,mBAAmB,CAAC,KAAK,aAAa;YAC1E,qBAAqB;QACvB;QACA,IAAI,CAAC,KAAK;YACR,MAAM,IAAI,MAAM;QAClB;QACA,kBAAkB;QAClB,qDAAqD;QACrD,MAAM,CAAC,EACL,SAAS,EACV,CAAC,GAAG,MAAM,QAAQ,GAAG,CAAC;YAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,aAAa;YAAG,IAAI,CAAC,QAAQ;SAAG;QACnF,IAAI,QAAQ,CAAC,IAAI,GAAG;QACpB,yCAAyC;QACzC,MAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS;YACzC,+CAA+C;YAC/C,MAAM,YAAY,OAAO,WAAW,CAAC;gBACnC,IAAI,CAAC,KAAK;oBACR;gBACF;gBACA,IAAI,IAAI,MAAM,EAAE;oBACd,cAAc;oBACd,OAAO,mBAAmB,CAAC,WAAW;oBACtC,OAAO,IAAI,MAAM;gBACnB;YACF,GAAG;YACH,MAAM,kBAAkB,OAAM;gBAC5B,IAAI,MAAM,MAAM,KAAK,uBAAuB;oBAC1C;gBACF;gBACA,IAAI,OAAO,MAAM,IAAI,KAAK,UAAU;oBAClC,OAAO,IAAI,MAAM;oBACjB;gBACF;gBACA,OAAQ,MAAM,IAAI,CAAC,SAAS;oBAC1B,KAAK;wBACH;4BACE,OAAO,mBAAmB,CAAC,WAAW;4BACtC,cAAc;4BACd,IAAI,CAAC,WAAW,CAAC;gCACf;gCACA;gCACA,mBAAmB,MAAM;4BAC3B;4BACA,IAAI,MAAM,IAAI,CAAC,UAAU,EAAE;gCACzB,QAAQ,MAAM,IAAI,CAAC,UAAU;4BAC/B;4BACA;wBACF;oBACF,KAAK;wBACH;4BACE,OAAO,mBAAmB,CAAC,WAAW;4BACtC,cAAc;4BACd,IAAI,CAAC,WAAW,CAAC;gCACf;gCACA;gCACA,mBAAmB,MAAM;4BAC3B;4BACA,OAAO,IAAI,MAAM,MAAM,IAAI,CAAC,KAAK;4BACjC;wBACF;oBACF,KAAK;wBACH;4BACE,KAAK,YAAY;gCACf,WAAW;gCACX,mBAAmB,IAAI,CAAC,QAAQ;gCAChC,YAAY,KAAK,aAAa;4BAChC,GAAG;4BACH;wBACF;gBACJ;YACF;YACA,OAAO,gBAAgB,CAAC,WAAW;QACrC;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,aAAa;gBACX,GAAG,OAAO,WAAW;gBACrB,yBAAyB;YAC3B;YACA,eAAe;gBACb,GAAG,OAAO,aAAa;gBACvB,wBAAwB;YAC1B;QACF;IACF;IACA,MAAM,mBAAmB,KAAK,EAAE;QAC9B,IAAI,EACF,aAAa,EACb,GAAG,EACJ,GAAG;QACJ,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;gBACA;YACF;QACF;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IACA,MAAM,4BAA4B,KAAK,EAAE;QACvC,IAAI,EACF,aAAa,EACb,OAAO,EACR,GAAG;QACJ,MAAM,IAAI,CAAC,QAAQ;QACnB,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;gBACA;YACF;QACF;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IACA,MAAM,oBAAoB,KAAK,EAAE;QAC/B,IAAI,EACF,KAAK,EACL,GAAG,EACH,YAAY,EACb,GAAG;QACJ,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;gBACA;gBACA;YACF;QACF;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IACA,MAAM,kBAAkB,KAAK,EAAE;QAC7B,IAAI,EACF,WAAW,EACX,GAAG,EACH,YAAY,EACb,GAAG;QACJ,MAAM,SAAS,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC1C,eAAe;YACf,QAAQ;gBACN;gBACA;gBACA;YACF;QACF;QACA,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;AACF;AAEA,MAAM;IACJ;;;GAGC,GACD,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACR,OAAO,EACP,aAAa,EACd,GAAG;QACJ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,aAAa;YACnC;QACF;QACA,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU;YAC7B,WAAW,OAAM;gBACf,OAAO,IAAI,CAAC,SAAS,CAAC;YACxB;YACA,UAAU;gBACR,MAAM,IAAI,CAAC,QAAQ;YACrB;YACA,SAAS;YACT;QACF;IACF;IACA,MAAM,WAAW;QACf,MAAM,IAAI,CAAC,MAAM;IACnB;IACA,MAAM,UAAU,KAAK,EAAE;QACrB,IAAI,EACF,WAAW,EACX,aAAa,EACd,GAAG;QACJ,IAAI,YAAY,uBAAuB,EAAE;YACvC,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,YAAY;QACjE;QACA,MAAM,kBAAkB,MAAM,IAAI,CAAC,aAAa,CAAC;YAC/C;YACA;QACF;QACA,OAAO;IACT;IAEA;;;;;;;;;;;;;;;;GAgBC,GACD,MAAM,iBAAiB;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc;IACtC;IAEA;;;;;;;;;;;;;;;;;;;GAmBC,GACD,MAAM,kBAAkB,IAAI,EAAE;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAC1C;IACA,MAAM,mBAAmB,IAAI,EAAE;QAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;IAC3C;IACA,MAAM,4BAA4B,IAAI,EAAE;QACtC,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC;IACpD;IACA,MAAM,eAAe,IAAI,EAAE;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;IACvC;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BC,GACD,MAAM,kBAAkB,KAAK,EAAE;QAC7B,IAAI,EACF,KAAK,EACN,GAAG;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;YACtC;QACF;IACF;IACA,MAAM,gBAAgB,KAAK,EAAE;QAC3B,IAAI,EACF,WAAW,EACZ,GAAG;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;YACpC;QACF;IACF;IAEA;;;;;;;;GAQC,GACD,MAAM,oBAAoB,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC5C;IACA,MAAM,kBAAkB,IAAI,EAAE;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAC1C;IAEA;;;GAGC,GACD,MAAM,SAAS;QACb,MAAM,EACJ,OAAO,EACR,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC9B,eAAe;YACf,QAAQ;QACV;QACA,MAAM,qBAAqB,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB;QACnE,MAAM,iBAAiB,MAAM,IAAI,CAAC,YAAY,CAAC,kBAAkB;QACjE,OAAO;YACL,SAAS,WAAW,sBAAsB;QAC5C;IACF;AACF;AAEA,MAAM,qBAAqB,+KAAA,CAAA,SAAM;IAC/B,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACR,QAAQ,EACR,OAAO,EACR,GAAG;QACJ,KAAK;QACL,CAAA,GAAA,uMAAA,CAAA,IAAe,AAAD,EAAE,IAAI,EAAE,6BAA6B;QACnD,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,sCAAsC;QACtC,IAAI,CAAC,QAAQ,GAAG,SAAS,UAAU,EAAE;QACrC,CAAA,GAAA,yIAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,EAAE,YAAY;IACnC;IACA,MAAM,aAAa;QACjB,MAAM,EACJ,OAAO,EACR,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC1B,eAAe;YACf,QAAQ;QACV;QACA,OAAO;IACT;IACA,MAAM,YAAY,OAAO,EAAE;QACzB,MAAM,EACJ,aAAa,EACd,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC1B,eAAe;YACf,QAAQ;gBACN;gBACA,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,YAAY,GAAG,WAAW,IAAI,CAAC,yBAAyB;gBACvF,aAAa,IAAI,CAAC,QAAQ;YAC5B;QACF;QACA,OAAO;IACT;IACA,MAAM,gBAAgB,WAAW,EAAE;QACjC,MAAM,EACJ,iBAAiB,EAClB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC1B,eAAe;YACf,QAAQ;gBACN;gBACA,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,YAAY,GAAG,WAAW,IAAI,CAAC,yBAAyB;gBACvF,aAAa,IAAI,CAAC,QAAQ;YAC5B;QACF;QACA,OAAO;IACT;IACA,MAAM,gBAAgB,WAAW,EAAE;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,MAAM,MAAM,CAAA,GAAA,gPAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI,CAAC,QAAQ;QACtD,MAAM,YAAY;YAChB,GAAG,GAAG;YACN,GAAG,WAAW;QAChB;QACA,OAAO,KAAK,CAAC,gBAAgB;IAC/B;IACA,MAAM,eAAe,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE;QAC3C,MAAM,EACJ,eAAe,EAChB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC1B,eAAe;YACf,QAAQ;gBACN;gBACA;gBACA;gBACA,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,YAAY,GAAG,WAAW,IAAI,CAAC,yBAAyB;gBACvF,aAAa,IAAI,CAAC,QAAQ;YAC5B;QACF;QACA,OAAO;IACT;IACA,QAAQ,QAAQ,EAAE;QAChB,OAAO,IAAI,aAAa;YACtB,UAAU,IAAI,CAAC,QAAQ;YACvB;YACA,SAAS,IAAI,CAAC,OAAO;QACvB;IACF;AACF;AAEA,MAAM;IACJ;;GAEC,GACD,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACR,KAAK,EACL,OAAO,EACR,GAAG;QACJ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,aAAa;YACnC;QACF;IACF;IAEA;;;;GAIC,GACD,MAAM,gBAAgB,KAAK,EAAE;QAC3B,IAAI,EACF,iBAAiB,EACjB,aAAa,EACb,sBAAsB,EACtB,YAAY,EACb,GAAG;QACJ,IAAI,CAAC,wBAAwB;YAC3B,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,mBAAmB;QAC7D;QACA,OAAO;YACL;QACF;IACF;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCC,GACD,MAAM,sBAAsB;QAC1B,MAAM,aAAa,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YACtD,eAAe;YACf,QAAQ;QACV;QACA,IAAI,WAAW,MAAM,KAAK,iBAAiB,4BAA4B,EAAE;YACvE,OAAO;gBACL,QAAQ,iBAAiB,4BAA4B;gBACrD,GAAG,WAAW,IAAI;gBAClB,QAAQ,IAAI;YACd;QACF,OAAO,IAAI,WAAW,MAAM,KAAK,iBAAiB,oBAAoB,EAAE;YACtE,OAAO;gBACL,QAAQ,iBAAiB,8BAA8B;gBACvD,GAAG,WAAW,IAAI;YACpB;QACF,OAAO,IAAI,WAAW,MAAM,KAAK,iBAAiB,8BAA8B,EAAE;YAChF,OAAO;gBACL,QAAQ,iBAAiB,8BAA8B;gBACvD,GAAG,WAAW,IAAI;YACpB;QACF,OAAO;YACL,aAAa;YACb,OAAO;gBACL,QAAQ,WAAW,MAAM;YAC3B;QACF;IACF;IAEA;;;;;;;;;;;;GAYC,GACD,MAAM,SAAS,KAAK,EAAE;QACpB,IAAI,EACF,KAAK,EACN,GAAG;QACJ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;;;;;;;;;;;;;;;GAgBC,GACD,MAAM,kBAAkB,OAAO,EAAE;QAC/B,MAAM,SAAS,IAAI,aAAa;YAC9B,UAAU,IAAI,CAAC,QAAQ;YACvB,UAAU,CAAA,GAAA,sLAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,eAAe,6KAAA,CAAA,mBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;YACjF,SAAS,IAAI,CAAC,oBAAoB;QACpC;QACA,OAAO;IACT;AACF;AAEA,MAAM;IACJ;;GAEC,GAED,sBAAsB,QAAQ,EAAE;QAC9B,IAAI,SAAS,OAAO,CAAC,OAAO,KAAK,SAAS,MAAM,KAAK,IAAI;YACvD,OAAO;QACT,OAAO;YACL,OAAO;QACT;IACF;IAEA;;;;GAIC,GACD,YAAY,IAAI,CAAE;QAChB,IAAI,EACF,QAAQ,EACR,KAAK,EACL,MAAM,EACN,aAAa,EACd,GAAG;QACJ,IAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW;YACxC,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,iCAAiC;YAClD;YACA,sBAAsB;QACxB;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,eAAe;YAC/B;YACA;YACA,SAAS,IAAI,CAAC,OAAO;QACvB;QACA,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK;YACnB;YACA,SAAS,IAAI,CAAC,OAAO;YACrB,eAAe,OAAM;gBACnB,gBAAgB;gBAChB,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;oBAChC,GAAG,WAAW,aAAa;oBAC3B,cAAc,WAAW,WAAW,CAAC,WAAW,CAAC,YAAY;gBAC/D;gBACA,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACtB,eAAe;oBACf,QAAQ;wBACN,mBAAmB,WAAW,aAAa,CAAC,iBAAiB;wBAC7D,UAAU,IAAI,CAAC,QAAQ;wBACvB,cAAc,WAAW,WAAW,CAAC,WAAW,CAAC,YAAY;wBAC7D,YAAY,WAAW,WAAW,CAAC,YAAY;oBACjD;gBACF;gBACA,OAAO;oBACL,MAAM;wBACJ,QAAQ,iBAAiB,4BAA4B;wBACrD,aAAa,WAAW,WAAW,CAAC,WAAW;wBAC/C,QAAQ,IAAI,CAAC,MAAM;wBACnB,eAAe,WAAW,aAAa,CAAC,aAAa;oBACvD;gBACF;YACF;QACF;IACF;IAEA;;;;;;;;;;;;;;;;;;;;;;GAsBC,GACD,MAAM,UAAU;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,mBAAmB;IACxC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ray%20Stuff/NUS/Y3Summer/Projects/Never-Forgotten-Token/never-forgotten-nft/node_modules/%40thirdweb-dev/wallets/dist/supported-sms-countries-22d21e1d.browser.esm.js"],"sourcesContent":["const supportedSmsCountries = [{\n  countryIsoCode: \"AD\",\n  countryName: \"Andorra\",\n  phoneNumberCode: \"376\"\n}, {\n  countryIsoCode: \"AE\",\n  countryName: \"United Arab Emirates\",\n  phoneNumberCode: \"971\"\n}, {\n  countryIsoCode: \"AF\",\n  countryName: \"Afghanistan\",\n  phoneNumberCode: \"93\"\n}, {\n  countryIsoCode: \"AG\",\n  countryName: \"Antigua and Barbuda\",\n  phoneNumberCode: \"1268\"\n}, {\n  countryIsoCode: \"AI\",\n  countryName: \"Anguilla\",\n  phoneNumberCode: \"1264\"\n}, {\n  countryIsoCode: \"AL\",\n  countryName: \"Albania\",\n  phoneNumberCode: \"355\"\n}, {\n  countryIsoCode: \"AM\",\n  countryName: \"Armenia\",\n  phoneNumberCode: \"374\"\n}, {\n  countryIsoCode: \"AN\",\n  countryName: \"Netherlands Antilles\",\n  phoneNumberCode: \"599\"\n}, {\n  countryIsoCode: \"AO\",\n  countryName: \"Angola\",\n  phoneNumberCode: \"244\"\n}, {\n  countryIsoCode: \"AQ\",\n  countryName: \"Antarctica\",\n  phoneNumberCode: \"672\"\n}, {\n  countryIsoCode: \"AR\",\n  countryName: \"Argentina\",\n  phoneNumberCode: \"54\"\n}, {\n  countryIsoCode: \"AS\",\n  countryName: \"American Samoa\",\n  phoneNumberCode: \"1684\"\n}, {\n  countryIsoCode: \"AT\",\n  countryName: \"Austria\",\n  phoneNumberCode: \"43\"\n}, {\n  countryIsoCode: \"AU\",\n  countryName: \"Australia\",\n  phoneNumberCode: \"61\"\n}, {\n  countryIsoCode: \"AW\",\n  countryName: \"Aruba\",\n  phoneNumberCode: \"297\"\n}, {\n  countryIsoCode: \"AX\",\n  countryName: \"Aland Islands\",\n  phoneNumberCode: \"35818\"\n}, {\n  countryIsoCode: \"AZ\",\n  countryName: \"Azerbaijan\",\n  phoneNumberCode: \"994\"\n}, {\n  countryIsoCode: \"BA\",\n  countryName: \"Bosnia and Herzegovina\",\n  phoneNumberCode: \"387\"\n}, {\n  countryIsoCode: \"BB\",\n  countryName: \"Barbados\",\n  phoneNumberCode: \"1246\"\n}, {\n  countryIsoCode: \"BD\",\n  countryName: \"Bangladesh\",\n  phoneNumberCode: \"880\"\n}, {\n  countryIsoCode: \"BE\",\n  countryName: \"Belgium\",\n  phoneNumberCode: \"32\"\n}, {\n  countryIsoCode: \"BF\",\n  countryName: \"Burkina Faso\",\n  phoneNumberCode: \"226\"\n}, {\n  countryIsoCode: \"BG\",\n  countryName: \"Bulgaria\",\n  phoneNumberCode: \"359\"\n}, {\n  countryIsoCode: \"BH\",\n  countryName: \"Bahrain\",\n  phoneNumberCode: \"973\"\n}, {\n  countryIsoCode: \"BI\",\n  countryName: \"Burundi\",\n  phoneNumberCode: \"257\"\n}, {\n  countryIsoCode: \"BJ\",\n  countryName: \"Benin\",\n  phoneNumberCode: \"229\"\n}, {\n  countryIsoCode: \"BL\",\n  countryName: \"Saint Barthelemy\",\n  phoneNumberCode: \"590\"\n}, {\n  countryIsoCode: \"BM\",\n  countryName: \"Bermuda\",\n  phoneNumberCode: \"1441\"\n}, {\n  countryIsoCode: \"BN\",\n  countryName: \"Brunei Darussalam\",\n  phoneNumberCode: \"673\"\n}, {\n  countryIsoCode: \"BO\",\n  countryName: \"Bolivia\",\n  phoneNumberCode: \"591\"\n}, {\n  countryIsoCode: \"BR\",\n  countryName: \"Brazil\",\n  phoneNumberCode: \"55\"\n}, {\n  countryIsoCode: \"BS\",\n  countryName: \"Bahamas\",\n  phoneNumberCode: \"1242\"\n}, {\n  countryIsoCode: \"BT\",\n  countryName: \"Bhutan\",\n  phoneNumberCode: \"975\"\n}, {\n  countryIsoCode: \"BV\",\n  countryName: \"Bouvet Island\",\n  phoneNumberCode: \"47\"\n}, {\n  countryIsoCode: \"BW\",\n  countryName: \"Botswana\",\n  phoneNumberCode: \"267\"\n}, {\n  countryIsoCode: \"BY\",\n  countryName: \"Belarus\",\n  phoneNumberCode: \"375\"\n}, {\n  countryIsoCode: \"BZ\",\n  countryName: \"Belize\",\n  phoneNumberCode: \"501\"\n}, {\n  countryIsoCode: \"CA\",\n  countryName: \"Canada\",\n  phoneNumberCode: \"1\"\n}, {\n  countryIsoCode: \"CC\",\n  countryName: \"Cocos (Keeling) Islands\",\n  phoneNumberCode: \"672\"\n}, {\n  countryIsoCode: \"CF\",\n  countryName: \"Central African Republic\",\n  phoneNumberCode: \"236\"\n}, {\n  countryIsoCode: \"CG\",\n  countryName: \"Congo\",\n  phoneNumberCode: \"242\"\n}, {\n  countryIsoCode: \"CH\",\n  countryName: \"Switzerland\",\n  phoneNumberCode: \"41\"\n}, {\n  countryIsoCode: \"CI\",\n  countryName: \"Cote d`Ivoire\",\n  phoneNumberCode: \"225\"\n}, {\n  countryIsoCode: \"CK\",\n  countryName: \"Cook Islands\",\n  phoneNumberCode: \"682\"\n}, {\n  countryIsoCode: \"CL\",\n  countryName: \"Chile\",\n  phoneNumberCode: \"56\"\n}, {\n  countryIsoCode: \"CM\",\n  countryName: \"Cameroon\",\n  phoneNumberCode: \"237\"\n}, {\n  countryIsoCode: \"CN\",\n  countryName: \"China\",\n  phoneNumberCode: \"86\"\n}, {\n  countryIsoCode: \"CO\",\n  countryName: \"Colombia\",\n  phoneNumberCode: \"57\"\n}, {\n  countryIsoCode: \"CR\",\n  countryName: \"Costa Rica\",\n  phoneNumberCode: \"506\"\n}, {\n  countryIsoCode: \"CU\",\n  countryName: \"Cuba\",\n  phoneNumberCode: \"53\"\n}, {\n  countryIsoCode: \"CV\",\n  countryName: \"Cape Verde\",\n  phoneNumberCode: \"238\"\n}, {\n  countryIsoCode: \"CW\",\n  countryName: \"Curacao\",\n  phoneNumberCode: \"5999\"\n}, {\n  countryIsoCode: \"CX\",\n  countryName: \"Christmas Island\",\n  phoneNumberCode: \"6189164\"\n}, {\n  countryIsoCode: \"CY\",\n  countryName: \"Cyprus\",\n  phoneNumberCode: \"357\"\n}, {\n  countryIsoCode: \"CZ\",\n  countryName: \"Czechia\",\n  phoneNumberCode: \"420\"\n}, {\n  countryIsoCode: \"DE\",\n  countryName: \"Germany\",\n  phoneNumberCode: \"49\"\n}, {\n  countryIsoCode: \"DJ\",\n  countryName: \"Djibouti\",\n  phoneNumberCode: \"253\"\n}, {\n  countryIsoCode: \"DK\",\n  countryName: \"Denmark\",\n  phoneNumberCode: \"45\"\n}, {\n  countryIsoCode: \"DM\",\n  countryName: \"Dominica\",\n  phoneNumberCode: \"1767\"\n}, {\n  countryIsoCode: \"DO\",\n  countryName: \"Dominican Republic\",\n  phoneNumberCode: \"1809\"\n}, {\n  countryIsoCode: \"DZ\",\n  countryName: \"Algeria\",\n  phoneNumberCode: \"213\"\n}, {\n  countryIsoCode: \"EC\",\n  countryName: \"Ecuador\",\n  phoneNumberCode: \"593\"\n}, {\n  countryIsoCode: \"EE\",\n  countryName: \"Estonia\",\n  phoneNumberCode: \"372\"\n}, {\n  countryIsoCode: \"EG\",\n  countryName: \"Egypt\",\n  phoneNumberCode: \"20\"\n}, {\n  countryIsoCode: \"EH\",\n  countryName: \"Western Sahara\",\n  phoneNumberCode: \"212\"\n}, {\n  countryIsoCode: \"ER\",\n  countryName: \"Eritrea\",\n  phoneNumberCode: \"291\"\n}, {\n  countryIsoCode: \"ES\",\n  countryName: \"Spain\",\n  phoneNumberCode: \"34\"\n}, {\n  countryIsoCode: \"ET\",\n  countryName: \"Ethiopia\",\n  phoneNumberCode: \"251\"\n}, {\n  countryIsoCode: \"FI\",\n  countryName: \"Finland\",\n  phoneNumberCode: \"358\"\n}, {\n  countryIsoCode: \"FJ\",\n  countryName: \"Fiji\",\n  phoneNumberCode: \"679\"\n}, {\n  countryIsoCode: \"FO\",\n  countryName: \"Faroe Islands\",\n  phoneNumberCode: \"298\"\n}, {\n  countryIsoCode: \"FR\",\n  countryName: \"France\",\n  phoneNumberCode: \"33\"\n}, {\n  countryIsoCode: \"GA\",\n  countryName: \"Gabon\",\n  phoneNumberCode: \"241\"\n}, {\n  countryIsoCode: \"GB\",\n  countryName: \"United Kingdom\",\n  phoneNumberCode: \"44\"\n}, {\n  countryIsoCode: \"GD\",\n  countryName: \"Grenada\",\n  phoneNumberCode: \"1473\"\n}, {\n  countryIsoCode: \"GE\",\n  countryName: \"Georgia\",\n  phoneNumberCode: \"995\"\n}, {\n  countryIsoCode: \"GF\",\n  countryName: \"French Guiana\",\n  phoneNumberCode: \"594\"\n}, {\n  countryIsoCode: \"GG\",\n  countryName: \"Guernsey\",\n  phoneNumberCode: \"441481\"\n}, {\n  countryIsoCode: \"GH\",\n  countryName: \"Ghana\",\n  phoneNumberCode: \"233\"\n}, {\n  countryIsoCode: \"GI\",\n  countryName: \"Gibraltar\",\n  phoneNumberCode: \"350\"\n}, {\n  countryIsoCode: \"GL\",\n  countryName: \"Greenland\",\n  phoneNumberCode: \"299\"\n}, {\n  countryIsoCode: \"GM\",\n  countryName: \"Gambia\",\n  phoneNumberCode: \"220\"\n}, {\n  countryIsoCode: \"GN\",\n  countryName: \"Guinea\",\n  phoneNumberCode: \"224\"\n}, {\n  countryIsoCode: \"GP\",\n  countryName: \"Guadeloupe\",\n  phoneNumberCode: \"590\"\n}, {\n  countryIsoCode: \"GQ\",\n  countryName: \"Equatorial Guinea\",\n  phoneNumberCode: \"240\"\n}, {\n  countryIsoCode: \"GR\",\n  countryName: \"Greece\",\n  phoneNumberCode: \"30\"\n}, {\n  countryIsoCode: \"GT\",\n  countryName: \"Guatemala\",\n  phoneNumberCode: \"502\"\n}, {\n  countryIsoCode: \"GU\",\n  countryName: \"Guam\",\n  phoneNumberCode: \"1671\"\n}, {\n  countryIsoCode: \"GW\",\n  countryName: \"Guinea-Bissau\",\n  phoneNumberCode: \"245\"\n}, {\n  countryIsoCode: \"GY\",\n  countryName: \"Guyana\",\n  phoneNumberCode: \"592\"\n}, {\n  countryIsoCode: \"HN\",\n  countryName: \"Honduras\",\n  phoneNumberCode: \"504\"\n}, {\n  countryIsoCode: \"HR\",\n  countryName: \"Croatia\",\n  phoneNumberCode: \"385\"\n}, {\n  countryIsoCode: \"HT\",\n  countryName: \"Haiti\",\n  phoneNumberCode: \"509\"\n}, {\n  countryIsoCode: \"HU\",\n  countryName: \"Hungary\",\n  phoneNumberCode: \"36\"\n}, {\n  countryIsoCode: \"ID\",\n  countryName: \"Indonesia\",\n  phoneNumberCode: \"62\"\n}, {\n  countryIsoCode: \"IE\",\n  countryName: \"Ireland\",\n  phoneNumberCode: \"353\"\n}, {\n  countryIsoCode: \"IL\",\n  countryName: \"Israel\",\n  phoneNumberCode: \"972\"\n}, {\n  countryIsoCode: \"IM\",\n  countryName: \"Isle Of Man\",\n  phoneNumberCode: \"441624\"\n}, {\n  countryIsoCode: \"IN\",\n  countryName: \"India\",\n  phoneNumberCode: \"91\"\n}, {\n  countryIsoCode: \"IO\",\n  countryName: \"British Indian Ocean Territory\",\n  phoneNumberCode: \"246\"\n}, {\n  countryIsoCode: \"IQ\",\n  countryName: \"Iraq\",\n  phoneNumberCode: \"964\"\n}, {\n  countryIsoCode: \"IR\",\n  countryName: \"Iran (Islamic Republic of)\",\n  phoneNumberCode: \"98\"\n}, {\n  countryIsoCode: \"IS\",\n  countryName: \"Iceland\",\n  phoneNumberCode: \"354\"\n}, {\n  countryIsoCode: \"IT\",\n  countryName: \"Italy\",\n  phoneNumberCode: \"39\"\n}, {\n  countryIsoCode: \"JE\",\n  countryName: \"Jersey\",\n  phoneNumberCode: \"441534\"\n}, {\n  countryIsoCode: \"JM\",\n  countryName: \"Jamaica\",\n  phoneNumberCode: \"1876\"\n}, {\n  countryIsoCode: \"JO\",\n  countryName: \"Jordan\",\n  phoneNumberCode: \"962\"\n}, {\n  countryIsoCode: \"JP\",\n  countryName: \"Japan\",\n  phoneNumberCode: \"81\"\n}, {\n  countryIsoCode: \"KE\",\n  countryName: \"Kenya\",\n  phoneNumberCode: \"254\"\n}, {\n  countryIsoCode: \"KG\",\n  countryName: \"Kyrgyzstan\",\n  phoneNumberCode: \"996\"\n}, {\n  countryIsoCode: \"KH\",\n  countryName: \"Cambodia\",\n  phoneNumberCode: \"855\"\n}, {\n  countryIsoCode: \"KI\",\n  countryName: \"Kiribati\",\n  phoneNumberCode: \"686\"\n}, {\n  countryIsoCode: \"KM\",\n  countryName: \"Comoros\",\n  phoneNumberCode: \"269\"\n}, {\n  countryIsoCode: \"KN\",\n  countryName: \"Saint Kitts and Nevis\",\n  phoneNumberCode: \"1869\"\n}, {\n  countryIsoCode: \"KR\",\n  countryName: \"Republic of Korea\",\n  phoneNumberCode: \"82\"\n}, {\n  countryIsoCode: \"KW\",\n  countryName: \"Kuwait\",\n  phoneNumberCode: \"965\"\n}, {\n  countryIsoCode: \"KY\",\n  countryName: \"Cayman Islands\",\n  phoneNumberCode: \"1345\"\n}, {\n  countryIsoCode: \"KZ\",\n  countryName: \"Kazakhstan\",\n  phoneNumberCode: \"7\"\n}, {\n  countryIsoCode: \"LB\",\n  countryName: \"Lebanon\",\n  phoneNumberCode: \"961\"\n}, {\n  countryIsoCode: \"LC\",\n  countryName: \"Saint Lucia\",\n  phoneNumberCode: \"1758\"\n}, {\n  countryIsoCode: \"LI\",\n  countryName: \"Liechtenstein\",\n  phoneNumberCode: \"423\"\n}, {\n  countryIsoCode: \"LK\",\n  countryName: \"Sri Lanka\",\n  phoneNumberCode: \"94\"\n}, {\n  countryIsoCode: \"LR\",\n  countryName: \"Liberia\",\n  phoneNumberCode: \"231\"\n}, {\n  countryIsoCode: \"LS\",\n  countryName: \"Lesotho\",\n  phoneNumberCode: \"266\"\n}, {\n  countryIsoCode: \"LT\",\n  countryName: \"Lithuania\",\n  phoneNumberCode: \"370\"\n}, {\n  countryIsoCode: \"LU\",\n  countryName: \"Luxembourg\",\n  phoneNumberCode: \"352\"\n}, {\n  countryIsoCode: \"LV\",\n  countryName: \"Latvia\",\n  phoneNumberCode: \"371\"\n}, {\n  countryIsoCode: \"LY\",\n  countryName: \"Libyan Arab Jamahiriya\",\n  phoneNumberCode: \"218\"\n}, {\n  countryIsoCode: \"MA\",\n  countryName: \"Morocco\",\n  phoneNumberCode: \"212\"\n}, {\n  countryIsoCode: \"MC\",\n  countryName: \"Monaco\",\n  phoneNumberCode: \"377\"\n}, {\n  countryIsoCode: \"MD\",\n  countryName: \"Moldova (Republic of)\",\n  phoneNumberCode: \"373\"\n}, {\n  countryIsoCode: \"ME\",\n  countryName: \"Montenegro\",\n  phoneNumberCode: \"382\"\n}, {\n  countryIsoCode: \"MF\",\n  countryName: \"Saint Martin French\",\n  phoneNumberCode: \"590\"\n}, {\n  countryIsoCode: \"MG\",\n  countryName: \"Madagascar\",\n  phoneNumberCode: \"261\"\n}, {\n  countryIsoCode: \"MH\",\n  countryName: \"Marshall Islands\",\n  phoneNumberCode: \"692\"\n}, {\n  countryIsoCode: \"ML\",\n  countryName: \"Mali\",\n  phoneNumberCode: \"223\"\n}, {\n  countryIsoCode: \"MM\",\n  countryName: \"Myanmar\",\n  phoneNumberCode: \"95\"\n}, {\n  countryIsoCode: \"MN\",\n  countryName: \"Mongolia\",\n  phoneNumberCode: \"976\"\n}, {\n  countryIsoCode: \"MP\",\n  countryName: \"Northern Mariana Islands\",\n  phoneNumberCode: \"1670\"\n}, {\n  countryIsoCode: \"MQ\",\n  countryName: \"Martinique\",\n  phoneNumberCode: \"596\"\n}, {\n  countryIsoCode: \"MR\",\n  countryName: \"Mauritania\",\n  phoneNumberCode: \"222\"\n}, {\n  countryIsoCode: \"MS\",\n  countryName: \"Montserrat\",\n  phoneNumberCode: \"1664\"\n}, {\n  countryIsoCode: \"MT\",\n  countryName: \"Malta\",\n  phoneNumberCode: \"356\"\n}, {\n  countryIsoCode: \"MU\",\n  countryName: \"Mauritius\",\n  phoneNumberCode: \"230\"\n}, {\n  countryIsoCode: \"MV\",\n  countryName: \"Maldives\",\n  phoneNumberCode: \"960\"\n}, {\n  countryIsoCode: \"MW\",\n  countryName: \"Malawi\",\n  phoneNumberCode: \"265\"\n}, {\n  countryIsoCode: \"MX\",\n  countryName: \"Mexico\",\n  phoneNumberCode: \"52\"\n}, {\n  countryIsoCode: \"MY\",\n  countryName: \"Malaysia\",\n  phoneNumberCode: \"60\"\n}, {\n  countryIsoCode: \"MZ\",\n  countryName: \"Mozambique\",\n  phoneNumberCode: \"258\"\n}, {\n  countryIsoCode: \"NA\",\n  countryName: \"Namibia\",\n  phoneNumberCode: \"264\"\n}, {\n  countryIsoCode: \"NC\",\n  countryName: \"New Caledonia\",\n  phoneNumberCode: \"687\"\n}, {\n  countryIsoCode: \"NE\",\n  countryName: \"Niger\",\n  phoneNumberCode: \"227\"\n}, {\n  countryIsoCode: \"NF\",\n  countryName: \"Norfolk Island\",\n  phoneNumberCode: \"672\"\n}, {\n  countryIsoCode: \"NG\",\n  countryName: \"Nigeria\",\n  phoneNumberCode: \"234\"\n}, {\n  countryIsoCode: \"NI\",\n  countryName: \"Nicaragua\",\n  phoneNumberCode: \"505\"\n}, {\n  countryIsoCode: \"NL\",\n  countryName: \"Netherlands\",\n  phoneNumberCode: \"31\"\n}, {\n  countryIsoCode: \"NO\",\n  countryName: \"Norway\",\n  phoneNumberCode: \"47\"\n}, {\n  countryIsoCode: \"NP\",\n  countryName: \"Nepal\",\n  phoneNumberCode: \"977\"\n}, {\n  countryIsoCode: \"NR\",\n  countryName: \"Nauru\",\n  phoneNumberCode: \"674\"\n}, {\n  countryIsoCode: \"NU\",\n  countryName: \"Niue\",\n  phoneNumberCode: \"683\"\n}, {\n  countryIsoCode: \"NZ\",\n  countryName: \"New Zealand\",\n  phoneNumberCode: \"64\"\n}, {\n  countryIsoCode: \"OM\",\n  countryName: \"Oman\",\n  phoneNumberCode: \"968\"\n}, {\n  countryIsoCode: \"PA\",\n  countryName: \"Panama\",\n  phoneNumberCode: \"507\"\n}, {\n  countryIsoCode: \"PE\",\n  countryName: \"Peru\",\n  phoneNumberCode: \"51\"\n}, {\n  countryIsoCode: \"PF\",\n  countryName: \"French Polynesia\",\n  phoneNumberCode: \"689\"\n}, {\n  countryIsoCode: \"PG\",\n  countryName: \"Papua New Guinea\",\n  phoneNumberCode: \"675\"\n}, {\n  countryIsoCode: \"PH\",\n  countryName: \"Philippines\",\n  phoneNumberCode: \"63\"\n}, {\n  countryIsoCode: \"PK\",\n  countryName: \"Pakistan\",\n  phoneNumberCode: \"92\"\n}, {\n  countryIsoCode: \"PL\",\n  countryName: \"Poland\",\n  phoneNumberCode: \"48\"\n}, {\n  countryIsoCode: \"PM\",\n  countryName: \"Saint Pierre and Miquelon\",\n  phoneNumberCode: \"508\"\n}, {\n  countryIsoCode: \"PN\",\n  countryName: \"Pitcairn\",\n  phoneNumberCode: \"64\"\n}, {\n  countryIsoCode: \"PR\",\n  countryName: \"Puerto Rico\",\n  phoneNumberCode: \"1787\"\n}, {\n  countryIsoCode: \"PT\",\n  countryName: \"Portugal\",\n  phoneNumberCode: \"351\"\n}, {\n  countryIsoCode: \"PW\",\n  countryName: \"Palau\",\n  phoneNumberCode: \"680\"\n}, {\n  countryIsoCode: \"PY\",\n  countryName: \"Paraguay\",\n  phoneNumberCode: \"595\"\n}, {\n  countryIsoCode: \"QA\",\n  countryName: \"Qatar\",\n  phoneNumberCode: \"974\"\n}, {\n  countryIsoCode: \"RE\",\n  countryName: \"Reunion\",\n  phoneNumberCode: \"262\"\n}, {\n  countryIsoCode: \"RO\",\n  countryName: \"Romania\",\n  phoneNumberCode: \"40\"\n}, {\n  countryIsoCode: \"RS\",\n  countryName: \"Serbia\",\n  phoneNumberCode: \"381\"\n}, {\n  countryIsoCode: \"RU\",\n  countryName: \"Russian Federation\",\n  phoneNumberCode: \"7\"\n}, {\n  countryIsoCode: \"RW\",\n  countryName: \"Rwanda\",\n  phoneNumberCode: \"250\"\n}, {\n  countryIsoCode: \"SA\",\n  countryName: \"Saudi Arabia\",\n  phoneNumberCode: \"966\"\n}, {\n  countryIsoCode: \"SB\",\n  countryName: \"Solomon Islands\",\n  phoneNumberCode: \"677\"\n}, {\n  countryIsoCode: \"SC\",\n  countryName: \"Seychelles\",\n  phoneNumberCode: \"248\"\n}, {\n  countryIsoCode: \"SD\",\n  countryName: \"Sudan\",\n  phoneNumberCode: \"249\"\n}, {\n  countryIsoCode: \"SE\",\n  countryName: \"Sweden\",\n  phoneNumberCode: \"46\"\n}, {\n  countryIsoCode: \"SG\",\n  countryName: \"Singapore\",\n  phoneNumberCode: \"65\"\n}, {\n  countryIsoCode: \"SH\",\n  countryName: \"Saint Helena\",\n  phoneNumberCode: \"290\"\n}, {\n  countryIsoCode: \"SI\",\n  countryName: \"Slovenia\",\n  phoneNumberCode: \"386\"\n}, {\n  countryIsoCode: \"SK\",\n  countryName: \"Slovakia\",\n  phoneNumberCode: \"421\"\n}, {\n  countryIsoCode: \"SL\",\n  countryName: \"Sierra Leone\",\n  phoneNumberCode: \"232\"\n}, {\n  countryIsoCode: \"SM\",\n  countryName: \"San Marino\",\n  phoneNumberCode: \"378\"\n}, {\n  countryIsoCode: \"SN\",\n  countryName: \"Senegal\",\n  phoneNumberCode: \"221\"\n}, {\n  countryIsoCode: \"SO\",\n  countryName: \"Somalia\",\n  phoneNumberCode: \"252\"\n}, {\n  countryIsoCode: \"SR\",\n  countryName: \"Suriname\",\n  phoneNumberCode: \"597\"\n}, {\n  countryIsoCode: \"SS\",\n  countryName: \"South Sudan\",\n  phoneNumberCode: \"211\"\n}, {\n  countryIsoCode: \"ST\",\n  countryName: \"Sao Tome and Principe\",\n  phoneNumberCode: \"239\"\n}, {\n  countryIsoCode: \"SV\",\n  countryName: \"El Salvador\",\n  phoneNumberCode: \"503\"\n}, {\n  countryIsoCode: \"SX\",\n  countryName: \"Sint Maarten Dutch\",\n  phoneNumberCode: \"1721\"\n}, {\n  countryIsoCode: \"SY\",\n  countryName: \"Syrian Arab Republic\",\n  phoneNumberCode: \"963\"\n}, {\n  countryIsoCode: \"SZ\",\n  countryName: \"Swaziland\",\n  phoneNumberCode: \"268\"\n}, {\n  countryIsoCode: \"TC\",\n  countryName: \"Turks and Caicos Islands\",\n  phoneNumberCode: \"1649\"\n}, {\n  countryIsoCode: \"TD\",\n  countryName: \"Chad\",\n  phoneNumberCode: \"235\"\n}, {\n  countryIsoCode: \"TF\",\n  countryName: \"French Southern Territories\",\n  phoneNumberCode: \"1\"\n}, {\n  countryIsoCode: \"TG\",\n  countryName: \"Togo\",\n  phoneNumberCode: \"228\"\n}, {\n  countryIsoCode: \"TH\",\n  countryName: \"Thailand\",\n  phoneNumberCode: \"66\"\n}, {\n  countryIsoCode: \"TJ\",\n  countryName: \"Tajikistan\",\n  phoneNumberCode: \"992\"\n}, {\n  countryIsoCode: \"TK\",\n  countryName: \"Tokelau\",\n  phoneNumberCode: \"690\"\n}, {\n  countryIsoCode: \"TL\",\n  countryName: \"Timor-Leste (East Timor)\",\n  phoneNumberCode: \"670\"\n}, {\n  countryIsoCode: \"TM\",\n  countryName: \"Turkmenistan\",\n  phoneNumberCode: \"993\"\n}, {\n  countryIsoCode: \"TN\",\n  countryName: \"Tunisia\",\n  phoneNumberCode: \"216\"\n}, {\n  countryIsoCode: \"TO\",\n  countryName: \"Tonga\",\n  phoneNumberCode: \"676\"\n}, {\n  countryIsoCode: \"TR\",\n  countryName: \"Turkey\",\n  phoneNumberCode: \"90\"\n}, {\n  countryIsoCode: \"TT\",\n  countryName: \"Trinidad and Tobago\",\n  phoneNumberCode: \"1868\"\n}, {\n  countryIsoCode: \"TV\",\n  countryName: \"Tuvalu\",\n  phoneNumberCode: \"688\"\n}, {\n  countryIsoCode: \"TW\",\n  countryName: \"Taiwan (Province of China)\",\n  phoneNumberCode: \"886\"\n}, {\n  countryIsoCode: \"TZ\",\n  countryName: \"Tanzania (United Republic of)\",\n  phoneNumberCode: \"255\"\n}, {\n  countryIsoCode: \"UA\",\n  countryName: \"Ukraine\",\n  phoneNumberCode: \"380\"\n}, {\n  countryIsoCode: \"UG\",\n  countryName: \"Uganda\",\n  phoneNumberCode: \"256\"\n}, {\n  countryIsoCode: \"US\",\n  countryName: \"United States\",\n  phoneNumberCode: \"1\"\n}, {\n  countryIsoCode: \"UY\",\n  countryName: \"Uruguay\",\n  phoneNumberCode: \"598\"\n}, {\n  countryIsoCode: \"UZ\",\n  countryName: \"Uzbekistan\",\n  phoneNumberCode: \"998\"\n}, {\n  countryIsoCode: \"VE\",\n  countryName: \"Venezuela\",\n  phoneNumberCode: \"58\"\n}, {\n  countryIsoCode: \"VG\",\n  countryName: \"Virgin Islands British\",\n  phoneNumberCode: \"1284\"\n}, {\n  countryIsoCode: \"VI\",\n  countryName: \"Virgin Islands US\",\n  phoneNumberCode: \"1340\"\n}, {\n  countryIsoCode: \"VN\",\n  countryName: \"Vietnam\",\n  phoneNumberCode: \"84\"\n}, {\n  countryIsoCode: \"VU\",\n  countryName: \"Vanuatu\",\n  phoneNumberCode: \"678\"\n}, {\n  countryIsoCode: \"WF\",\n  countryName: \"Wallis and Futuna Islands\",\n  phoneNumberCode: \"681\"\n}, {\n  countryIsoCode: \"WS\",\n  countryName: \"Samoa\",\n  phoneNumberCode: \"685\"\n}, {\n  countryIsoCode: \"XK\",\n  countryName: \"Kosovo\",\n  phoneNumberCode: \"383\"\n}, {\n  countryIsoCode: \"YE\",\n  countryName: \"Yemen\",\n  phoneNumberCode: \"967\"\n}, {\n  countryIsoCode: \"YT\",\n  countryName: \"Mayotte\",\n  phoneNumberCode: \"262269\"\n}, {\n  countryIsoCode: \"YU\",\n  countryName: \"Yugoslavia\",\n  phoneNumberCode: \"38\"\n}, {\n  countryIsoCode: \"ZA\",\n  countryName: \"South Africa\",\n  phoneNumberCode: \"27\"\n}, {\n  countryIsoCode: \"ZM\",\n  countryName: \"Zambia\",\n  phoneNumberCode: \"260\"\n}, {\n  countryIsoCode: \"ZW\",\n  countryName: \"Zimbabwe\",\n  phoneNumberCode: \"263\"\n}];\n\nexport { supportedSmsCountries as s };\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;IAAC;QAC7B,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;IAAG;QACD,gBAAgB;QAChB,aAAa;QACb,iBAAiB;IACnB;CAAE","ignoreList":[0],"debugId":null}}]
}